{"version":3,"file":"9451.1ff1d9c6ed364272a571.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.module.scss?94bc","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.type === 'chatEditPhoto' || action?.type === 'suggestProfilePhoto') {\n    return {\n      media: action.photo!,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ChannelAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n    case MediaViewerOrigin.ChannelAvatar:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  timestamp?: number;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  timestamp,\n  handleSponsoredClick,\n  onClose,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    if (!timestamp) return;\n    videoRef.current!.currentTime = timestamp;\n    setCurrentTime(timestamp);\n  }, [setCurrentTime, timestamp]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION } from '../../config';\nimport {\n  selectIsMessageProtected, selectMessageTimestampableDuration, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport useThrottledCallback from '../../hooks/useThrottledCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  threadId?: ThreadId;\n  timestamp?: number;\n  maxTimestamp?: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst PLAYBACK_SAVE_INTERVAL = 1000;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  threadId,\n  timestamp,\n  maxTimestamp,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const { updateLastPlaybackTimestamp } = getActions();\n\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n  const [getCurrentTime] = useCurrentTimeSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const updatePlaybackTimestamp = useThrottledCallback(() => {\n    if (!isActive || !textMessage || media?.mediaType !== 'video') return;\n    if (media.duration < MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION) return;\n\n    const message = 'id' in textMessage ? textMessage : undefined;\n    const currentTime = getCurrentTime();\n    if (!currentTime || !message || message.isInAlbum) return;\n\n    // Reset timestamp if we are close to the end of the video\n    const newTimestamp = media.duration - currentTime > PLAYBACK_SAVE_INTERVAL / 1000 ? currentTime : undefined;\n    updateLastPlaybackTimestamp({ chatId: message.chatId, messageId: message.id, timestamp: newTimestamp });\n  }, [getCurrentTime, isActive, media, textMessage], PLAYBACK_SAVE_INTERVAL);\n\n  useSignalEffect(updatePlaybackTimestamp, [getCurrentTime]);\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({\n      message: textMessage, maxTimestamp, threadId, forcePlayback: true, isForMediaViewer: true,\n    }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n          timestamp={timestamp}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n      timestamp,\n      threadId,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    const maxTimestamp = message && selectMessageTimestampableDuration(global, message, true);\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n      threadId,\n      timestamp,\n      maxTimestamp,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getPeerTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target instanceof HTMLElement && e.target.closest('a')) return; // Prevent closing on timestamp click\n\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, peerId: chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getPeerTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getPeerTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && (!chatFullInfo || getCanPostInChat(chat, undefined, undefined, chatFullInfo));\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/browser/url';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (!url) {\n      return;\n    }\n\n    window.open(ensureProtocol(url), '_blank', 'noopener noreferrer');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlText', { url: renderingUrl }, { withNodes: true, withMarkdown: true }))}\n      confirmLabel={lang('OpenUrlConfirm')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else if (currentAuth?.url) {\n      window.open(ensureProtocol(currentAuth.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n    openPreparedInlineMessageModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_send_prepared_message') {\n      if (!bot || !webAppKey) return;\n      const { id } = eventData;\n      openPreparedInlineMessageModal({ botId: bot.id, messageId: id, webAppKey });\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.accuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-label={lang('WebAppCollapse')}\n            onClick={handleCollapseClick}\n          >\n            <Icon\n              name=\"down\"\n              className={styles.icon}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('AriaMoreButton')}\n            onClick={handleShowContextMenu}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const cachedPosition = global.settings.miniAppsCachedPosition;\n    const cachedSize = global.settings.miniAppsCachedSize;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition,\n      cachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium\n      ? lang('OK')\n      : lang('SubscribeToPremium', { price: formatCurrency(lang, perMonthPrice, currency) }, { withNodes: true });\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={oldLang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={oldLang(LIMITS_TITLES[limit])}\n                        description={oldLang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {oldLang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const oldLang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={oldLang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {oldLang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrencyAsString(amount, currency, oldLang.code)} x ${users!}`\n            : oldLang('PricePerMonth', formatCurrencyAsString(perMonth, currency, oldLang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrencyAsString(amount, currency, oldLang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      lang,\n      perMonthPrice,\n      currency,\n    );\n  }, [selectedSubscriptionOption, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : oldLang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = oldLang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? oldLang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : oldLang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : oldLang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return oldLang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? oldLang('TelegramPremiumUserDialogSubtitle')\n      : oldLang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={oldLang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {oldLang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={oldLang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={oldLang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {oldLang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, undefined, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, undefined, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport { selectSponsoredMessage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredMessageContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ message, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(message);\n  const isMonetizationSharing = message?.canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && message && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            message={message}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const message = modal?.chatId ? selectSponsoredMessage(global, modal.chatId) : undefined;\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      message,\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectIsCurrentUserPremium, selectStickerSet, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n};\n\nconst INTERVAL = 3000;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getGeolocationStatus } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Rzj2LMLf\",\"content\":\"Ve4u2KVI\",\"modalTitle\":\"E42tgAwD\",\"container\":\"pNSCKAVN\",\"header\":\"P1fPh6h8\",\"actionMessageView\":\"McJgXCtB\",\"info\":\"xWnXsG7q\",\"background\":\"_6w75ldP\",\"customBgImage\":\"CZkpv8n0\",\"customBgColor\":\"VJAYrDF_\",\"withTransition\":\"lElCwweL\",\"blurred\":\"m8xzfVvU\",\"withRightColumn\":\"rJCyBVMB\"};","import React, {\n  type FC,\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getMockPreparedMessageFromResult, getUserFullName } from '../../../global/helpers';\nimport { selectTheme, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Message from '../../middle/message/Message';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PreparedMessageModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['preparedMessageModal'];\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  bot?: ApiUser;\n};\n\nconst PreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  customBackground,\n  backgroundColor,\n  bot,\n}) => {\n  const {\n    closePreparedInlineMessageModal, sendWebAppEvent, openSharePreparedMessageModal,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const { webAppKey, message, botId } = modal || {};\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const handleOpenClick = useLastCallback(() => {\n    if (webAppKey && botId && message) {\n      openSharePreparedMessageModal({\n        webAppKey,\n        message,\n      });\n      closePreparedInlineMessageModal();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closePreparedInlineMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.header}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={buildClassName('modal-title', styles.modalTitle)}>\n          {lang('BotShareMessage')}\n        </h3>\n      </div>\n    );\n  }, [lang, modal]);\n\n  const localMessage = useMemo(() => {\n    if (!botId || !message || !webAppKey) return undefined;\n    return getMockPreparedMessageFromResult(botId, message);\n  }, [botId, message, webAppKey]);\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  return (\n    <Modal\n      dialogRef={containerRef}\n      isOpen={isOpen}\n      header={header}\n      onClose={handleCloseClick}\n      className={styles.root}\n      contentClassName={styles.content}\n    >\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        {localMessage && (\n          <Message\n            key={botId}\n            message={localMessage}\n            threadId={MAIN_THREAD_ID}\n            messageListType=\"thread\"\n            noComments\n            noReplies\n            appearanceOrder={0}\n            isJustAdded={false}\n            isFirstInGroup\n            isLastInGroup\n            isLastInList={false}\n            isFirstInDocumentGroup={false}\n            isLastInDocumentGroup={false}\n          />\n        )}\n      </div>\n      <div className={styles.container}>\n        <p className={styles.info}>\n          {lang('WebAppShareMessageInfo', { user: getUserFullName(bot) })}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={handleOpenClick}\n        >\n          {lang('BotShareMessageShare')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }) => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = global.settings.themes[theme] || {};\n    const bot = modal ? selectUser(global, modal?.botId) : undefined;\n\n    return {\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      bot,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PreparedMessageModal));\n","import React, {\n  type FC,\n  memo, useEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getPeerTitle } from '../../../global/helpers';\nimport { selectPeer } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RecipientPicker from '../../common/RecipientPicker';\n\nexport type OwnProps = {\n  modal: TabState['sharePreparedMessageModal'];\n};\n\nconst SharePreparedMessageModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const {\n    closeSharePreparedMessageModal,\n    sendInlineBotResult,\n    sendWebAppEvent,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { message, filter, webAppKey } = modal || {};\n\n  const handleClose = useLastCallback(() => {\n    closeSharePreparedMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const handleSelectRecipient = useLastCallback((id: string, threadId?: ThreadId) => {\n    if (message && webAppKey) {\n      const global = getGlobal();\n      const peer = selectPeer(global, id);\n      sendInlineBotResult({\n        chatId: id,\n        threadId: threadId || MAIN_THREAD_ID,\n        id: message.result.id,\n        queryId: message.result.queryId,\n      });\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_sent',\n        },\n      });\n      showNotification({\n        message: lang('BotSharedToOne', getPeerTitle(lang, peer!)),\n      });\n      closeSharePreparedMessageModal();\n    }\n  });\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(SharePreparedMessageModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPeerTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n  shouldWarnAboutSvg?: boolean;\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n    setSettingOption,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const handleMessageDownload = useLastCallback(() => {\n    if (shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: false });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={className}>\n        <div className=\"MessageSelectToolbar-inner\">\n          <Button\n            color=\"translucent\"\n            round\n            onClick={handleExitMessageSelectMode}\n            ariaLabel=\"Exit select mode\"\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n            {formattedMessagesCount}\n          </span>\n\n          {Boolean(selectedMessagesCount) && (\n            <div className=\"MessageSelectToolbar-actions\">\n              {messageListType !== 'scheduled' && canForwardMessages && (\n                renderButton(\n                  'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n                )\n              )}\n              {canReportMessages && (\n                renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n              )}\n              {canDownloadMessages && !hasProtectedMessage && (\n                renderButton('download', lang('lng_media_download'), handleMessageDownload)\n              )}\n              {!hasProtectedMessage && (\n                renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n              )}\n              {canDeleteMessages && (\n                renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const chat = selectCurrentChat(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                withOpenAppButton\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title.text}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON, IS_SNAP_EFFECT_SUPPORTED, IS_WAVE_TRANSFORM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  languages?: ApiLanguage[];\n} & Pick<ISettings, | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const languages = global.settings.languages;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(hasPrivateChatsNotifications\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          subLabel={lang(hasPrivateChatsMessagePreview\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? oldLang('PrivacyMessagesContactsAndPremium')\n                : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onScreenSelect,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('RecoveryEmailSubtitle')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen, undefined, undefined, false);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          className=\"dialog-checkbox-group\"\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    reportMessages({ chatId, messageIds: [] });\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {lang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed;\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  onSendWhenOnline,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          className=\"dialog-checkbox\"\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult;\n  onClick: (result: ApiBotInlineResult | ApiBotInlineMediaResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, description,\n  } = inlineResult;\n\n  const url = 'url' in inlineResult ? inlineResult.url : undefined;\n  const webThumbnail = 'webThumbnail' in inlineResult ? inlineResult.webThumbnail : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineMediaResult | ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport type { LangFn } from '../../util/localization';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(lang, tipAmount!, invoice.currency)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(lang, tip, invoice.currency, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = oldLang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, oldLang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang, oldLang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: oldLang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: oldLang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: oldLang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: oldLang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: oldLang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: oldLang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  lang: LangFn, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(lang, value, currency)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(lang, amount, currency),\n    value,\n  }))), [shippingOptions, currency, lang]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{oldLang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","undefined","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","id","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","ChannelAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","memo","ReportAvatarModal","isOpen","peerId","onClose","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","lang","useOldLang","REPORT_OPTIONS","label","title","React","Modal","onEnter","className","RadioGroup","name","options","onChange","selected","InputText","Button","color","isText","onClick","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","useCallback","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","Icon","renderDeleteModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","getCurrentTime","setCurrentTime","useCurrentTimeSignal","MediaViewerFooter","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","stopPropagation","dir","isRectangular","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","timestamp","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","maxTimestamp","selectMessageTimestampableDuration","MediaViewerContent","withAnimation","isMoving","onFooterClick","updateLastPlaybackTimestamp","toggleControlsOnMove","updatePlaybackTimestamp","useThrottledCallback","MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION","isInAlbum","newTimestamp","PLAYBACK_SAVE_INTERVAL","useSignalEffect","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","includes","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","HTMLElement","isFromMedia","isMedia","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","header","closeButton","headerTitle","renderHeaderContent","slideClassName","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","PeerColorWrapper","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","disableScrolling","enableScrolling","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","scrollHeight","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","toLowerCase","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","pick","messageList","getReadableErrorText","Notifications","notifications","notification","Notification","SafeLinkModal","toggleSafeLinkModal","useLang","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","withNodes","withMarkdown","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","Left","Right","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","oldLang","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","userFullInfo","selectUserFullInfo","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","openPreparedInlineMessageModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","backButtonCaption","hasHeaderElement","viewBox","renderDefaultPlaceholder","sandbox","allow","allowFullScreen","hasCloseButton","filename","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","cachedPosition","miniAppsCachedPosition","cachedSize","miniAppsCachedSize","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","isLowStackPriority","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","price","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","formatCurrencyAsString","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","CustomEmoji","isBig","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","stars","filteredGifts","basicGift","userCountOptions","winner","winnerCountOptions","winners","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","hasAbsoluteCloseButton","loopLimit","PeerChip","mockPeer","withEmojiStatus","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","Tab","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","isMonetizationSharing","canReport","renderingIsNewDesign","regularAdContent","SafeLink","listItemData","TableAboutModal","headerIconName","withSeparator","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","VerificationMonetizationModal","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","EmojiStatusAccessModal","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","LocationAccessModal","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","ReportAdModal","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","isBlurred","isBackgroundBlurred","patternColor","background","customBackground","themes","PreparedMessageModal","closePreparedInlineMessageModal","openSharePreparedMessageModal","customBackgroundValue","useCustomBackground","handleOpenClick","localMessage","getMockPreparedMessageFromResult","bgClassName","inert","Message","noComments","noReplies","appearanceOrder","isJustAdded","isFirstInGroup","isLastInGroup","isLastInList","isFirstInDocumentGroup","isLastInDocumentGroup","SharePreparedMessageModal","closeSharePreparedMessageModal","sendInlineBotResult","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","DeleteMessageModal","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","opt","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","shouldWarnAboutSvg","byKey","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","setSettingOption","handleCopy","useHotkeys","useCopySelectedMessages","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","handleMessageDownload","handleSvgConfirm","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","userName","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","Separator","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","messages","searchChatId","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","chatIds","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","premiumSection","handleOpenPremiumModal","StarIcon","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","SettingsGeneral","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","balance","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","SettingsPrivacyVisibility","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","STICKER_SIZE_TWO_FA","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","isScheduleRequested","isPreloadedGlobally","scheduledAt","handleCopyLink","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","MiddleSearchResult","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","tag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","noForcedUpperCase","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","maxUniqueReactions","enabledReactions","reactionsLimit","ReactionPickerLimited","isTouchScreen","currentReactions","shouldUseCurrentReactions","allAvailableReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","isForbidden","ReactionPicker","toggleReaction","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","addLocalPaidReaction","openPaidReactionModal","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","shouldAddToRecent","handleToggleReaction","handleReactionContextMenu","handleStoryReactionSelect","actionText","customEmojiMessage","parseHtmlAsFormattedText","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","div","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","GifButton","gif","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","saveGif","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","onToggleReaction","isInSavedMessages","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","areItemsHidden","hideItems","showItems","markIsReady","unmarkIsReady","handleOpenMessageEffectsPicker","ReactionSelector","onShowMore","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","TextFormatter","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","EDITABLE_INPUT_ID","textFormat","tagName","restoreSelection","selection","getSelection","removeAllRanges","addRange","updateSelectedRange","getRangeAt","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","ApiMessageEntityTypes","Spoiler","execCommand","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","getPhotoMediaHash","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","poll","selectPollFromMessage","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","formatInteger","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","hasFullInfo","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","ManageGroupPermissions","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","messageKey","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","isOwn","isOwnMessage","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge","modalProps","hasButton","hasBackdrop","absoluteCloseButtonColor","headerAvatarPeer","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions"],"sourceRoot":""}