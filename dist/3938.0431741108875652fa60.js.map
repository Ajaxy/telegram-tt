{"version":3,"file":"3938.0431741108875652fa60.js","mappings":"6JASe,SAASA,EAAeC,GACrC,MAAMC,GAASC,EAAAA,EAAAA,OAEPC,OAAQC,IAAUC,EAAAA,EAAAA,GAAS,KACjC,IAAKL,EACH,OAAOM,QAAQC,aAAQC,GAGrBP,EAAOQ,SACTC,IAAIC,gBAAgBV,EAAOQ,SAG7B,MAAMG,EAAMF,IAAIG,gBAAgBb,GAGhC,OAFAC,EAAOQ,QAAUG,GAEVE,EAAAA,EAAAA,IAAaF,IACnB,CAACZ,IAWJ,OATAe,EAAAA,EAAAA,IAAU,IACD,KACDd,EAAOQ,UACTC,IAAIC,gBAAgBV,EAAOQ,SAC3BR,EAAOQ,aAAUD,IAGpB,IAEI,CAAEJ,QACX,C,gDC/BO,SAASY,EAAuBC,EAAiBC,GACtD,MAAMC,GAAYjB,EAAAA,EAAAA,IAAO,GAOzB,OALAkB,EAAAA,EAAAA,IAAQ,KACDF,IAAaC,EAAUV,SAAW,IAEtC,IAAIQ,IAEAE,EAAUV,OACnB,C,oKC+BA,MAqFA,GAAeY,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,IAClB,CAACC,GAAUC,SAAQC,oBACjB,IAAKD,EACH,MAAO,CACLE,UAAMlB,EACNmB,qBAAiBnB,GAIrB,MAAMkB,GAAOE,EAAAA,EAAAA,KAAWL,EAAQC,GAC1BK,GAAOC,EAAAA,EAAAA,KAAWP,EAAQC,GAGhC,MAAO,CACLE,OACAC,iBAJuBF,GAAiBI,GAAQA,EAAKE,SAXvCT,CArFHU,EACfC,OACAC,QACAC,cACAC,WACAC,wBACAC,WACAZ,OACAa,WACAC,aACAC,YACAd,kBACAe,iBACAC,kBACAC,UACAC,oBAEA,MAAMC,GAAOC,EAAAA,EAAAA,KAEPC,EAAUT,GAAYb,EACtBuB,EAAUT,GAAcQ,EAExBE,EAAOF,IAAWG,EAAAA,EAAAA,IAAcH,GAAWA,OAAUxC,EAE3D,IAAI4C,EACAC,EACAC,EAEArB,GAAQC,GACVkB,GACEG,EAAAA,EAAAA,GAAA,OAAKd,UC3EiL,WD2EnJe,UACjCD,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAACC,KAAMzB,EAAM0B,MC5EoL,eDgF1MN,EAAenB,GACNe,IACTG,GACEG,EAAAA,EAAAA,GAACK,EAAAA,EAAM,CACLnB,UCpF2J,WDqF3Jf,KAAMuB,EACNY,KAAK,QACLlC,gBAAiBA,IAIrB2B,GAAYQ,EAAAA,EAAAA,IAAahB,EAAMG,IAAYf,EAC3CmB,EAAenB,IACbqB,EAAAA,EAAAA,GAACQ,EAAAA,EAAa,CAACrC,KAAMuB,EAAStB,gBAAiBA,EAAiBgB,gBAAiBA,KAIrF,MAAMqB,GAAgBC,EAAAA,EAAAA,GCjGD,YDmGlBf,GAAMgB,SAAW1B,GAAY2B,iBCnGwN,WDoGtPhC,GCpG0C,WDqG1CC,GCrGiE,WDsGjEC,GCtGiH,YDuGhHO,GCvG0I,WDwG3IF,IAAkB0B,EAAAA,EAAAA,GAAkB5B,GAAcd,GAClDe,GAGF,OACE4B,EAAAA,EAAAA,IAAA,OACE5B,UAAWuB,EACXpB,QAASA,IAAMA,IAAUN,GACzBJ,MAAOC,EAAcmB,OAAY9C,EACjC8D,IAAKxB,EAAKyB,MAAQ,WAAQ/D,EAAUgD,SAAA,CAEnCJ,GACCjB,IACAoB,EAAAA,EAAAA,GAAA,OAAKd,WAAWwB,EAAAA,EAAAA,GCrHwM,WDqH5KpB,GAAgByB,IAAI,OAAMd,SACnEH,IAGJjB,IACCmB,EAAAA,EAAAA,GAAA,OAAKd,UC1H4E,WD0HnDe,UAC5BD,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAACC,KAAK,iB,uPExErB,MAAMc,EAAY,IAAMC,EAAAA,EAElBC,EAAc,IAAMD,EAAAA,EAEpBE,EAAoBF,EAAAA,EAgK1B,GAAepD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,IAClB,CAACC,GAAUqD,kBACT,MAAM,oBAAEC,EAAmB,UAAEC,GAAcvD,GACrC,gBAAEwD,IAAoBC,EAAAA,EAAAA,KAAezD,GAErC0D,GAAcC,EAAAA,EAAAA,KAA+B3D,EAAQ,mBAE3D,MAAO,CACLwD,gBAAiBA,IAAkBH,GACnCO,mBAAoBL,EAAUK,mBAC9BC,eAAgBP,EAChBI,gBAXc3D,CA9JU+D,EAC5BT,cACAU,WACA7C,YACAoB,OAAOW,EACPe,aAAab,EACbK,kBACAI,qBACAC,iBACAH,cACAO,iBACAC,cACAC,aACAC,YACAC,0BAEA,MAAM,mBAAEC,IAAuBC,EAAAA,EAAAA,MAEzBC,GAAM7F,EAAAA,EAAAA,MAEN8F,EAA6B,WAAlBV,EAASW,KAEpBC,GAAoB9E,EAAAA,EAAAA,IAAQ,IAChC+D,GAAoBgB,KAAMC,IAAMC,EAAAA,EAAAA,IAAeD,EAAEd,SAAUA,IAC1D,CAACH,EAAoBG,IAClBgB,EAAeJ,GAAmBK,YAAYC,IAE9C,YAAEC,IAAgBC,EAAAA,EAAAA,GAAeV,EAAWV,EAASqB,gBAAanG,GAElEoG,GAAmBxF,EAAAA,EAAAA,IAAQ,KAC/B,IAAK4E,EAAU,OAAOE,GAAmBW,iBAAiBL,GAE1D,IAAKC,EAAa,OAClB,MAAMK,EAAa3B,GAAoBgB,KAAMY,GAAcA,EAAUzB,SAAS0B,WAAaP,EAAYQ,QACnGJ,iBAAiBL,GACrB,OAAOM,GACN,CAACZ,EAAmBf,EAAoBsB,EAAaT,IAElDkB,GAAW9F,EAAAA,EAAAA,IAAQ,KACvB,GAAIwF,EACF,OAAOA,EAGT,IAAKxB,GAAgB+B,SACnB,OAGF,MAAM,SAAEA,GAAa/B,EAGrB,OAAO+B,EAFaC,KAAKC,MAAMD,KAAKE,SAAWH,EAASI,SAE3Bf,IAC5B,CAACI,EAAkBxB,IAEhBoC,GAAiBC,EAAAA,EAAAA,IAAkB1B,EAAKH,GAExC8B,EAAsBpB,IAAgBqB,EAAAA,EAAAA,IAAmBrB,GACzDsB,EAAkBV,IAAYS,EAAAA,EAAAA,IAAmBT,GAEjDW,GAAsBC,EAAAA,EAAAA,GAASJ,GAC/BK,GAAkBD,EAAAA,EAAAA,GAASF,GAE3BI,GAAiB5G,EAAAA,EAAAA,IAAQ,IAC7B2D,GAAiBoB,KAAM8B,IAAW5B,EAAAA,EAAAA,IAAe4B,EAAQ3C,IACxD,CAACP,EAAiBO,IAEf4C,EAAmBC,QACvBlD,GAAe+C,IAAmBhC,GAAY6B,IAAwBE,GAElEK,EAAmBZ,IAAoBU,IAAqB1C,GAAmBE,IAEnF2C,aAAcC,EACdC,qBAAsBC,IACpBC,EAAAA,EAAAA,GAA4BP,OAAkB1H,GAAW,EAAM,SAEjE6H,aAAcK,EACdH,qBAAsBI,IACpBF,EAAAA,EAAAA,GAA4BL,OAAkB5H,GAAW,EAAM,QAE7DoI,IAAcC,EAAAA,EAAAA,GAAgB,KAClChD,EAAmB,CAAEjB,cAAaU,gBAG7BwD,GAAmBC,GAAqBC,KAAyBC,EAAAA,EAAAA,KAClEC,KAAoBlD,GAAcoC,GAAqBU,KAE3DT,aAAcc,GACdZ,qBAAsBa,KACpBX,EAAAA,EAAAA,GAA4BS,QAAkB1I,GAAW,GAEvD6I,IAAgBpF,EAAAA,EAAAA,GACpBqF,EAAAA,EAAOC,KACPjB,GAAsBgB,EAAAA,EAAOE,UAC7BhE,GAAkB8D,EAAAA,EAAO9D,eACzB/C,GAGF,OACE4B,EAAAA,EAAAA,IAAA,OAAK5B,UAAW4G,GAAetD,IAAKA,EAAIvC,SAAA,EACpCgC,GAAkB2D,KAClB5F,EAAAA,EAAAA,GAACkG,EAAAA,EAAmB,CAClBhH,UAAW2G,GACX9D,SAAUA,EACVH,mBAAoBA,EACpBtB,KAAMA,EACN+B,oBAAqBA,KAGvBJ,GAAkBQ,IAClBzC,EAAAA,EAAAA,GAACmG,EAAAA,EAAW,CACV/C,WAAYrB,EAASqB,WACrBlE,UAAW6G,EAAAA,EAAO7C,YAClB5C,KAAMA,EACN8F,OAAQlE,EACRmE,iBAAe,EACfjE,UAAWA,EACXkE,8BAA+BjE,EAC/BkE,aAAW,IAGdpB,IAAuB1C,IACtBzC,EAAAA,EAAAA,GAACwG,EAAAA,EAAe,CAEdtH,WAAWwB,EAAAA,EAAAA,GAAeqF,EAAAA,EAAOU,aAAcrB,GAC/C9E,MAAMoG,EAAAA,EAAAA,IAhIe,IAgIIpG,GACzBqG,OAAQrC,EACRsC,KAAM3C,IAAmB/B,EACzB2E,QAAS1E,EACT2E,OAAQtB,GACRuB,QAAStB,GACTc,aAAW,GARN,GAAGxD,KAAgBzC,KAW3ByE,IACCjE,EAAAA,EAAAA,IAAAkG,EAAAA,GAAA,CAAA/G,SAAA,EACED,EAAAA,EAAAA,GAACwG,EAAAA,EAAe,CAEdtH,WAAWwB,EAAAA,EAAAA,GAAeqF,EAAAA,EAAOkB,OAAQhC,GACzC3E,KAAM0B,EACN2E,OAAQnC,EACRoC,KAAM3C,EACN4C,QAAM,EACNE,QAAS1B,GACTkB,aAAW,GAPN,GAAG5C,KAAY3B,KASrBS,IAAaY,GAAoBY,IAChCjE,EAAAA,EAAAA,GAACkH,EAAAA,EAAiB,CAChBnF,SAAUA,EACV7C,UAAW+F,EACXkC,aAActD,KAAKuD,IAvJM,GAuJF9G,EAAuCc,GAC9D2F,QAAS1B,a,uGC3JvB,QAvCA,SACE7C,EACA6E,GAAsB,GAEtB,MAAM,iBACJC,IACE/E,EAAAA,EAAAA,MACEgF,GAAmB5K,EAAAA,EAAAA,IAAO,GAE1B6K,GAAelC,EAAAA,EAAAA,GAClBmC,IACC,MAAMC,EAAaH,EAAiBrK,QAE9ByK,EAAYF,EAAMG,YAAYC,OAGpC,GAFAN,EAAiBrK,QAAUyK,GAEvBG,EAAAA,EAAAA,QAAwBJ,GAAcC,GAAaD,EAAY,OAEnE,MAAMK,EAAYN,EAAMO,OAAOC,QAAQ,gBACvC,IAAKF,EAAW,QAEhBG,EAAAA,EAAAA,IAvB4B,KAyB5B,MAAMC,EAAaR,EAAYD,GACzB,aAAEU,EAAY,aAAEC,EAAY,UAAEC,GAAcP,EACtBlE,KAAK0E,MAAMF,EAAeC,EAAYF,GACfD,GA9BnB,GAiC9Bb,MAKAkB,GAAkBC,EAAAA,EAAAA,GAAqBjB,EAAc,CAACA,GArC1C,KAqCsE,IAExFkB,EAAAA,EAAAA,GAAkBlG,EAAKgG,GAAkBnB,EAC3C,C,6DCjCA,QAbA,SAAoBsB,EAA8BC,GAChD,MAAMC,GAAgBvD,EAAAA,EAAAA,GAAgBqD,IAEtCnL,EAAAA,EAAAA,IAAU,KACR,GAAqB,iBAAVoL,EACT,OAGF,MAAM3F,EAAK6F,WAAW,IAAMD,IAAiBD,GAC7C,MAAO,IAAMG,aAAa9F,IACzB,CAAC2F,GACN,C,sLCwBA,MAiIA,GAAe9K,EAAAA,EAAAA,IAjIoBkL,EACjCC,aAAY,EACZC,oBACAC,QACAC,OACAC,cACAC,cACAC,cACAC,mBACAC,mBACAC,gCAA+B,EAC/BC,YAAW,EACXC,eACAC,6BACAC,gBACAC,eAEA,MAAMC,GAAWrN,EAAAA,EAAAA,MAEX4C,GAAO0K,EAAAA,EAAAA,MAEP,SAAEC,IAAaC,EAAAA,EAAAA,OACdC,EAAUC,IAAeC,EAAAA,EAAAA,IAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,KAAS,GACrCG,EAAsBP,EAAW,IAAM,IAgE7C,OA9DA1M,EAAAA,EAAAA,IAAU,KACJiM,GACFY,EAAY,KAEb,CAACZ,KAEJiB,EAAAA,EAAAA,GAAW,KACJC,EAAAA,IACHX,EAAS9M,QAAS0N,SAEnBH,IAEHjN,EAAAA,EAAAA,IAAU,KACJ2L,IACF0B,EAAAA,EAAAA,IAAgB,KACdb,EAAS9M,QAAS0N,QAClBZ,EAAS9M,QAAS4N,YAGrB,CAAC3B,KA4CFrI,EAAAA,EAAAA,IAAA,QAAMiK,OAAO,GAAGhB,SAAUA,EAzB5B,SAAsBiB,GACpBA,EAAMC,iBAEFhC,GAIAsB,GACFR,EAAUK,EAEd,EAesDc,EAAAA,EAAWC,aAAa,MAAKlL,SAAA,EAC/Ea,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GAAe,6BAA8B0J,GAAY,UAAWjB,GAAS,SACxFpI,IAAKxB,EAAKyB,MAAQ,WAAQ/D,EAAUgD,SAAA,CAEnCyJ,IAhBH1J,EAAAA,EAAAA,GAAA,SACE0C,KAAK,WACLO,GAAG,mBACHkI,aAAa,MACbjM,UAAU,kBACVkM,UAAW,KAYXpL,EAAAA,EAAAA,GAAA,SACEwC,IAAKwH,EACL9K,UAAU,eACVwD,KAAMwG,EAAoB,OAAS,WACnCjG,GAAG,mBACHoI,MAAOjB,GAAY,GACnBe,aAAczB,EAA+B,gBAAkB,mBAC/D4B,YAAYC,EAAAA,SAAmBtO,EAC/BuO,SAxDR,SAA0BC,GACpBtC,GACFS,IAGF,MAAM,OAAE5B,GAAWyD,EACnBpB,EAAYrC,EAAOqD,OACnBb,EAAaxC,EAAOqD,MAAMrH,QAAU0H,EAAAA,KAChC5B,GACFA,EAAc9B,EAAOqD,MAEzB,EA8CQM,UAAW,IACX5K,IAAI,UAENf,EAAAA,EAAAA,GAAA,SAAAC,SAAQkJ,GAASC,GAAQC,GAAe9J,EAAK,8BAC7CS,EAAAA,EAAAA,GAAA,OACEd,UAAU,6BACVG,QAlDR,WACEwK,GAA4BX,EAC9B,EAiDQ0C,KAAK,SACLR,SAAU,EACVzM,MAAOY,EAAK,sBACZ,aAAYA,EAAK,sBAAsBU,UAEvCD,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAACC,KAAM+I,EAAoB,MAAQ,qBAG3CK,IAAevJ,EAAAA,EAAAA,GAAA,KAAGd,UAAU,cAAae,SAAEsJ,IAC3CQ,IAAaQ,GAAaf,KACzBxJ,EAAAA,EAAAA,GAAC6L,EAAAA,EAAM,CAACnJ,KAAK,SAASoJ,QAASnC,EAAUV,UAAWA,EAAW8C,UAAWxB,EAAUtK,SACjFqJ,GAAe/J,EAAK,4B,kBCjKhB,SAASyM,EAAmBP,GACzC,MAAI,YAAaA,EACR,CACLQ,EAAGR,EAAES,QAAQ,GAAGC,QAChBC,EAAGX,EAAES,QAAQ,GAAGG,SAIb,CACLJ,EAAGR,EAAEU,QACLC,EAAGX,EAAEY,QAET,C,0JCgBA,MAqDA,GAAevO,EAAAA,EAAAA,IArD2BoI,EACxCnE,WACAH,qBACA1C,YACAoB,OACAgM,gBACAjK,0BAEA,MAAMM,GAAoB9E,EAAAA,EAAAA,IAAQ,IAChC+D,GAAoBgB,KAAMY,IAAcV,EAAAA,EAAAA,IAAeU,EAAUzB,SAAUA,IAC1E,CAACH,EAAoBG,IAClBwK,EAAe5J,GAAmB6J,YAAYvJ,GAC9CwJ,EAAYF,EAAe,WAAWA,SAAiBtP,EACvDyP,GAAYnI,EAAAA,EAAAA,GAASkI,GAErBzH,GAAuB2H,EAAAA,EAAAA,GAA6BD,GAEpDE,EAAuC,UAAlB7K,EAASW,MAA0C,OAAtBX,EAAS0B,SAC3DoJ,EAA6BP,GAAmC,UAAlBvK,EAASW,MAA0C,MAAtBX,EAAS0B,SAE1F,MAAsB,WAAlB1B,EAASW,MAET1C,EAAAA,EAAAA,GAACmG,EAAAA,EAAW,CACV/C,WAAYrB,EAASqB,WACrBlE,WAAWwB,EAAAA,EAAAA,GAAe,sBAAuBxB,GACjDoB,KAAMA,EACNgG,8BAA+BjE,IAKjCwK,GAEA7M,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAACC,KAAK,QAAQjB,UAAU,sBAAsBkB,MAAO,cAAcE,eAAkBA,SAK5FN,EAAAA,EAAAA,GAAA,OACEd,WAAWwB,EAAAA,EAAAA,GACT,sBACAkM,GAAsB,mBACtB5H,EACA9F,GAEFkB,MAAOE,EAAO,UAAUA,gBAAmBA,WAAWrD,EACtD6P,IAAKJ,GAAaK,EAClBC,IAAKrK,GAAmBhE,MACxBsO,WAAW,K,yKC3EjB,QAAyT,WAAzT,EAAujB,WAAvjB,EAA0kB,WAA1kB,EAAmzB,W,eCoCnzB,MAsTA,GAAenP,EAAAA,EAAAA,IAtTuBoP,EACpCC,WACAC,YACAC,oBACAC,oBACAC,WAAW,EACXC,YACAC,aACAC,qBAAqB,OACrBxO,gBAEA,MAAMK,GAAOC,EAAAA,EAAAA,KACPmO,GAA0BhR,EAAAA,EAAAA,MAC1BiR,GAAqBjR,EAAAA,EAAAA,OAEpBkR,EAAQC,IAAaxD,EAAAA,EAAAA,IAAS,IAC9ByD,EAAcC,IAAmB1D,EAAAA,EAAAA,IAAS,IAC1C2D,EAAYC,IAAiB5D,EAAAA,EAAAA,IAAS,GACvC6D,GAAiBC,EAAAA,EAAAA,GAAYH,IAC5BI,EAAkBC,IAAuBhE,EAAAA,EAAAA,IAASmD,EAAa,EAAIF,IACnEgB,EAAkBC,IAAuBlE,EAAAA,EAAAA,IAASmD,EAAaF,EAAW,IAC1EkB,EAAeC,IAAoBpE,EAAAA,EAAAA,IAASiD,IAE5CoB,EAAeC,IAAoBtE,EAAAA,EAAAA,IAAS,IAC5CuE,EAAWC,IAAgBxE,EAAAA,EAAAA,KAAS,IACpCyE,EAA+BC,IAAoC1E,EAAAA,EAAAA,KAAS,IAC5E2E,EAAgCC,IAAqC5E,EAAAA,EAAAA,KAAS,IAC9E6E,EAAeC,IAAoB9E,EAAAA,EAAAA,KAAS,IAC5C+E,EAAWC,IAAgBhF,EAAAA,EAAAA,KAAS,GAErCiF,IAAiB9R,EAAAA,EAAAA,GAAuB,CAAC4P,EAAmBC,IAE5DkC,IAA2B7S,EAAAA,EAAAA,KAAO,GAClC8S,IAAerB,EAAAA,EAAAA,GAAYjB,GAC3BuC,IAAgBtB,EAAAA,EAAAA,GAAYhB,GAC5BuC,IAAiBvB,EAAAA,EAAAA,GAAYX,GAI7BmC,GAAwBC,GADI3O,EAAAA,EAE5B4O,GAA8B,IAAW5O,EAAAA,EAMzC6O,GAAsBA,KAC1B,GAAIpC,EAAwBzQ,SAAW0Q,EAAmB1Q,QAAS,CACjE,MAAM8S,EAAcpC,EAAmB1Q,QAAQ+S,YACzCC,EAAiBjC,EAAa,EAC9BkC,EAAgBD,EAChBE,EAAgBJ,EAAcE,EAC9BG,EAAgBR,GAChBS,EAAe7C,GAAc,EAAIgB,GAAiBuB,EAAcvB,EAAgBuB,EAEtF,IAAIO,EAAY1M,KAAKuD,IAAI+I,EAAetM,KAAK2M,IAAIF,EAAcF,IAC3DE,EAAeV,KACjBW,EAAYD,EAAeJ,GAEzBI,EAAeN,EAAcJ,KAC/BW,EAAYD,EAAeJ,GAG7B,MACMO,EAAoBP,GADGI,EAAeC,GACsBF,EAElEvC,EAAUyC,EAAYP,GACtBhC,EAAgByC,EAClB,IAGFjT,EAAAA,EAAAA,IAAUuS,GAAqB,CAACtB,EAAeR,EAAYR,EAAYmC,MAEvElH,EAAAA,EAAAA,GAAkBkF,EAAoBmC,KAEtCvS,EAAAA,EAAAA,IAAU,KAER0Q,GADcP,GAAyBzQ,SAASwT,aAAe,GACzCZ,KACrB,CAACzC,EAAmBC,EAAmBwC,KAE1C,MAAMa,IAAcC,EAAAA,EAAAA,MAEpBC,EAAAA,EAAAA,GAAc,KACZ,IAAIC,EAKJ,IAF+BrB,IAAgBC,WADCzS,IAAnB0S,IAAgCA,KAAmBlC,GACU4B,KAE5DG,GAAyBtS,QAAS,CAC9DsS,GAAyBtS,SAAU,EAEnC,MAAM6T,EAAY1B,EAAY2B,IAjDG,IAkDjCF,EAAYG,OAAOnI,WAAW,KAC5B0G,GAAyBtS,SAAU,EACnCyT,MACCI,EACL,CAEA,MAAO,KACDD,IACF/H,aAAa+H,GACbtB,GAAyBtS,SAAU,KAGtC,CACDiQ,EAAUsC,GAAcrC,EAAWsC,GACnCC,GAAgBlC,EAAYC,EAAoB2B,IAGlD,MAAM6B,GAAwB1B,GAAyBtS,SAEvDM,EAAAA,EAAAA,IAAU,KACJiQ,GACFa,EAAoB,GACpBE,EAAoBjB,KAEpBiB,EAAoB,GACpBF,EAAoBf,IAEtBmB,EAAiBnB,IAChB,CAACA,EAAUE,IAEd,MAAM0D,GAAmBvM,QAAQ0I,GAAqBD,GAEhD+D,GAAkBF,GAAwBzB,GAAetC,EACzDkE,GAAmBH,GAAwBxB,GAAgBtC,EAE3DkE,IAAelD,EAAAA,EAAAA,GAAYb,IAEjC/P,EAAAA,EAAAA,IAAU,KACR,MAAM+T,EAAmB,GAEzB,GAA2B,SAAvB7D,QAAkDzQ,IAAjBqU,GACnC,OAGF,MAAME,EAAiBjE,EAEjBkE,EAAmBpG,IACnBoC,EACFe,EAAoBnD,GAEpBiD,EAAoBjD,IAIxB,GAA2B,YAAvBqC,GAA2D,aAAvBA,EAAmC,CACzE,MAAMgE,EAAmC,YAAvBhE,EAElB4B,GAAa,GACbmC,EAAgBC,EAAY,EAAI,GAEhCxC,GAAkC,GAClCN,EAAiB8C,EAAY,EAAI,GAEjCH,EAAOI,KAAKV,OAAOnI,WAAW,KAC5BoG,GAAkC,GAClCJ,GAAa,GACbF,EAAiB4C,GACbE,IACF1C,GAAiC,GACjCyC,EAAgB,KAvHa,MA2HjCF,EAAOI,KAAKV,OAAOnI,WAAW,KAC5BkG,GAAiC,GACjCE,GAAkC,GAClCE,GAAiB,GACjBqC,EAAgBD,GAChB1C,GAAa,GAEbyC,EAAOI,KAAKV,OAAOnI,WAAW,KAC5BkG,GAAiC,GACjCE,GAAkC,GAClCI,GAAa,IAnIa,MADD0B,KAuI/B,CAEA,MAAO,KACLO,EAAOK,QAAQ7I,gBAEhB,CACDwE,EAAUG,EAAoBD,EAC9B6D,GA9I+BN,MAiJjC,MAAMa,GAAsBA,CAC1BC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAYJ,EDtO0oB,WAAyD,WCyOrtB,OACEhR,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GACTwR,EACAF,EACAC,GAAqBlM,GAEvB3F,MAAO,qBAAmB2R,IAAkB9R,SAAA,EAE5CD,EAAAA,EAAAA,GAAA,OAAKd,UAAW6G,EAAY9F,UAC1BD,EAAAA,EAAAA,GAAA,QAAAC,SAAOmR,QAETpR,EAAAA,EAAAA,GAAA,OAAKd,UAAW6G,EAAa9F,UAC3BD,EAAAA,EAAAA,GAAA,QAAAC,SAAOoR,WAMf,OACEvQ,EAAAA,EAAAA,IAAA,OACE0B,IAAKoL,EACL1O,WAAWwB,EAAAA,EAAAA,GD/PM,WCiQfyQ,IDjQsC,WCkQtC3D,GDlQsuB,WCmQtuBC,GDnQ4vB,WCoQ5vByD,IDpQuxB,WCqQvxB7B,GDrQg0B,WCsQh0BnQ,GAEFkB,OAAO+R,EAAAA,EAAAA,GACL,wBAAwB9D,IACxB,wBAAwBE,IACxB,qBAAqBI,IACrB,cAAcd,IACd,4CACA,uCACA5N,SAAA,CAEDkR,KACCnR,EAAAA,EAAAA,GAAA,OAAKd,UDlR6D,WCkR5Be,UACpCa,EAAAA,EAAAA,IAAA,OAAK5B,UDnR4K,WCmRrIe,SAAA,EAC1CD,EAAAA,EAAAA,GAAA,OACEd,WACEwB,EAAAA,EAAAA,GDtR+Q,aCuR3QyN,GAAqC,IAAnBA,IACjBpI,GAEP3F,MAAO,UAAU6N,OAAgBhO,UAEjCD,EAAAA,EAAAA,GAACoS,EAAAA,GAAU,CACTxU,UAAW2R,GACXpP,KAAK,OACLkS,eAAa,EAAApS,UAEba,EAAAA,EAAAA,IAAA,OACE0B,IAAKmL,EACLzO,UDnSyU,WCmSlSe,SAAA,CAEtCqN,IAAqBtN,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAACC,KAAMmN,EAAmBpO,UDrS4Z,aCsShdmO,IACCrN,EAAAA,EAAAA,GAAA,OAAKd,UDvS4gB,WCuSte6B,IAAKxB,EAAKyB,MAAQ,WAAQ/D,EAAUgD,SAC5EoN,YAMXrN,EAAAA,EAAAA,GAAA,OAAKd,UD9SkZ,WC8SzWkB,MAAO,SAAS2N,MAAiB9N,UAC7ED,EAAAA,EAAAA,GAAA,OAAKsS,MAAM,KAAKzK,OAAO,KAAK0K,QAAQ,YAAYC,KAAK,OAAMvS,UACzDD,EAAAA,EAAAA,GAAA,QAAMyS,EAAE,uTAAuTD,KAAK,2BAM9UxS,EAAAA,EAAAA,GAAA,OAAKd,UAAW6G,EAAY9F,UAC1BD,EAAAA,EAAAA,GAAA,QAAAC,SAAOmR,QAETpR,EAAAA,EAAAA,GAAA,OAAKd,UAAW6G,EAAa9F,UAC3BD,EAAAA,EAAAA,GAAA,QAAAC,SAAOoR,QAGTvQ,EAAAA,EAAAA,IAAA,OAAK5B,UD7T4lB,WC6T1jBe,SAAA,CACpC4R,IACC,EACAxD,GACA3N,EAAAA,EAAAA,GAAeyO,GAAiBpJ,GAChCgJ,GAGD8C,IACC,EACAtD,GACA7N,EAAAA,EAAAA,GAAeyO,GAAiBpJ,GAChCgJ,GAGD8C,IACEpE,EACDkB,GACAjO,EAAAA,EAAAA,GACE+M,EDhV+qB,WAAzD,WCiVtnBoB,GDjV80B,YCmVh1BI,U,0IC5UV,MAOA,EAP0CyD,IACxC,MAAM,OAAEC,GAAWD,EACbE,GAAgBC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBJ,GAEvE,OAAOC,GAAgB5S,EAAAA,EAAAA,GAAC4S,EAAa,IAAKF,SAAYzV,GCqDxD,EArDoB+V,CAClBC,EACAC,EACAC,KAEA,MAAM5T,GAAOC,EAAAA,EAAAA,MACN4T,EAAaC,IAAkB/I,EAAAA,EAAAA,MAEhCgJ,GAAwBhO,EAAAA,EAAAA,GAAgB,CAACiO,EAAYC,GAAe,KAExE,MAAMC,EAAc5P,KAAK0E,MAAM1E,KAAKuD,IAAImM,EAAKG,UAAWC,KAAKC,MAAQ,KAAa,MAC7EJ,EAAe,GAAIK,EAAAA,EAAAA,OACxBT,IAAcK,GACdJ,OAAepW,KAGX6W,GAAmCxO,EAAAA,EAAAA,GAAgB,KACvDgO,EAAsB,IAAIK,KAA6B,IAAxBI,EAAAA,MAA+B,KAG1DC,GAAsB1O,EAAAA,EAAAA,GAAgB,KAC1C+N,OAAepW,GACfiW,QAGIe,GAAkB3O,EAAAA,EAAAA,GAAiB4O,IACvCb,EAAe,IAAMa,KAGjBC,EAAuBhB,EAAS,IAAIQ,KAAc,IAATR,GAAiB,IAAIQ,KACpEQ,EAAqBC,WAAW,GAChCD,EAAqBE,gBAAgB,GAErC,MAAMC,EAAmB,IAAIX,KAiB7B,OAhBAW,EAAiBC,YAAYD,EAAiBE,cAAgB,GAgBvD,CAACP,GAbNjU,EAAAA,EAAAA,GAAC4S,EAAa,CACZD,OAAQ/N,QAAQwO,GAChBqB,gBAAc,EACdC,WAAYP,EAAqBT,UACjCiB,OAAOC,EAAAA,EAAAA,IAAcN,GACrBO,cAAY,EACZC,kBAAmB7B,EAAyB1T,EAAK,gCAA6BtC,EAC9E8X,QAASf,EACTjK,SAAUuJ,EACV0B,oBAAqB/B,EAAyBa,OAAmC7W,K,kGC5CvF,MA2CA,GAAea,EAAAA,EAAAA,IAjCkBmX,EAC/BC,QACA5U,OACApB,YACAiW,QAdoB,EAepBC,gBAEA,MAAM7V,GAAOC,EAAAA,EAAAA,KAEP6V,EAAyB,iBAAT/U,EAAoBA,EAAOgV,EAAAA,EAAahV,GAExDiV,GAAqB1X,EAAAA,EAAAA,IAAQ,IAC7BuX,KACCF,GAAOlR,QAAUkR,EAAMlR,QAAUmR,OAAtC,EACO,KAAID,EAAMlR,OAASmR,IACzB,CAACC,EAAWF,EAAOC,IAEtB,OACErU,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GAAexB,EC1CT,YD2CjBkB,MAAO,YAAYiV,OACnBtU,IAAKxB,EAAKyB,MAAQ,MAAQ,MAAMf,SAAA,CAE/BiV,GAAOM,MAAM,EAAGL,GAAOM,IAAKtX,IAAS6B,EAAAA,EAAAA,GAACK,EAAAA,EAAM,CAACC,KAAMA,EAAMnC,KAAMA,EAAMe,UC9CjC,cD+CpCqW,IACCvV,EAAAA,EAAAA,GAAA,OAAKd,UChDiD,WDgDzBe,SAC1BsV,Q,8IExBX,MA6DA,GAAezX,EAAAA,EAAAA,IA1DoB4X,EACjCC,YACAC,gBACAC,eACAC,SACA5W,YACAoT,QACAzK,aAEA,MAAMrF,GAAM7F,EAAAA,EAAAA,MAEN4C,GAAO0K,EAAAA,EAAAA,MAEP,aAAEnF,EAAY,qBAAEE,IAAyBE,EAAAA,EAAAA,GAC7CyQ,OAAW1Y,GAAW,GAAM2Y,QAAwB3Y,OAAWA,EAhBxC,KAkBnB8Y,GAAYC,EAAAA,EAAAA,GAAcH,GAAe/Q,OAAc7H,EAnB3C,GAmBmEqV,EAAOzK,GAEtFoO,GAAc3Q,EAAAA,EAAAA,GAAiBmG,IACnC,IAAKjJ,EAAItF,QAAS,OAClB,MAAMgZ,EAAK1T,EAAItF,QACTiZ,EAAO1K,EAAE2K,cAAcC,wBACvBpK,EAAIR,EAAEU,QAAUgK,EAAKG,KACrBlK,EAAIX,EAAEY,QAAU8J,EAAKI,IACrB1I,EAAS5B,EAAKkK,EAAK7D,MAAQ,EAC3BkE,EAASpK,EAAK+J,EAAKtO,OAAS,GAClCgD,EAAAA,EAAAA,IAAgB,KACdqL,EAAGO,aAAa,QAAS,oBAAoB5I,yBAA8B2I,WAI/E,GAAK1R,EAIL,OACEhE,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GCjEM,WDiEsBsE,EAAsB9F,EAAW0W,GCjEA,YDkExEpT,IAAKA,EACLnD,QAASuW,EAAgBK,OAAchZ,EAAUgD,SAAA,EAEjDD,EAAAA,EAAAA,GAAA,UACEwC,IAAKuT,EACL7W,UCvE2J,WDwE3JoT,MAAOA,EACPzK,OAAQA,KAEV7H,EAAAA,EAAAA,GAAA,OAAKd,UC3EoI,aD4ExI4W,IACChV,EAAAA,EAAAA,IAAA,QAAM5B,UC7EuK,WD6EhJe,SAAA,EAC3BD,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAACC,KAAK,sBAAsBjB,UC9EgK,aD+EhMK,EAAK,gC,kDE7ED,SAAS6O,EAAelR,GACrC,MAAMwZ,GAAU/Z,EAAAA,EAAAA,MACVga,GAAUha,EAAAA,EAAAA,MAQhB,OANIga,EAAQzZ,UAAYA,IACtBwZ,EAAQxZ,QAAUyZ,EAAQzZ,SAG5ByZ,EAAQzZ,QAAUA,EAEXwZ,EAAQxZ,OACjB,C,6DCTO,SAAS0Z,EACdzW,EACA0W,EACAC,GAAa,EACb9V,GAAQ,GAER,OAAI8V,GAAcD,IAAmBE,EAAAA,IAA4B,OAE7DF,IAAmBG,EAAAA,IAA4B,YAEnC,mBAAT7W,EACLa,EAAQ,oBAAsB,iBACnB,UAATb,EACFa,EAAQ,WAAa,QAErBiW,EAAAA,GAAa,YAAcC,EAAAA,GAAS,cAAgB,WAExD,C,mCCrBA,SAAgB,UAAY,WAAW,OAAS,WAAW,oBAAsB,WAAW,SAAW,WAAW,WAAa,WAAW,OAAS,WAAW,UAAY,WAAW,aAAe,W,kDCEpM,MA4BA,EA5B4BC,CAC1BC,EACAN,EACAO,GAAuB,MAEvB7Z,EAAAA,EAAAA,IAAU,KACR,GAAIsZ,EACF,OAGF,MAAM/O,EAAYqP,EAAala,QAE/B,SAASoa,EAAa7L,GAEfA,EAAE8L,SACLxP,EAAUyP,YAAc/L,EAAEgM,OAAS,EAC/BJ,GAAsB5L,EAAER,iBAEhC,CAIA,OAFAlD,EAAU2P,iBAAiB,QAASJ,EAAc,CAAEK,SAAUN,IAEvD,KACLtP,EAAU6P,oBAAoB,QAASN,KAExC,CAACF,EAAcN,EAAYO,I,+KCEhC,MAuKA,GAAevZ,EAAAA,EAAAA,IA9JiB+Z,EAC9BC,mBACAC,eACAC,cACAC,iBACAC,oBACAhZ,YACAiZ,cAAc,MAEd,MAAMf,GAAeza,EAAAA,EAAAA,MACfoZ,GAAYpZ,EAAAA,EAAAA,OAEXyb,EAAkBC,IAAoBC,EAAAA,EAAAA,IAAU,CAAEhG,MAAO,EAAGzK,OAAQ,IAErE0Q,GAAMC,EAAAA,EAAAA,MAELC,EAAYC,IAAiBpO,EAAAA,EAAAA,MAE9BqO,EAAmBX,IAAeY,EAAAA,EAAAA,IAAoBZ,EAAa,WACnEa,GAAatU,EAAAA,EAAAA,GAASoU,IAE5Bnb,EAAAA,EAAAA,IAAU,KACHqb,IACLtb,EAAAA,EAAAA,IAAasb,GAAYC,KAAKJ,IAC7B,CAACG,IAEJ,MAAME,GAAmBlb,EAAAA,EAAAA,IAAQ,KAC/B,MAAMmb,EAA8D,GACpE,IAAK,IAAIC,EAAO,EAAGA,GArCT,EAqCwBA,IAAQ,CACxC,MAAMC,EAAgBrV,KAAKC,MArCJ,GAqCkC,EApCxC,IAoC6CmV,EAAO,KAC/DE,EAAeF,EAvCb,EAwCFG,EArCa,KACN,GADM,KAqCqDD,EAElEE,EAAaJ,EAAO,GAAM,EAAIpV,KAAKyV,GAAKJ,EAAgB,EAE9D,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAeK,IAAK,CACtC,MAAMC,EAASD,EAAIL,EAAiBrV,KAAKyV,GAAK,EAAID,EAElD,GAAInB,GAAqBsB,EAAkB,IAAV3V,KAAKyV,IAAaE,EAAkB,IAAV3V,KAAKyV,GAC9D,SAIF,MAAMG,EAAuB,KAAbL,EAAoBvV,KAAK6V,IAAIF,GACvCG,EAAUP,EAAavV,KAAK+V,IAAIJ,GAEhCK,EAAa,IAAMV,EAAetV,KAAKE,SAE7CiV,EAAYrH,KAAK,CACf1F,EAAGwN,EACHrN,EAAGuN,EACHE,cAEJ,CACF,CACA,OAAOb,GACN,CAACd,KAEJxP,EAAAA,EAAAA,GAAkB0O,EAAe3P,IAC/B4Q,EAAiB,CACf/F,MAAO7K,EAAMG,YAAY0K,MACzBzK,OAAQJ,EAAMG,YAAYC,YAI9BrK,EAAAA,EAAAA,IAAU,KACR,MAAMuK,EAAYqP,EAAala,QAC3B6K,GACFsQ,EAAiB,CACf/F,MAAOvK,EAAU2I,YACjB7I,OAAQE,EAAU+R,gBAGrB,CAACzB,IAEJ,MAAM0B,GAAOzU,EAAAA,EAAAA,GAAgB,KAC3B,MAAM0U,EAASjE,EAAU7Y,QACzB,IAAK8c,IAAWvB,EAAY,OAC5B,MAAMwB,EAAMD,EAAOE,WAAW,OACxB,MAAE5H,EAAK,OAAEzK,GAAWmS,EAC1B,IAAK1H,IAAUzK,EAAQ,OAEvBoS,EAAIE,UAAU,EAAG,EAAG7H,EAAOzK,GAE3BoS,EAAIG,OACJrB,EAAiBnH,QAAQ,EACvB3F,IAAGG,IAAGyN,iBAEN,MAAMQ,EAAUpO,EAAIkM,EAActU,KAAKuD,IAAIkL,EA1FhC,IA0FkDiG,GAAOjG,EAAQ,EACtEgI,EAAUlO,EAAI+L,EAActU,KAAKuD,IAAIS,EA3FhC,IA2FmD0Q,GAAO1Q,EAAS,EAExEvH,EA/FW,GA+FaiY,EAAMJ,EAAc0B,EAElDI,EAAIM,UAAU9B,EAAY4B,EAAU/Z,EAAO,EAAGga,EAAUha,EAAO,EAAGA,EAAMA,KAE1E2Z,EAAIO,UAEAzC,IACFkC,EAAIG,OACJH,EAAIQ,UAAY1C,EAChBkC,EAAIS,yBAA2B,cAC/BT,EAAIU,SAAS,EAAG,EAAGrI,EAAOzK,GAC1BoS,EAAIO,WAGN,MAAMI,EAAiBX,EAAIY,qBAAqBvI,EAAQ,EAAGzK,EAAS,EAAG,EAAGyK,EAAQ,EAAGzK,EAAS,EAAGyK,EAAQ,GAEnGwI,GAAQC,EAAAA,EAAAA,IAAM,IAAO9C,GAAkB,GAAI,EAAG,GAEpD2C,EAAeI,aAAa,EAAG,qBAAqB,EAAIF,MACxDF,EAAeI,aAAa,EAAG,wBAG/Bf,EAAIG,OACJH,EAAIS,yBAA2B,kBAC/BT,EAAIQ,UAAYG,EAChBX,EAAIU,SAAS,EAAG,EAAGrI,EAAOzK,GAC1BoS,EAAIO,YAuBN,OApBAhd,EAAAA,EAAAA,IAAU,KACRuc,KACC,CAACtB,EAAYR,EAAgBE,EAAaJ,EAAcgB,KAE3Dvb,EAAAA,EAAAA,IAAU,KACR,MAAM,MAAE8U,EAAK,OAAEzK,GAAWuQ,IACpB4B,EAASjE,EAAU7Y,QACzB,IAAKoV,IAAUzK,IAAWmS,EACxB,OAGF,MAAMiB,EAAUpX,KAAKuD,IAAIkL,EAAOzK,IAChCgD,EAAAA,EAAAA,IAAgB,KACdmP,EAAO1H,MAAQ2I,EAAU1C,EACzByB,EAAOnS,OAASoT,EAAU1C,EAE1BwB,OAED,CAAC3B,EAAkBG,KAGpBvY,EAAAA,EAAAA,GAAA,OACEwC,IAAK4U,EACLlY,WAAWwB,EAAAA,EAAAA,GCrLM,WDqLsBxB,GACvCkB,OAAO+R,EAAAA,EAAAA,GACL,YAAY2F,EAAiB,KAC7B,YAAYA,EAAiB,IAAMA,EAAiB,MACpD7X,UAEFD,EAAAA,EAAAA,GAAA,UACEwC,IAAKuT,EACL7W,WAAWwB,EAAAA,EAAAA,GC7LwB,WD6LM+X,GC7Le,YD8LxD,cAAY,Y,kDE7Lb,SAASyC,EAAoBhF,GAClC,GAAyB,SAArBA,EAAG9V,MAAM+a,QACX,OAAO,EAGT,MAAMhF,EAAOD,EAAGG,yBACRxO,OAAQuT,GAAiBC,EAAAA,EAAWC,MAE5C,OAAQnF,EAAKI,KAAO6E,GAAmBjF,EAAKI,IAAMJ,EAAKtO,QAAW,CACpE,C,kUC6BA,MAAM5G,EAAY,IAAMC,EAAAA,EAClBC,EAAc,IAAMD,EAAAA,EACpBqa,EAAoBrE,EAAAA,IAAUD,EAAAA,GAAc,EAAI,EAChDuE,EAAWtE,EAAAA,IAAUD,EAAAA,GAAc,EAAI,EA4F7C,GAAenZ,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,IAClB,CAACC,GAAUqD,kBACT,MAAM,gBAAEG,IAAoBC,EAAAA,EAAAA,KAAezD,GAErC0D,GAAcC,EAAAA,EAAAA,KAA+B3D,EAAQ,mBAE3D,MAAO,CACLwD,gBAAiBA,IAAkBH,GACnCK,gBARc3D,CA1FM0d,EACxBpa,cACAU,WACA7C,YACAoB,OAAOW,EACPe,aAAab,EACbK,kBACAka,cACAha,cACAW,0BAEA,MAAM,mBAAEC,IAAuBC,EAAAA,EAAAA,MAEzBC,GAAM7F,EAAAA,EAAAA,MACNgf,GAAYhf,EAAAA,EAAAA,OAEXif,EAAYC,IAAiBvR,EAAAA,EAAAA,IAAmB,IAEjDrG,GAAiBC,EAAAA,EAAAA,IAAkB1B,EAAKH,GAExCoC,GAAiB5G,EAAAA,EAAAA,IAAQ,IAC7B2D,GAAiBoB,KAAM8B,IAAW5B,EAAAA,EAAAA,IAAe4B,EAAQ3C,IACxD,CAACP,EAAiBO,IAEf4C,EAAmBC,QACvBlD,GAAe+C,GAEXqX,EAAoBF,EAAW5X,OAASuX,GAE9CQ,EAAAA,EAAAA,GAAsB,EAAEC,MACjBrX,GAKA+W,GAAeA,IAAgBM,GAAmB,IAInDF,GACFD,EAAeI,GAAS,IAAIA,EAAMtI,KAAKC,QATvCiI,EAAc,KAWf,CAACH,EAAaI,EAAmBnX,IAEpC,MACEG,aAAcC,IACZmX,EAAAA,EAAAA,GAAkB,CACpB1Z,IAAKmZ,EACLQ,mBAAmB,EACnBxJ,OAAQhO,EACRzF,UAAW,OACXkd,kBAAkB,IAGd/W,GAAcC,EAAAA,EAAAA,GAAgB,KAClC,MAAM+W,EAAgBT,EAAWpG,MAAM,GACvCqG,EAAcQ,GACTA,EAAcrY,QACjB1B,EAAmB,CAAEjB,cAAaU,eAIhC+D,GAAgBpF,EAAAA,EAAAA,GACpBqF,EAAAA,EAAOC,KACPjB,GAAsBgB,EAAAA,EAAOE,UAC7B/G,GAGF,OACE4B,EAAAA,EAAAA,IAAA,OAAK5B,UAAW4G,EAAetD,IAAKA,EAAK8Z,eAAa,EAAArc,SAAA,EACpDD,EAAAA,EAAAA,GAACuc,EAAAA,EAAQ,CAAY7Z,KAAK,OAAOpC,KAAK,WAAWF,MAAO,UAAUE,gBAAmBA,OAAvE,QACbyE,GAAsB6W,EAAWnG,IAAKxS,IACrCjD,EAAAA,EAAAA,GAACwc,EAAAA,EAAY,CAEXha,IAAKmZ,EACLzc,UAAW6G,EAAAA,EAAOkB,OAClB3G,KAAM0B,EACN2E,OAAQ8V,EAAAA,EAAeC,mBACvB9V,KAAM3C,EACN4C,QAAM,EACNN,aAAW,EACXoW,gBAAc,EACdC,QAASpB,EACTzU,QAAS1B,GAVJpC,U,gDCtFf,MAAM4Z,EAAgB,KAAO3b,EAAAA,EAkB7B,SAAS4b,EAAiB9e,GACxB,OAAOA,EAAO+e,KAChB,CAEA,MA8KA,GAAejf,EAAAA,EAAAA,IA9KQkf,EACrBjb,WACAV,cACA4b,eACAC,iBACAhe,YACAie,kBACAC,SACAC,YACAC,YACAjb,sBACAhD,UACAke,kBAEA,MAAM,sBACJC,EAAqB,wBACrBC,EAAuB,sBACvBC,EAAqB,YACrBC,IACEpb,EAAAA,EAAAA,MACEC,GAAM7F,EAAAA,EAAAA,MACNihB,GAAajhB,EAAAA,EAAAA,MACbkhB,GAAelhB,EAAAA,EAAAA,MAEf4C,GAAO0K,EAAAA,EAAAA,KAEP6T,EAAoC,SAA3B/b,EAASA,SAASW,KAE3Bqb,GAAaC,EAAAA,EAAAA,GAAYlB,GACzBmB,EAAiBrZ,QAAQmZ,GAEzBG,GAAkB5Y,EAAAA,EAAAA,GAAgB,CAAC6Y,EAAQ,KAC/CZ,IAAcY,KAGVlI,GAAc3Q,EAAAA,EAAAA,GAAiBmG,IACnC,GAA+B,SAA3B1J,EAASA,SAASW,KAIpB,OAHA+I,EAAE2S,uBACFF,IAKF7e,IAAU0C,EAASA,aAGf,kBACJsc,EAAiB,wBACjBC,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBlc,EAAgC,SAA3BT,EAASA,SAASW,UAAiBzF,OAAWA,OAAWA,GAAW,IAEpGO,EAAAA,EAAAA,IAAU,KACJ6gB,IACFX,EAAsB,CACpBN,SACAC,cAGFmB,IACAC,MAED,CAACD,EAAwBC,EAAuBJ,EAAmBjB,EAAQC,KAE9EtB,EAAAA,EAAAA,GAAsB,EAAE4C,MACtB,MAAMC,EAAS7c,EAAS2Z,YAClBmD,EAASrc,EAAItF,QACnB,IAAK0hB,IAAWC,GAAUD,IAAWD,GAAcjD,YAAa,OAEhE,GAAIuC,GAAkBW,EAASb,EAAWe,QAAQF,OAYhD,OAXApB,EAAsB,CACpBuB,eAAgB,CACd3B,SACAC,YACAuB,iBAGJnB,EAAwB,CACtBL,SACAC,cAKJ,GAAItb,EAAS2Z,YAAa,CACxB,MAAM,KAAEpF,EAAI,IAAEC,GAAQsI,EAAOxI,wBACvB2I,EAAS1I,EAAOuI,EAAO5O,YAAc,EACrCgP,EAAS1I,EAAMsI,EAAOzW,aAAe,EAC3CuV,EAAY,CAAEqB,SAAQC,UACxB,CAEA,MAAMC,EAAeC,OAAOC,iBAAiBP,GAAQQ,QAAU,EAC/DxB,EAAa3gB,SAASoiB,SAEtBzB,EAAa3gB,QAAU2hB,EAAOU,QAAQ,CACpC,CAAEF,MAAOH,GACT,CAAEG,MAAOxb,KAAK2M,IAAmB,IAAf0O,EAvHN,GAuHsCM,OAAQ,IAC1D,CAAEH,MAAO,IACR,CACDI,SAAU,IAAMP,EAChBQ,OAAQ,cAET,CAAC3d,EAAUgc,GAAYe,QAASb,EAAgBb,EAAQC,IAE3D,MAAMsC,GAAavR,EAAAA,EAAAA,GAAYrM,EAAS2Z,cAGtC5W,aAAc8a,IACZ1D,EAAAA,EAAAA,GAAkB,CACpBvJ,OAAQ/N,QAAQ7C,EAAS2Z,aACzBlZ,IAAKob,EACL1e,UAAW,OACXkd,kBAAkB,IAGpB,OACEtb,EAAAA,EAAAA,IAAC+K,EAAAA,EAAM,CACL3M,WAAWwB,EAAAA,EAAAA,GACTqF,EAAAA,EAAOC,KACPiX,GAAgBlX,EAAAA,EAAO8Z,IACvB/B,GAAU/X,EAAAA,EAAO+Z,KACjBxC,GAAavX,EAAAA,EAAOga,SACpBC,EAAAA,EAAAA,IAAiBje,IAAagE,EAAAA,EAAOka,QACrCD,EAAAA,EAAAA,IAAiBje,IAAaob,EAC9Bje,GAEFoB,KAAK,OACLkC,IAAKA,EACL0d,YAAa5B,EACb6B,cAAe5B,EACflf,QAAS4W,EAAYhW,SAAA,CAEO,SAA3B8B,EAASA,SAASW,MACjB5B,EAAAA,EAAAA,IAAAkG,EAAAA,GAAA,CAAA/G,SAAA,EACED,EAAAA,EAAAA,GAACogB,EAAAA,EAAQ,CAACC,OAAO,YACjBrgB,EAAAA,EAAAA,GAACyb,EAAiB,CAChBvc,UAAW6G,EAAAA,EAAOua,cAClBjf,YAAaA,EACbU,SAAUA,EAASA,SACnBzB,KAAMuc,EACNnB,YAAa3Z,EAAS2Z,YACtBrZ,oBAAqBA,IAEtBud,IACC5f,EAAAA,EAAAA,GAACugB,EAAAA,EAAe,CACd/d,IAAKob,EACL4C,KAAM,KAAIC,EAAAA,EAAAA,IAAqBlhB,EAAMwC,EAAS2Z,aAAeiE,KAC7DzgB,UAAW6G,EAAAA,EAAO2a,kBAKxB1gB,EAAAA,EAAAA,GAAC8B,EAAAA,EAAqB,CACpB5C,UAAW6G,EAAAA,EAAOua,cAClBjf,YAAaA,EACbU,SAAUA,EAASA,SACnBzB,KAAMuc,EACNxa,oBAAqBA,IAGxB6a,GAAgBlZ,QACfhE,EAAAA,EAAAA,GAACiV,EAAAA,EAAU,CAAC3U,KAAK,OAAO4U,MAAOgI,KAE/Bld,EAAAA,EAAAA,GAACugB,EAAAA,EAAe,CACdC,MAAMC,EAAAA,EAAAA,IAAqBlhB,EAAMwC,EAASoc,OAASpc,EAAS2Z,aAAe,IAC3Exc,UAAW6G,EAAAA,EAAO4a,e,eCnL5B,MA8MA,GAAe7iB,EAAAA,EAAAA,IA3MiB8iB,EAC9BC,UACAC,WACAxD,YACAyD,WACAC,eACA3e,sBACA4e,mBACAC,uBACAC,OACAC,sBAEA,MAAM,eACJC,EAAc,qBACdC,EAAoB,mBACpBC,EAAkB,oBAClBC,EAAmB,iBACnBC,EAAgB,wBAChBhE,EAAuB,iBACvBiE,EAAgB,uBAChBC,IACEpf,EAAAA,EAAAA,MACEhD,GAAOC,EAAAA,EAAAA,MAEP,QAAEoiB,EAAO,QAAEC,EAAO,gBAAEC,GAAoBjB,EAAQtf,UAChDwgB,EAAuBnd,QAAQic,EAAQmB,sBAAwBnB,EAAQtf,WAEvE0gB,GAAapkB,EAAAA,EAAAA,IAAQ,IACzB+jB,EAAQM,OAAO,CAACC,EAAKpgB,IAAaogB,EAAMpgB,EAASoc,MAAO,GACvD,CAACyD,IAEEQ,GAA8BvkB,EAAAA,EAAAA,IAAQ,KAC1C,MAAMG,GAASqkB,EAAAA,EAAAA,MAEf,OAAOP,GAAiBI,OAAO,CAACC,EAAKG,KACnC,MAAM,SAAEvgB,EAAQ,OAAE9D,GAAWqkB,EACvBC,GAAMC,EAAAA,EAAAA,IAAezgB,GACrB5D,GAAOE,EAAAA,EAAAA,KAAWL,EAAQC,GAEhC,IAAKE,EAAM,OAAOgkB,EAElB,MAAMjN,EAAQiN,EAAII,IAAQ,GAG1B,OAFArN,EAAMvD,KAAKxT,GACXgkB,EAAII,GAAOrN,EACJiN,GACN,CAAC,IACH,CAACL,IAEEpP,GAAQ7U,EAAAA,EAAAA,IAAQ,KACpB,MAAM4kB,GAAaC,EAAAA,EAAAA,IAAc7B,GACjC,OAAOe,EAAQnM,IAAK1T,IAClB,MAAM4gB,GAAcH,EAAAA,EAAAA,IAAezgB,EAASA,UACtCmb,EAAiBkF,IAA8BO,GAC/CC,EAA2BX,EAxDZ,GAwD+ChB,EAC9D4B,EAAMhB,EAAUV,IAAOwB,QAAe1lB,EAE5C,MAAO,CACL8E,WACA4gB,cACAF,aACAvF,eAAiB0F,OAA4C3lB,EAAjBigB,EAC5C4F,UAAU9C,EAAAA,EAAAA,IAAiBje,GAC3B8gB,UAGH,CAAChC,EAASI,EAAkBmB,EAA6BR,EAASC,EAASV,EAAMc,IAE9EhM,GAAc3Q,EAAAA,EAAAA,GAAiBvD,IACnC,IAAIqf,EAIJ,OAAIS,EACGX,GAOLK,EAAmB,CAAEnE,OAAQyD,EAAQzD,OAAQ0D,WAAUiC,OAAQ,CAAEC,SAAUjhB,UAC3Eyf,EAAoB,CAAEpE,OAAQyD,EAAQzD,OAAQ0D,mBAP5CW,EAAiB,CACfwB,eAAgB,oBAUtB5B,EAAe,CACbjE,OAAQyD,EAAQzD,OAChBC,UAAWwD,EAAQ5d,GACnBlB,aAnBA4f,MAuBEuB,GAAiBrlB,EAAAA,EAAAA,IAAQ,IAAM+jB,EAAQhf,KAAMC,GAA0B,SAApBA,EAAEd,SAASW,OAAkBgZ,aAAe,EAAG,CAACkG,IAEnG1D,GAAkB5Y,EAAAA,EAAAA,GAAiB6Y,IACnCiD,EACFO,IAIFL,EAAqB,CACnBlE,OAAQyD,EAAQzD,OAChBC,UAAWwD,EAAQ5d,GACnBkb,aAIJ3gB,EAAAA,EAAAA,IAAU,KACH0lB,GAELxB,EAAiB,CACfyB,SAAST,EAAAA,EAAAA,IAAc7B,GACvBliB,MAAOY,EAAK,kBACZshB,QAASthB,EAAK,gBAAiB2jB,GAC/BE,WAAY7jB,EAAK,iBACjB8jB,aAAcH,EAAeI,WAC7BvY,OAAQ,CACNA,OAAQ,0BACRwY,QAAS,CAAEnG,OAAQyD,EAAQzD,OAAQC,UAAWwD,EAAQ5d,KAExDugB,cAAe,CACbzY,OAAQ,mBACRwY,QAAS,CAAEnG,OAAQyD,EAAQzD,OAAQC,UAAWwD,EAAQ5d,KAExDwc,SA9HkB,IA+HlBgE,iBAAiB,EACjBC,qBAAqB,EACrBhlB,KAAM,UAEP,CAACa,EAAMshB,EAASqC,IAEnB,MAAMS,GAAuBre,EAAAA,EAAAA,GAAiBvD,IACxCqf,EACFO,IAIFN,EAAe,CACbjE,OAAQyD,EAAQzD,OAChBC,UAAWwD,EAAQ5d,GACnBlB,eAYJ,OAPA6hB,EAAAA,EAAAA,GAAc,IAAM,KAClBnG,EAAwB,CACtBL,OAAQyD,EAAQzD,OAChBC,UAAWwD,EAAQ5d,QAKrBnC,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GACT,YACA4c,GAAa,aACbyE,GAAwB,cAE1B3hB,MAAO2gB,EAAW,cAAcA,WAAe9jB,EAC/C8D,IAAKxB,EAAKyB,MAAQ,MAAQ,MAAMf,SAAA,CAE/ByS,EAAM+C,IAAI,EACT1T,WAAUmb,iBAAgBuF,aAAYE,cAAaG,WAAUD,SAE7DhB,GACE7hB,EAAAA,EAAAA,GAAC6jB,EAAAA,EAAc,CAEb3kB,UAAU,mBACVie,gBAAgB,SAChB9b,YAAaohB,EACbxF,aAAc4D,EAAQiD,WACtBhB,SAAUA,EACV/gB,SAAUA,EAASA,SACnB8gB,IAAKA,EACLkB,gBAAiB7C,EACjB7hB,QAAS4W,EACT+N,SAAUL,EACVthB,oBAAqBA,GAXhBsgB,IAcP3iB,EAAAA,EAAAA,GAACgd,EAAc,CAEbI,OAAQyD,EAAQzD,OAChBC,UAAWwD,EAAQ5d,GACnB/D,UAAU,mBACVie,gBAAgB,SAChB9b,YAAaohB,EACbxF,aAAc4D,EAAQiD,WACtB5G,eAAgBA,EAChBI,UAAWA,EACXvb,SAAUA,EACV1C,QAAS4W,EACTsH,YAAaW,EACb7b,oBAAqBA,GAZhBsgB,IAgBV3B,M,8FC5OP,MAAMiD,EAAS,EACTC,EAAa,EAEJ,SAASlO,EACtBmO,EACArN,GAAa,EACbsN,EACAC,EAASJ,EACTK,EACAC,GAEA,MAAMxO,GAAYpZ,EAAAA,EAAAA,MACZ6nB,GAAY7nB,EAAAA,EAAAA,MAmDlB,OAjDAkU,EAAAA,EAAAA,GAAc,KACPiG,IACH0N,EAAUtnB,SAAU,IAErB,CAACinB,EAASrN,KAEbtZ,EAAAA,EAAAA,IAAU,KACR,MAAMwc,EAASjE,EAAU7Y,QAEzB,IAAKinB,IAAYnK,GAAUlD,GAAc0N,EAAUtnB,QACjD,OAGFsnB,EAAUtnB,SAAU,EAEpB,MAAMunB,EAAM,IAAIC,MAEVC,EAAcA,KAClB,MAAMrS,EAAQgS,GAAkBG,EAAInS,MAC9BzK,EAAS0c,GAAmBE,EAAI5c,OAChCoS,EAAMD,EAAOE,WAAW,KAAM,CAAEY,OAAO,KAE7CjQ,EAAAA,EAAAA,IAAgB,KACdmP,EAAO1H,MAAQA,EACf0H,EAAOnS,OAASA,EAEZ+c,EAAAA,KACF3K,EAAI4K,OAAS,QAAQR,QAGvBpK,EAAIM,UAAUkK,EAAe,GAATJ,EAAsB,GAATA,EAAY/R,EAAiB,EAAT+R,EAAYxc,EAAkB,EAATwc,GAErEO,EAAAA,KACHE,EAAAA,EAAAA,GAAS7K,EAAK,EAAG,EAAG3H,EAAOzK,EAAQwc,EAAQH,MAKjDO,EAAIM,OAAS,KACPX,GACFY,EAAAA,EAAAA,IAAeL,GAEfA,KAIJF,EAAI3X,IAAMqX,GACT,CAACA,EAASrN,EAAYyN,EAAiBD,EAAgBD,EAAQD,IAE3DrO,CACT,C,6GC1CA,MA4EA,EA5EmBkP,EACjBtmB,QACAumB,WACAC,gBACAC,eACAC,gBAAgB,QAChBtZ,WACAuZ,WACAxZ,SACA5M,YACAqmB,iBACAC,oBACAplB,QACAf,UACAomB,sBAEA,MAAMlmB,GAAOC,EAAAA,EAAAA,KAEPkmB,GAAeJ,IAAavZ,EAC5BkK,GAAc3Q,EAAAA,EAAAA,GAAgB,KAC9BggB,IAEAvZ,EACF0Z,MAIFpmB,SAGF,OACEyB,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GC5DM,WD8DfwkB,GC9D2K,WD+D3KnZ,GC/DmF,WDgEnF2Z,GChEsC,WDiEtCP,GCjEoJ,WDkEpJjmB,GAEFG,QAAS4W,EACT7V,MAAOA,EACPW,IAAKxB,EAAKyB,MAAQ,WAAQ/D,EAC1B2O,KAAM8Z,EAAc,cAAWzoB,EAC/BmO,SAAUsa,EAAc,OAAIzoB,EAAUgD,SAAA,EAEpC8L,IAAauZ,GAAYxZ,IAAU9L,EAAAA,EAAAA,GAAC2lB,EAAAA,EAAY,IACjD/gB,QAAQwgB,KACPplB,EAAAA,EAAAA,GAAA,OAAKd,WAAWwB,EAAAA,EAAAA,GC5E8K,WD8E1K,QAAlB2kB,EC9E0O,WAAtB,YD+EpNplB,SAECmlB,IAGJxgB,QAAQugB,KACPnlB,EAAAA,EAAAA,GAAA,OAAKd,UCrFkQ,WDqFlOe,SAClCklB,KAGLnlB,EAAAA,EAAAA,GAAA,OAAKd,WAAWwB,EAAAA,EAAAA,GCzFwF,WDyF3D6kB,GAAgBtlB,SAC1DtB,IAEFiG,QAAQsgB,KACPllB,EAAAA,EAAAA,GAAA,OAAKd,WAAWwB,EAAAA,EAAAA,GC7F4G,WD6F5E8kB,GAAmBvlB,SAChEilB,KAGHE,GAAgBlO,EAAAA,KAChBlX,EAAAA,EAAAA,GAAA,OAAKd,UClGwD,gB,gJCqB9D,SAAS0mB,GAAkB,QAChC/E,EAAO,UACPgF,EAAS,UACTC,EAAS,UACTC,EAAS,eACTC,EAAc,YACdC,EAAW,cACXC,EAAa,mBACbC,EAAkB,iBAClBC,EAAgB,SAChBtF,EAAQ,aACRuF,IAcA,MAAM,KAAE7F,EAAI,SAAE8F,GAAazF,EAAQ0F,QAAQ/F,MAAQ,CAAC,EAEpD,IAAKA,EAAM,CACT,MAAMgG,GAA0BC,EAAAA,EAAAA,KAA2BC,EAAAA,EAAAA,MAAoB7F,IAAUL,KACzF,OAAOgG,EAA0B,EAACG,EAAAA,EAAAA,GAASH,EAAyBR,SAAmB/oB,CACzF,CAEA,MAAMwlB,GAAaC,EAAAA,EAAAA,IAAc7B,GAEjC,OAAO+F,EAAAA,EAAAA,IAAuB,CAC5BpG,MAAMmG,EAAAA,EAAAA,GAASnG,EAAMwF,GACrBM,WACAT,YACAC,YACAK,qBACA9kB,YAAa,GAAG+kB,EAAmB,MAAQ,KAAK3D,IAChDsD,YACAE,cACAC,gBACA7I,UAAW,OAAQwD,EAAUA,EAAQ5d,QAAKhG,EAC1CmgB,OAAQyD,EAAQzD,OAChB0D,WACAuF,gBAEJ,CAGO,SAASQ,EACdtnB,EACAshB,EACAiG,GAAU,EACVjB,EACAG,EAAiBe,EAAAA,IAEjB,MAAM,SAAET,GAAazF,EAAQ0F,QAAQ/F,MAAQ,CAAC,EAExCxiB,GAASqkB,EAAAA,EAAAA,MACT2E,GAAkBC,EAAAA,EAAAA,IAA0BjpB,EAAQ6iB,GAEpDqG,EAAcZ,GAAUa,KAAM1b,GAAMA,EAAE/I,OAAS0kB,EAAAA,GAAsBC,SACrEC,EAAiBhB,GAAUa,KAAM1b,GAAMA,EAAE/I,OAAS0kB,EAAAA,GAAsBjhB,aAC9E,IAAK+gB,IAAgBI,EAAgB,CACnC,MAAM9G,GAAOmG,EAAAA,EAAAA,IAASY,EAAAA,EAAAA,IAAsBhoB,EAAMshB,EAASmG,EAAiBF,GAAUd,GAEtF,OAAIH,GACK2B,EAAAA,EAAAA,GAAWhH,EAAM,CAAC,QAAS,aAAc,CAAEqF,eAE3C2B,EAAAA,EAAAA,GAAWhH,EAEtB,CAEA,MAAM9c,GAASojB,IAAWW,EAAAA,EAAAA,IAAuB5G,GAC3C6G,EAAiBhkB,EAAQ,GAAGA,KAAW,GAEvC8c,EAAOoF,EAAkB,CAC7B/E,UAASgF,YAAWE,WAAW,EAAMC,mBAEjCzc,GAAcoe,EAAAA,EAAAA,IAA6BpoB,EAAMshB,EAASmG,EAAiBxG,GAEjF,MAAO,KACFgH,EAAAA,EAAAA,GAAWE,MACVE,MAAMC,QAAQte,GAAeA,EAAc,CAACA,IAChDsb,OAAOjgB,QACX,C,6DCzGe,SAASkjB,EACtB1K,EACAC,EACAwD,EACAkH,EACAjR,GAEA,MAAM,YAAEkR,IAAgBzlB,EAAAA,EAAAA,OAExB/E,EAAAA,EAAAA,IAAU,KACJsZ,GACAuG,IAAcwD,GAChBmH,EAAY,CAAE5K,SAAQC,YAAW0K,iBAAkBA,KAEpD,CAACjR,EAAYsG,EAAQyD,EAASxD,EAAW0K,GAC9C,C,0TCgEA,MAKME,EAAkB,iBAwUxB,GAAenqB,EAAAA,EAAAA,IAtUIoqB,EACjBhpB,YACAipB,aACAC,UACAC,yBACAC,cACAC,oBACAC,eACAC,gBACAnpB,gBACA2J,YACAyf,kBACAC,eACAC,2BACA1qB,gBACA2qB,aACAC,gBACAC,aACAC,gBACAC,oBACAC,qBACAC,iBACA1D,kBACA2D,gBACGC,MAEH,MAAM9pB,GAAOC,EAAAA,EAAAA,KAEP8pB,EAAgBD,EAAcC,cAC9BC,EAAoBD,EAAgBD,EAAcE,uBAAoBtsB,EACtEusB,EAAsBF,EAAgBD,EAAcG,yBAAsBvsB,EAC1EwsB,IAAqB5rB,EAAAA,EAAAA,IAAQ,IAC7ByrB,EACKD,EAAcI,mBAGhBJ,EAAcK,iBAAmB,CAACL,EAAcK,kBAAoBC,EAAAA,EAC1E,CAACL,EAAeD,EAAcK,iBAAkBL,EAAcI,qBAE3DG,IAAc/rB,EAAAA,EAAAA,IAAQ,IACtByrB,EACKD,EAAcO,YAGhBP,EAAcQ,WAAa,CAACR,EAAcQ,YAAcF,EAAAA,EAC9D,CAACL,EAAeD,EAAcQ,WAAYR,EAAcO,cAErD5f,IAAWrN,EAAAA,EAAAA,MACXmtB,GAAiBF,GAAY5lB,OArDd,IAuDrBxG,EAAAA,EAAAA,IAAU,KACR,IAAKmrB,EAAc,OACnB,MAAM7X,EAAYG,OAAOnI,WAAW,MAClCkc,EAAAA,EAAAA,IAAe,KACbhb,GAAS9M,SAAS0N,WA7DH,KAiEnB,MAAO,KACLqG,OAAOlI,aAAa+H,KAErB,CAAC6X,IAEJ,MAAMoB,IAAuBlsB,EAAAA,EAAAA,IAAQ,IAAM,IAAImsB,IAAIT,GAAoB,CAACA,IAClEU,IAAyBpsB,EAAAA,EAAAA,IAAQ,IAAM,IAAImsB,IAAIR,GAAsB,CAACA,IAEtEU,IAAsBrsB,EAAAA,EAAAA,IAAQ,IAC3B+rB,GAAY/E,OAAQ5hB,IAAQ8mB,GAAqBI,IAAIlnB,IAC3D,CAAC8mB,GAAsBH,KAEpBQ,IAAmBvsB,EAAAA,EAAAA,IAAQ,IAC1BsqB,GACEkC,EAAAA,EAAAA,IAAqBlC,EAAY,QADhB,CAAC,EAExB,CAACA,IAEEmC,IAAgBzsB,EAAAA,EAAAA,IAAQ,KAC5B,GAAIyqB,EACF,OAAOF,EAGT,MAAMmC,EAAiC,GACjCC,EAA2B,GAC3BC,EAAqC,GAY3C,OAVArC,EAAQxW,QAAS3O,IACX8mB,GAAqBI,IAAIlnB,GAC3BsnB,EAAqB5Y,KAAK1O,GACjBgnB,GAAuBE,IAAIlnB,GACpCwnB,EAAyB9Y,KAAK1O,GAE9BunB,EAAe7Y,KAAK1O,KAIjBsnB,EAAqBG,OAAOF,EAAgBC,IAClD,CAACnC,EAAaF,EAAS2B,GAAsBE,KAE1CU,IAAkBrlB,EAAAA,EAAAA,GAAiBrC,IACvC,GAAI8mB,GAAqBI,IAAIlnB,GAC3BwiB,IAAkBxiB,GAAI,QAIxB,GAAIgnB,GAAuBE,IAAIlnB,GAC7BwiB,IAAkBxiB,GAAI,OADxB,CAKA,GAAIqmB,GAAiBc,GAAiBnnB,GAAK,CACzC,MAAM2nB,EAAeR,GAAiBnnB,GAAIP,KACpCmoB,EAAwBpB,IAAoBjU,SAAW,GAQ7D,OAPIqV,EAAsBC,SAASF,GACjCC,EAAsBE,OAAOF,EAAsBG,QAAQJ,GAAe,GAE1EC,EAAsBlZ,KAAKiZ,QAE7BvB,EAAc4B,6BAA6BJ,EAG7C,CAEA,GAAIvB,EAAe,CACjB,MAAM4B,EAAiBtB,GAAYpU,QAQnC,OAPI0V,EAAeJ,SAAS7nB,GAC1BioB,EAAeH,OAAOG,EAAeF,QAAQ/nB,GAAK,GAElDioB,EAAevZ,KAAK1O,QAEtBomB,EAAc8B,sBAAsBD,EAGtC,CAEId,GAAiBnnB,GACnBomB,EAAc+B,2BAA2BhB,GAAiBnnB,GAAIP,MAIhE2mB,EAAcgC,qBAAqBpoB,EAhCnC,IAmCIqoB,IAAqBhmB,EAAAA,EAAAA,GAAiBmG,IAC1C,MAAM,MAAEJ,GAAUI,EAAE2K,cACpB+S,IAAiB9d,MAGZkgB,GAAaC,KAAWC,EAAAA,EAAAA,GAC7BrC,EAAYkB,GAAe1lB,QAAQ0jB,IAG/BoD,IAAaC,EAAAA,EAAAA,IAAY,CAAC1oB,EAAY2oB,KAC1C,MAAM5tB,GAASqkB,EAAAA,EAAAA,MACTwJ,EAAWD,EAAaxB,GAAiBnnB,QAAMhG,EAC/CkB,EAAQytB,OAAsC3uB,GAAzBoB,EAAAA,EAAAA,KAAWL,EAAQiF,GAExC6oB,EAAiB3tB,GAAQ0tB,EAC/B,IAAKC,EACH,OAAIC,EAAAA,KAEAjrB,EAAAA,EAAAA,IAAA,OAAAb,SAAA,CAAc,8BAEXgD,IAFOA,QAMd,EAGF,MAAMzE,EAASL,KAASyB,EAAAA,EAAAA,IAAczB,GAASA,EAAKK,SAAWN,OAAiBjB,EAE1E+uB,EAAqB/B,GAAuBE,IAAIlnB,GAChDgpB,EAAmBlC,GAAqBI,IAAIlnB,GAC5CipB,EAAWF,GAAsBC,EACjCE,EAAYN,EAAWpC,IAAoBqB,SAASe,EAASnpB,MAAQknB,GAAYkB,SAAS7nB,IA4CzFiiB,EAAUM,GA/BjB,WACE,GAAIwG,EAAoB,MAAO,CAACpD,GAChC,GAAKzqB,EAAL,CAEA,GAAI8qB,EAAmB,CACrB,MAAMmD,GAAWC,EAAAA,EAAAA,IAAgBluB,GACjC,GAAIiuB,EACF,MAAO,CAAC,IAAIA,IAEhB,CAEA,GAAIrD,EAAY,CACd,IAAInpB,EAAAA,EAAAA,IAAczB,GAChB,MAAO,EAACmuB,EAAAA,EAAAA,IAAe/sB,EAAMpB,IAG/B,MAAMouB,GAAaC,EAAAA,EAAAA,KAAiBxuB,EAAQG,EAAK8E,IACjD,MAAO,EACLwpB,EAAAA,EAAAA,IAAcltB,EAAMpB,EAAMouB,IAC1B7rB,EAAAA,EAAAA,IAAegsB,EAAAA,EAAAA,IAAavuB,EAAMouB,GAAY,IAASxmB,EAAAA,EAAO4mB,cAElE,CAEA,GAAI3D,EAAe,CACjB,MAAM4D,GAAUC,EAAAA,EAAAA,IAAe1uB,GAC/B,OAAOyuB,GAAW,CAACrtB,EAAKqtB,GAC1B,CAxB2B,CA2B7B,CAEsCE,IAAiB,GAEvD,OACE9sB,EAAAA,EAAAA,GAACilB,EAAAA,EAAU,CAET/lB,WAAWwB,EAAAA,EAAAA,GAAeunB,EAAiB3oB,GAC3CX,OAAOqB,EAAAA,EAAAA,GAACQ,EAAAA,EAAa,CAACrC,KAAM2tB,IAC5B3G,eACEnlB,EAAAA,EAAAA,GAACK,EAAAA,EAAM,CACLlC,KAAMA,GAAQ0tB,EACdztB,gBAAiBI,EACjB8B,KAAK,WAGT4kB,SAAUA,EACVM,kBAAmBA,EACnBzZ,SAAUmgB,EACV5G,SAAUuD,EACV/c,QAAM,EACNsZ,aA5DE8G,GAAiBlsB,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAACC,KAAK,eACV,UAAlB2oB,GACK9oB,EAAAA,EAAAA,GAAC+sB,EAAAA,EAAK,CAACC,QAASb,EAAWpgB,SAAUmgB,EAAUe,WAAS,IAE3C,aAAlBnE,GACK9oB,EAAAA,EAAAA,GAACktB,EAAAA,EAAQ,CAACF,QAASb,EAAWpgB,SAAUmgB,EAAUe,WAAS,SADpE,EAyDE5H,cAAc,MAEdhmB,QAASA,IAAMsrB,GAAgB1nB,GAE/BwiB,gBAAiBA,GAAmB,KAAOA,EAAgBxiB,EAAIgpB,KApB1DhpB,IAuBR,CACDmnB,GAAkBlsB,EAAe2qB,EAAYvpB,EAAewpB,EAAevpB,EAAMwqB,GACjFE,GAAwBrB,EAA0BnD,EAAiBgE,GAAoBG,GACvFZ,EAAeD,EAAYE,IAGvBkE,IAAiBtvB,EAAAA,EAAAA,IAAQ,KAC7B,GAAKsqB,GAAYnkB,OACjB,OACElD,EAAAA,EAAAA,IAAA,OAAAb,SAAA,CACGooB,IAA0BroB,EAAAA,EAAAA,GAAA,OAAKd,UAAW6G,EAAAA,EAAOqnB,oBAAoBntB,SAAEV,EAAK8oB,KAC5EF,GAAY1S,IAAKoW,GAAaH,GAAWG,EAASnpB,MAAM,KACzD1C,EAAAA,EAAAA,GAAA,OAAKd,UAAW6G,EAAAA,EAAOqnB,oBAAoBntB,SAAEV,EAAK,mBAH3C,eAMV,CAAC4oB,EAAYE,EAAwB9oB,EAAMmsB,KAE9C,OACE5qB,EAAAA,EAAAA,IAAA,OAAK5B,WAAWwB,EAAAA,EAAAA,GAAeqF,EAAAA,EAAOgC,UAAW7I,GAAWe,SAAA,CACzD0oB,IACC7nB,EAAAA,EAAAA,IAAA,OAAK5B,WAAWwB,EAAAA,EAAAA,GAAeqF,EAAAA,EAAOsnB,OAAQ,iBAAkBtsB,IAAKxB,EAAKyB,MAAQ,WAAQ/D,EAAUgD,SAAA,CACjGwpB,IAAoBhU,IAAKoW,IACxB7rB,EAAAA,EAAAA,GAACvB,EAAAA,EAAQ,CACPS,UAAW6G,EAAAA,EAAOunB,SAClBruB,WAAYmrB,GAAiByB,GAC7BxsB,QAASsrB,GACT5rB,SAAU8sB,EACVhtB,UAAQ,KAGX0qB,GAAmB9T,IAAI,CAACxS,EAAIsW,KAC3BvZ,EAAAA,EAAAA,GAACvB,EAAAA,EAAQ,CACPS,UAAW6G,EAAAA,EAAOunB,SAClBrvB,OAAQgF,EACRrE,YAAakrB,IAAkBvQ,EAAIqQ,GAAY5lB,OA1R7B,EA2RlB9F,cAAeA,EACfmB,QAASsrB,GACT5rB,SAAUkE,KAGbinB,GAAoBzU,IAAI,CAACxS,EAAIsW,KAC5BvZ,EAAAA,EAAAA,GAACvB,EAAAA,EAAQ,CACPS,UAAW6G,EAAAA,EAAOunB,SAClBrvB,OAAQgF,EACRrE,YACEkrB,IAAkBvQ,GAAKgQ,GAAmBvlB,QAAU,GAAK4lB,GAAY5lB,OArSrD,EAuSlBnF,UAAQ,EACRQ,QAASsrB,GACT5rB,SAAUkE,MAGdjD,EAAAA,EAAAA,GAACutB,EAAAA,EAAS,CACRtqB,GAAIwlB,EACJjmB,IAAKwH,GACLqB,MAAOid,EACP9c,SAAU8f,GACVjiB,YAAakf,GAAqBhpB,EAAK,mBAK5CgsB,IAAavnB,QACZhE,EAAAA,EAAAA,GAACwtB,EAAAA,EAAc,CACbtuB,WAAWwB,EAAAA,EAAAA,GAAeqF,EAAAA,EAAO0nB,WAAYvE,GAAsBnjB,EAAAA,EAAO2nB,OAAQ,iBAClFC,MAAOpC,GACPqC,aAAc,IAAI3F,IAClBkF,eAAgBA,GAChB/D,WAAYoC,GACZ9C,gBAAiBA,EAAgBzoB,SAEhCsrB,GAAY9V,IAAKxS,GAAOyoB,GAAWzoB,MAEnCgG,IAAasiB,IAAgBA,GAAYvnB,QAG5ChE,EAAAA,EAAAA,GAAC6tB,EAAAA,EAAO,KAFR7tB,EAAAA,EAAAA,GAAA,KAAGd,UAAW6G,EAAAA,EAAO+nB,UAAU7tB,SAAEuoB,GAAgB,8B,kDCvZ1C,SAASuF,EAAgBC,EAAYC,EAAmBC,EAAkBxwB,EAAY,IACnG,OAAOywB,EAAAA,EAAAA,GAAsBC,IAC3BA,KAEC1wB,EAAMswB,EAAIC,EAASC,EACxB,C,mFCDA,MAAMG,EAAmB,IAEnBC,EAAW,IAAIC,IAEN,SAASC,EAAwBzmB,EAAwBuO,EAAcmJ,EAAW4O,IAC1FI,EAAAA,EAAAA,MAA0BpM,EAAAA,EAAAA,SAC7B5C,EAAW,GAGb,MAAMze,EAA0C,QAAlC+G,EAAU2mB,aAAa,QAC/B,WACJlX,EAAYvH,YAAa0e,EAAc,YAAEC,EAAaC,SAAS,SAAEC,IAC/D/mB,EAEJ,IAAIgnB,EAAOzY,EAAOkB,EAElB,GAAIuX,EAAO,EAAG,CACZ,MAAMC,GAAiBxX,GAAcxW,GAAS,EAAI,GAClD+tB,EAAOlrB,KAAKuD,IAAI2nB,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgBJ,GAAepX,EAAamX,GAClDI,EAAOlrB,KAAK2M,IAAIue,EAAMC,EACxB,CAEA,GAAa,IAATD,EACF,OAAOhyB,QAAQC,UAGb8xB,GAAYR,EAASnE,IAAI2E,IAC3BR,EAAShT,IAAIwT,EAAbR,GAGF,MAAMtmB,EAASwP,EAAauX,EAE5B,OAAO,IAAIhyB,QAAeC,KACxB6N,EAAAA,EAAAA,IAAgB,KACd,GAAiB,IAAb4U,EAGF,OAFA1X,EAAUyP,WAAaxP,OACvBhL,IAIF,IAAIiyB,GAAY,EAChB,MAAMhsB,EAAKY,KAAKE,SAASuf,WACzBvb,EAAU8mB,QAAQC,SAAW7rB,EAC7BqrB,EAASY,IAAIjsB,EAAI,KACfgsB,GAAY,IAGdlnB,EAAU3H,MAAM+uB,eAAiB,OAEjC,MAAMC,EAAUzb,KAAKC,MAErB,SAASyb,IACPtnB,EAAU3H,MAAM+uB,eAAiB,UAC1BpnB,EAAU8mB,QAAQC,SACzBR,EAASgB,OAAOrsB,EAClB,EAEAsc,EAAAA,EAAAA,IAAQ,KACN,GAAI0P,EAEF,OADAI,KACO,EAGT,MAAME,EAAI1rB,KAAK2M,KAAKmD,KAAKC,MAAQwb,GAAW3P,EAAU,GAEhD+P,EAAcT,GAAQ,EAcpC,SAAoBQ,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAhBwCE,CAAWF,IAQ3C,OAPAxnB,EAAUyP,WAAa3T,KAAK0E,MAAMP,EAASwnB,GAEvCD,GAAK,IACPF,IACAryB,KAGKuyB,EAAI,GACV1kB,EAAAA,OAGT,C,+DCnFO,MAAM6kB,EAAwC,CACnDC,cAAc,EACdjtB,KAAM,UACNktB,SAAU,iBACVC,YAAa,qBACbC,WAAY,OACZlvB,gBAAgB,EAChBmvB,qBAAqB,GAGVC,EAAsD,CACjE,CACEL,cAAc,EACdjtB,KAAM,WACNktB,SAAU,iBACVE,WAAY,OACZlvB,gBAAgB,EAChBqvB,YAAa,GAEf,CACEN,cAAc,EACdjtB,KAAM,cACNktB,SAAU,oBACVE,WAAY,eACZlvB,gBAAgB,EAChBqvB,YAAa,GAEf,CACEN,cAAc,EACdjtB,KAAM,SACNktB,SAAU,eACVE,WAAY,QACZlvB,gBAAgB,EAChBqvB,YAAa,GAEf,CACEN,cAAc,EACdjtB,KAAM,WACNktB,SAAU,iBACVE,WAAY,UACZlvB,gBAAgB,EAChBqvB,YAAa,GAEf,CACEN,cAAc,EACdjtB,KAAM,OACNktB,SAAU,aACVE,WAAY,OACZlvB,gBAAgB,EAChBqvB,YAAa,IAIJC,EAAsD,CACjE,CACEP,cAAc,EACdjtB,KAAM,eACNktB,SAAU,cACVE,WAAY,OACZlvB,gBAAgB,EAChBqvB,YAAa,GAEf,CACEN,cAAc,EACdjtB,KAAM,cACNktB,SAAU,aACVE,WAAY,YACZlvB,gBAAgB,EAChBqvB,YAAa,GAEf,CACEN,cAAc,EACdjtB,KAAM,kBACNktB,SAAU,iBACVE,WAAY,UACZlvB,gBAAgB,EAChBqvB,YAAa,IAIJE,EAAiD,CAC5DR,cAAc,EACdjtB,KAAM,SACNktB,SAAU,yBACVE,WAAY,gBACZG,YAAa,E,mHCtFf,QAA4C,W,eCkB5C,MAEMG,EAAoB,IAAIpG,IAmD9B,GAAelsB,EAAAA,EAAAA,IAjDf,SAAiC4U,GAC/B,MAAM,WACJmG,EAAU,aAAEhD,EAAY,UAAE3W,KAAcmxB,GACtC3d,GAEG4d,EAAY,CAAGC,IAAmB7qB,EAAAA,EAAAA,GAAQd,QAAQiR,IACnD2a,GAAkB7jB,EAAAA,EAAAA,GAA6B2jB,IAE9CG,EAAeC,EAAiBC,IAAqBjrB,EAAAA,EAAAA,GAAQ0qB,EAAkBjG,IAAItR,IACpF+X,GAAoBjkB,EAAAA,EAAAA,GAA6B8jB,IAEhDI,EAAkBC,IAAsBprB,EAAAA,EAAAA,IAAQ,GAEjDqrB,GAAoBzrB,EAAAA,EAAAA,GAAgB,KACxCorB,IACAN,EAAkBY,IAAInY,KAGlBoY,GAAuB3rB,EAAAA,EAAAA,GAAgB,KAC3CirB,IACAI,IACA7nB,WAAWgoB,EAzBY,QA4BnB,KAAExwB,GAASoS,EAEjB,OACE5R,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GAAexB,EDlDT,YCmDjBkB,OAAO+R,EAAAA,EAAAA,QAAoBlV,IAATqD,GAAsB,UAAUA,gBAAmBA,QAAWL,SAAA,CAE/E4V,IAAiBgb,IAEhB7wB,EAAAA,EAAAA,GAAA,OAAK8M,IAAK+I,EAAc3W,WAAWwB,EAAAA,EAAAA,GAAeqF,EAAgByqB,GAAkBvjB,WAAW,IAEhG4L,IAAegY,IAEd7wB,EAAAA,EAAAA,GAAA,OACE8M,IAAK+L,EACL3Z,WAAWwB,EAAAA,EAAAA,GAAeqF,EAAgB6qB,GAC1C3jB,WAAW,EACXnG,OAAQiqB,KAGZ/wB,EAAAA,EAAAA,GAACwc,EAAAA,EAAY,IAAK6T,EAAYvpB,OAAQmqB,MAG5C,E,8FC7DA,MAmCA,EAnC4BC,CAACC,EAAiBC,KAC5C,MAAM,iBAAEC,IAAqB9uB,EAAAA,EAAAA,OACtB8I,EAAOimB,IAAYhnB,EAAAA,EAAAA,IAAS8mB,GA8BnC,OA5BA5zB,EAAAA,EAAAA,IAAU,KACH4zB,IAIDA,EAAaG,WAAW,KAC1BD,EAASF,GAETI,EAAAA,MAAeC,EAAAA,IAAsBN,EAAOK,EAAAA,KAAcE,MACvD5Y,KAAM6Y,IACL,MAAMt0B,EAAMF,IAAIG,gBAAgBq0B,IAChCp0B,EAAAA,EAAAA,IAAaF,GACVyb,KAAK,KACJwY,EAAS,OAAOj0B,UAGrBu0B,MAAM,KACLP,EAAiB,CACfF,QACAU,gBAAY50B,EACZ60B,qBAAiB70B,EACjB80B,WAAW,EACXha,aAAwB,SAAVoZ,EAAmBa,EAAAA,IAA2BC,EAAAA,UAInE,CAACb,EAAcD,IAEXC,EAAe/lB,OAAQpO,E,kBCvBzB,SAASi1B,EAAmBC,GACjC,MAAkB,aAAdA,EAAKzvB,KACAyvB,EAAKC,QAGPD,EAAKE,WAAWzvB,KAAM0vB,GAA0D,UAAdA,EAAK5vB,OAAmB0vB,OACnG,CAEO,SAASG,EAAyBJ,GACvC,MAAkB,aAAdA,EAAKzvB,KACAyvB,EAAKK,kBAGPL,EAAKlQ,UACd,CAQO,SAASwQ,EAAkBN,GAChC,GAAkB,mBAAdA,EAAKzvB,KAET,OAGK,SAAmC2vB,GACxC,MAAMK,EAAQL,EAAWzvB,KAAM0vB,GAA0D,UAAdA,EAAK5vB,MAC1EiwB,EAAWN,EAAWzvB,KAAM0vB,GAA6D,aAAdA,EAAK5vB,MAChFkwB,EAAUP,EAAWzvB,KAAM0vB,GAA4D,YAAdA,EAAK5vB,MAKpF,MAAO,CACLgwB,QACAG,gBANsBR,EAAWzvB,KAAM0vB,GACzB,oBAAdA,EAAK5vB,MAMLkwB,UACAD,WAEJ,CAjBSG,CAA0BX,EAAKE,WACxC,C,iLCnBA,IAAIU,EAA6B,EAEjC,MAAMC,GAAwBC,EAAAA,EAAAA,IAAoB,KAChDF,EAA6B,IAyC/B,GAAej1B,EAAAA,EAAAA,IAtCuByiB,EACpCC,OACAthB,YACA4X,aACAtU,UAEA,MAAM,MAAExB,IAAUiJ,EAAAA,EAAAA,KAEZipB,GAAWC,EAAAA,EAAAA,GAAsB3S,GACjC7P,GAAcC,EAAAA,EAAAA,KAEdwiB,OACHtc,IAAc2X,EAAAA,EAAAA,MAA0BpM,EAAAA,EAAAA,aAA6BplB,IAAbi2B,GAA0BA,IAAa1S,IA6BhFuS,GAjDgB,KAmDC,IAA/BA,GACFC,IAGFD,IAEO,IAlCDM,GAAax1B,EAAAA,EAAAA,IAAQ,IAClBu1B,EAoCX,SAAkC5S,EAAc0S,GAC9C,MAAMI,EAA8B,GAC9BC,EAAa/S,EAAKxc,OAClBwvB,EAAiBN,GAAUlvB,QAAU,EAE3C,IAAK,IAAIuV,EAAI,EAAGA,GAAKga,EAAYha,IAAK,CACpC,MAAMka,EAAYF,EAAaha,EACzBma,EAAoBF,EAAiBja,EAEvC2Z,GAAYQ,GAAqB,GAAKlT,EAAKiT,KAAeP,EAASQ,GACrEJ,EAASK,SACP7yB,EAAAA,EAAAA,IAAA,OAAK5B,UC7F2E,WD6FtCe,SAAA,EACxCD,EAAAA,EAAAA,GAAA,OAAKd,UC9FgG,WD8FpEe,SAAEugB,EAAKiT,IAAc,MACtDzzB,EAAAA,EAAAA,GAAA,OAAKd,UC/FqJ,WD+FtHe,SAAEizB,EAASQ,MAC/C1zB,EAAAA,EAAAA,GAAA,OAAKd,UChG2Q,WDgG5Oe,SAAEugB,EAAKiT,IAAc,SAI7DH,EAASK,SAAQ3zB,EAAAA,EAAAA,GAAA,QAAAC,SAAOugB,EAAKiT,IAAc,KAE/C,CAEA,OAAOH,CACT,CA3D2BM,CAAyBpT,EAAM0S,GAAY1S,EACjE,CAAC4S,EAAeF,EAAU1S,IAc7B,OAZAhjB,EAAAA,EAAAA,IAAU,KACR,IAAK41B,EAAe,OAEpB,MAAMtiB,EAAYG,OAAOnI,WAAW,KAClC6H,KAhCiB,KAmCnB,MAAO,KACLM,OAAOlI,aAAa+H,KAErB,CAACsiB,EAAe5S,KAGjBxgB,EAAAA,EAAAA,GAAA,QAAMwC,IAAKA,EAAKtD,WAAWwB,EAAAA,EAAAA,GAAexB,GAAY4X,GC9DnC,YD8D+D/V,IAAKC,EAAQ,WAAQ/D,EAAUgD,SAC9GozB,K,mCE/DP,SAAgB,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,QAAU,WAAW,iBAAiB,WAAW,cAAgB,WAAW,IAAM,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,WAAW,WAAW,QAAU,WAAW,QAAU,WAAW,SAAW,WAAW,YAAc,W,kBCDrX,IAAIQ,EACAC,E,2BAEJ,MAAMC,EAAwC,CAC5CC,MAAM,EACNC,WAAW,EACXC,IAAI,EACJC,SAAS,EACTC,MAAM,EACNC,WAAW,EACXC,OAAO,EACPC,YAAY,EACZ,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,KAAK,GAsBD3pB,EAAkBQ,IACtB,MAAMgM,EAAS,WAAYhM,EAAIA,EAAEgM,OALThM,IAChB,mBAAoBA,EAAIA,EAAEopB,eAAe,GAAGxoB,QAAU,EAIpByoB,CAAUrpB,GAEpD,IACGooB,IAEGA,EAAakB,SAAStpB,EAAEzD,SAExB6rB,EAAavrB,WAAa,GAAKmP,GAAU,GAEzCoc,EAAavrB,WAAcurB,EAAaxrB,aAAewrB,EAAazrB,cAAiBqP,GAAU,EACnG,CACA,GAAIqc,GAA4BroB,EAAEzD,OAAuBC,QAAQ6rB,GAA0B,OAC3FroB,EAAER,gBACJ,GAGF,SAAS+pB,EAA4BvpB,GAC/BsoB,EAAatoB,EAAE8W,OArCrB,SAAmBva,GACjB,KAAKA,GAAYA,aAAkBitB,aAAc,OAAO,EACxD,MAAMC,EAAUltB,EACVmtB,EAAUD,EAAQC,QAAQC,cAChC,GAAgB,aAAZD,EAAwB,OAAO,EACnC,GAAgB,UAAZA,EAAqB,OAAO,EAChC,MAAMzyB,EAAOwyB,EAAQxG,aAAa,QAClC,QAAKhsB,GACc,CACjB,OAAQ,WAAY,SAAU,QAAS,MAAO,MAC9C,SAAU,OAAQ,WAAY,iBAAkB,OAAQ,QAAS,QAEjDsoB,QAAQtoB,EAAK0yB,gBAAkB,CACnD,CAwB8BC,CAAU5pB,EAAEzD,SACtCyD,EAAER,gBAEN,CAEO,SAASqqB,EAAiBpf,EAAyBqf,GAQxD,OAPA1B,EAAe3d,EACf4d,EAA0ByB,EAE1BC,SAAS9d,iBAAiB,QAASzM,EAAgB,CAAE0M,SAAS,IAC9D6d,SAAS9d,iBAAiB,YAAazM,EAAgB,CAAE0M,SAAS,IAClE6d,SAASC,UAAYT,EAEdU,CACT,CAEO,SAASA,IACd7B,OAAe52B,EACf62B,OAA0B72B,EAC1Bu4B,SAAS5d,oBAAoB,QAAS3M,GACtCuqB,SAAS5d,oBAAoB,YAAa3M,GAE1CuqB,SAASC,UAAY,IACvB,C,oGCpEO,SAASE,EAA8BC,GAC5C,MAAMjlB,GAAcC,EAAAA,EAAAA,KAIpB,OAFApT,EAAAA,EAAAA,IAAU,KAAMq4B,EAAAA,EAAAA,IAAsBD,EAAUjlB,GAAc,CAACilB,EAAUjlB,KAElEmlB,EAAAA,EAAAA,IAAcF,EACvB,CAEO,SAASG,IACd,MAAMplB,GAAcC,EAAAA,EAAAA,KAIpB,OAFApT,EAAAA,EAAAA,IAAU,KAAMw4B,EAAAA,EAAAA,IAA0BrlB,GAAc,CAACA,KAElDslB,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMvlB,GAAcC,EAAAA,EAAAA,KAIpB,OAFApT,EAAAA,EAAAA,IAAU,KAAM24B,EAAAA,EAAAA,IAAsBxlB,GAAc,CAACA,KAE9CylB,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAM1lB,GAAcC,EAAAA,EAAAA,KAIpB,OAFApT,EAAAA,EAAAA,IAAU,KAAM84B,EAAAA,EAAAA,IAAiC3lB,GAAc,CAACA,KAEzD4lB,EAAAA,EAAAA,KACT,C,gMCzCA,QAAuB,WAAvB,EAAmM,WAAnM,EAAsQ,W,eCiBtQ,MAAM1Z,EAAgB,EAAI3b,EAAAA,EAsF1B,GAAepD,EAAAA,EAAAA,IAxEsC04B,EACnDz0B,WACAke,SACAwW,UACAC,oBACAt2B,QACA8rB,WACAyK,mBACAC,qBACAC,8BAEA,MAAMr0B,GAAM7F,EAAAA,EAAAA,MACNsZ,GAAc3Q,EAAAA,EAAAA,GAAgB,KACZ,SAAlBvD,EAASW,KAKbi0B,EAAiB50B,GAJf60B,SAOE,kBACJvY,EAAiB,wBACjBC,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBlc,EAAuB,SAAlBT,EAASW,UAAiBzF,OAAWA,OAAWA,GAAW,GAW3F,OATAO,EAAAA,EAAAA,IAAU,KACJ6gB,IACFwY,MAEArY,IACAC,MAED,CAACD,EAAwBqY,EAAyBpY,EAAuBJ,KAG1Evd,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GACTqF,EDxEmC,WC0EnCka,GAA4B,SAAlBle,EAASW,MAAmBqD,GACrC2wB,GAAqBD,GD3E2F,WC4EjHC,GD5EwD,YC8E1Dl0B,IAAKA,EACLpC,MAAOA,EACPf,QAAS4W,EACTiK,YAAa5B,EACb6B,cAAe5B,EAAkBte,SAAA,CAEd,SAAlB8B,EAASW,MACR1C,EAAAA,EAAAA,GAACwc,EAAAA,EAAY,CACX7V,OAAQ8V,EAAAA,EAAeqa,aACvBx2B,KAAMuc,EACNhW,QAAQ,KAGV7G,EAAAA,EAAAA,GAACmG,EAAAA,EAAW,CACV/C,WAAYrB,EAASqB,WACrB9C,KAAMuc,IAGTqP,IACClsB,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAAChB,UAAW6G,EAAa5F,KAAK,oB,qCClF3C,MAAM0c,EAAgB,EAAI3b,EAAAA,EA2E1B,GAAepD,EAAAA,EAAAA,IAhEgCi5B,EAC7Ch1B,WACA00B,UACAC,oBACAzW,SACAiM,WACAyK,uBAEA,MAAMK,GAAkBzyB,EAAAA,EAAAA,GAAS,UAAUxC,EAASk1B,iBAAiBh0B,MAAOwzB,GAAWC,GACjFhqB,GAAYnI,EAAAA,EAAAA,GAAS,WAAWxC,EAASm1B,iBAAiBj0B,MAAOwzB,GAAWC,GAC5ES,GAAiB5yB,EAAAA,EAAAA,GAAS,WAAWxC,EAASyK,YAAYvJ,MAAOyzB,IAChEnxB,EAAmBC,IAAuBE,EAAAA,EAAAA,MAE1C0xB,EAAY,CAAGC,IAAqB3xB,EAAAA,EAAAA,IAAQ,IAC5C4xB,EAAaC,EAAUC,IAAc9xB,EAAAA,EAAAA,KAM5C,OACE5E,EAAAA,EAAAA,IAAA,OACE5B,WAAWwB,EAAAA,EAAAA,GAAeqF,EAAaka,GAAUla,GACjD1G,QAPJ,WACEs3B,EAAiB50B,EAASA,SAC5B,EAMI01B,aAAchB,IAAYW,EAAcG,OAAWt6B,EAAUgD,SAAA,CAE5Dy2B,IACC12B,EAAAA,EAAAA,GAAA,OACEd,UFtD0O,WEuD1O4N,IAAKqqB,EACLnqB,IAAKjL,EAASA,SAAS0B,SACvBwJ,WAAW,KAGb1H,IAAsBmxB,IACtB12B,EAAAA,EAAAA,GAACwG,EAAAA,EAAe,CAEdG,OAAQqwB,EACRpwB,KAAMwwB,EACNvwB,QAAM,EACNvG,KAAMuc,EACN9V,QAASswB,EACT9wB,aAAW,GANNxE,EAASk1B,iBAAiBh0B,KASjCm0B,IAAgBV,IAChB12B,EAAAA,EAAAA,GAACwG,EAAAA,EAAe,CAEdG,OAAQ+F,EACR9F,KAAM0wB,EACNzwB,QAAM,EACNvG,KAAMuc,EACN/V,OAAQtB,EACRuB,QAASywB,EACTjxB,aAAW,GAPNxE,EAASm1B,iBAAiBj0B,IAUlCipB,IACClsB,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAAChB,UAAW6G,EAAa5F,KAAK,oBC5BrCu3B,GAAKC,EAAAA,EAAAA,GAAuB,oBAuLlC,GAAe75B,EAAAA,EAAAA,IAnLwB85B,EACrCC,wBACAC,eACAC,sBACAC,mBACAC,mBACAC,iBACAC,YACA1B,UACA2B,wBACAl5B,YACAgiB,uBACAmX,oBACAC,kBACAC,eACAC,kBACAC,qBACA1jB,UACA4hB,mBACAC,qBACAC,0BACA6B,iBAEA,MAAM,iBAAEjX,IAAqBlf,EAAAA,EAAAA,MACvBC,GAAM7F,EAAAA,EAAAA,MACN4C,GAAOC,EAAAA,EAAAA,KAEPm5B,EAAqBN,IAAsBnX,IAAyBoX,EAEpEM,EAA4Bh0B,QAAQszB,GACrCD,GAAoBA,EAAiBj0B,QAAUk0B,GAE9Ct2B,GAAqB/D,EAAAA,EAAAA,IAAQ,KACjC,MAAM0D,EACAq3B,EAAkCX,GAAkBxiB,IAAK1T,GAAaA,EAASA,UAC/Ew2B,EAAqBC,EACrBH,EAA0BN,EACC,SAA3BC,GAAkBt1B,KAAwBs1B,EAAiBa,QACxDhB,GAAuBpiB,IAAK1T,GAAaA,EAASA,UAGrD+2B,EAAyCv3B,GAAWkU,IAAK1T,IAC7D,MAAMg3B,EAAqC,WAAlBh3B,EAASW,KAC5BC,EAAoBk1B,GAAuBj1B,KAAMC,IAAMC,EAAAA,EAAAA,IAAeD,EAAEd,SAAUA,IAExF,OAAIw2B,EAAqB51B,GAEnBo2B,GAAqBp2B,KAAsBA,GAAmBq2B,aAE/Db,GAAcS,GACZZ,IAAqBiB,EAAAA,EAAAA,IAAgBl3B,EAAUi2B,IAI/Ce,EAAmBh3B,EAAWY,OAPrC,IAQCkiB,OAAOjgB,UAAY,GAEhBs0B,GAAkBC,EAAAA,EAAAA,IAAcL,EAAmBhB,GAIzD,OAHIW,GACFS,EAAgBvF,QAAQ,CAAEjxB,KAAM,SAE3Bw2B,GACN,CACDrB,EAAuBI,EAAkBF,EAAqBC,EAAkBK,EAAmBF,EACnGL,EAAcS,EAAcC,EAAiBI,EAA2BH,IAGpEW,GAAoBv7B,EAAAA,EAAAA,IAAQ,IAEKw7B,IAA9Bz3B,EAAmBoC,OACtBpC,EACAA,EAAmB4T,MAAM,EA1ER,GA2EpB,CAAC5T,IACE03B,EAAiBF,EAAkBp1B,OAASpC,EAAmBoC,OAE/Du1B,GAAsB17B,EAAAA,EAAAA,IAAQ,KAClC,MAAM27B,EAAkBvB,GAAkBpT,OAAO,EAAG4U,sBAAkCx8B,IAAhBw8B,IAA8B,GACpG,OAAO,IAAIzP,IAAIwP,EAAgB/jB,IAAI,EAAG1T,cACpCq3B,EAAkBM,UAAW72B,GAAMA,IAAKC,EAAAA,EAAAA,IAAe,aAAcD,EAAIA,EAAEd,SAAWc,EAAGd,OAE1F,CAACk2B,EAAkBmB,IAEhBO,GAAsBr0B,EAAAA,EAAAA,GAAgB,KAC1C,MAAMs0B,EAAQp3B,EAAItF,SAASmZ,yBAA2B,CAAEpK,EAAG,EAAGG,EAAG,GACjEssB,EAAW,CACTzsB,EAAG2tB,EAAM3tB,EACTG,EAAGwtB,EAAMxtB,MAIPytB,GAAyBv0B,EAAAA,EAAAA,GAAgB,KAC7CyP,MACA0M,EAAiB,CACfwB,eAAgB,iBAId6W,GAAWj8B,EAAAA,EAAAA,IAAQ,KACvB,GAAIw6B,EAAmB,CACrB,IAAKnX,EAAsB,CACzB,MACM6Y,EADOx6B,EAAK,2BACCy6B,MAAM,UACzB,OACEl5B,EAAAA,EAAAA,IAAA,QAAAb,SAAA,CACG85B,EAAM,IACP/5B,EAAAA,EAAAA,GAACi6B,EAAAA,EAAI,CAACzsB,WAAS,EAACnO,QAASw6B,EAAuB55B,SAC7CV,EAAK,4BAEPw6B,EAAM,KAGb,CAEA,OAAOx6B,EAAK,yBACd,CAEA,OAAI+4B,EACK/4B,EAAK,sBAGVg5B,EACKh5B,EAAK,6BADd,GAKC,CAAC2hB,EAAsBmX,EAAmBC,EAAiB/4B,EAAMg5B,IAEpE,GAAKa,EAAkBp1B,OAEvB,OACElD,EAAAA,EAAAA,IAAA,OAAK5B,WAAWwB,EAAAA,EAAAA,GAAeg3B,EAAG,KAAMx4B,GAAYsD,IAAKA,EAAIvC,SAAA,EAC3DD,EAAAA,EAAAA,GAAA,OAAKd,UAAWw4B,EAAG,eAAgBn4B,EAAKyB,OAAS,YACjDF,EAAAA,EAAAA,IAAA,OAAK5B,UAAWw4B,EAAG,iBAAiBz3B,SAAA,EAClCD,EAAAA,EAAAA,GAAA,OAAKd,UAAWw4B,EAAG,aAAcn4B,EAAKyB,OAAS,YAC/CF,EAAAA,EAAAA,IAAA,OAAK5B,UAAWw4B,EAAG,SAASz3B,SAAA,CACzB65B,IAAY95B,EAAAA,EAAAA,GAAA,OAAKd,UAAWw4B,EAAG,QAAQz3B,SAAE65B,KAC1Ch5B,EAAAA,EAAAA,IAAA,OAAK5B,UAAWw4B,EAAG,aAAc32B,IAAKxB,EAAKyB,MAAQ,WAAQ/D,EAAUgD,SAAA,CAClEm5B,EAAkB3jB,IAAI,CAAC1T,EAAUwX,IAChC,aAAcxX,GACZ/B,EAAAA,EAAAA,GAAC+2B,EAAwB,CAEvBN,QAASA,EACTE,iBAAkBA,EAClB50B,SAAUA,EACV20B,mBAAoB0B,EACpBnY,OAAQsZ,EAAoBpP,IAAI5Q,GAChC2S,SAAUyM,IANLnW,EAAAA,EAAAA,IAAezgB,EAASA,YAS/B/B,EAAAA,EAAAA,GAACw2B,EAA8B,CAE7BC,QAASA,EACTE,iBAAkBA,EAClBC,mBAAoBA,EACpBC,wBAAyBA,EACzB90B,SAAUA,EACV20B,mBAAoB0B,EACpBnY,OAAQsZ,EAAoBpP,IAAI5Q,GAChC2S,SAAUyM,EACVv4B,MAAO,uBAjKH,IADG,EAkK2CmZ,SAT7CiJ,EAAAA,EAAAA,IAAezgB,KAazBu3B,IACCt5B,EAAAA,EAAAA,GAAC6L,EAAAA,EAAM,CACLquB,MAAM,cACNh7B,UAAWw4B,EAAG,aACdr4B,QAASs6B,EAAoB15B,UAE7BD,EAAAA,EAAAA,GAACE,EAAAA,EAAI,CAACC,KAAK,wB,wEC/N3B,MAAMg6B,EAAiB,IACjBC,EAAsB,IAEb,SAASC,EACtBrwB,EACA2I,EACAoC,GAEA,MAAM,SAAE7K,IAAaC,EAAAA,EAAAA,OAErB3M,EAAAA,EAAAA,IAAU,KACJmV,EACGzI,GACHpB,WAAW,MACT+B,EAAAA,EAAAA,IAAgB,KACVb,EAAS9M,SAASo9B,aACpBtwB,EAAS9M,QAAQ0N,WAGpBuvB,IAGDnwB,EAAS9M,SAASo9B,aACpBtwB,EAAS9M,QAAQq9B,OAGfxlB,GACFjM,WAAWiM,EAASqlB,KAGvB,CAACpwB,EAAUE,EAAUyI,EAAQoC,GAClC,C,8FCzBA,MAAMylB,EAAsB,IACtBC,EAAyBC,EAAAA,IACzBC,EAAe,GAEN,SAASC,GAAgB,WACtCC,EAAU,OACVzd,EAAM,UACN0d,EAAS,eACTC,EAAc,iBACdC,EAAgB,oBAChBC,EAAmB,YACnBC,EAAW,QACXC,EAAO,qBACPC,IAYA,MAAMC,GAAiB1+B,EAAAA,EAAAA,KAAQu+B,IAE/BI,EAAAA,EAAAA,IAAgB,KACd,MAAMC,EAAcF,EAAen+B,QAGnC,GAFAm+B,EAAen+B,SAAU,EAErB49B,GAAaD,EAAW39B,QAAS,CACnC,MAAMs+B,EAAoBX,EAAW39B,QAAQ+K,QAAwB,gBAE/DwzB,EAAaT,EACbU,EAAiBN,GAAwBK,EAAa,MAAQ,cAE9DE,EAAOA,KACX,MAAMC,OAAiC3+B,IAAnB89B,EACfU,EAAajB,EAAsBC,OAA0Bx9B,EAE5DL,GAASi/B,EAAAA,EAAAA,IAAc,CAC3B9zB,UAAWyzB,EACXtG,QAAS2F,EAAW39B,QACpB4+B,SAAUJ,EACVK,OAAQpB,EACRiB,cACAI,eAAgBjB,EAChBkB,2BAA4BhB,EAC5BiB,wBAAwB,IAG1B,GAAIf,EAAS,CACX,MAAMgB,EAAatB,EAAW39B,QAASk/B,cAA+B,aAClED,IACFtxB,EAAAA,EAAAA,IAAgB,MACdwxB,EAAAA,EAAAA,IAAcF,EAAY,YAGhC,CAEA,OAAOv/B,GAGL2+B,GAEFe,EAAAA,EAAAA,IAAoBX,IAEpB3W,EAAAA,EAAAA,IAAe,MACbna,EAAAA,EAAAA,IAAgB8wB,MAGtB,GACC,CACDd,EAAYzd,EAAQ0d,EAAWC,EAAgBC,EAAkBC,EAAqBE,EAASC,GAEnG,C,yGChDA,SAAet9B,EAAAA,EAAAA,IAzBf,SAAiC4U,GAC/B,MAAM,QACJ0f,EAAO,OAAEmK,EAAM,aAAEC,KAAiBnM,GAChC3d,EAEEmD,EAAeuc,GAASqK,WAAWtY,QACnCuY,EAAiBtK,IAAWxZ,EAAAA,EAAAA,IAAoBwZ,EAAS,QACzDuK,GAAiBp4B,EAAAA,EAAAA,GACrB6tB,GAAUxZ,EAAAA,EAAAA,IAAoBwZ,EAAS,gBAAan1B,EACpDs/B,IAAWC,EACXI,EAAAA,GAAeC,SAEXl2B,GAASpC,EAAAA,EAAAA,GAASm4B,EAAgBH,GAExC,OACEv8B,EAAAA,EAAAA,GAAC88B,EAAAA,EAAuB,CACtBn2B,OAAQA,EACRkS,WAAY8jB,EACZ9mB,aAAcA,KAEVwa,GAGV,E,wEClCA,MAAM0M,EAAyB,IACzBC,EAAuB,IAEd,SAASC,EACtBC,EACAC,GAA2B,EAC3BC,EACAC,GAGA,MAAMr/B,GAASqkB,EAAAA,EAAAA,MAEf,OAAOib,EAAAA,EAAAA,IAAQJ,EAAUj6B,IACvB,GAAIA,IAAOo6B,EACT,OAAOE,IAGT,MAAM59B,GAAO69B,EAAAA,EAAAA,KAAWx/B,EAAQiF,GAChC,IAAKtD,EACH,OAAO,EAGT,IAAI89B,EAAW,EAEf,MAAMC,GAAcC,EAAAA,EAAAA,KAAsB3/B,EAAQiF,GAalD,OAZIy6B,IACFD,GAAYC,EAAYnqB,MAGtB4pB,GAA4Bx9B,EAAKi+B,aACnCH,GAAYV,GAGVK,GAAeA,EAAYtS,SAAS7nB,KACtCw6B,EAAW9pB,KAAKC,MAAQopB,GAAwBI,EAAYp5B,OAASo5B,EAAYpS,QAAQ/nB,KAGpFw6B,GACN,OACL,C,2FCtCO,MAAMI,EAAmE,CAC9EC,EAAG1W,EAAAA,GAAsB2W,KACzBC,OAAQ5W,EAAAA,GAAsB2W,KAC9BE,EAAG7W,EAAAA,GAAsB8W,OACzBC,GAAI/W,EAAAA,GAAsB8W,OAC1BE,IAAKhX,EAAAA,GAAsBiX,UAC3BC,EAAGlX,EAAAA,GAAsBiX,UACzBE,EAAGnX,EAAAA,GAAsBoX,OACzBC,OAAQrX,EAAAA,GAAsBoX,OAC9BE,IAAKtX,EAAAA,GAAsBoX,OAC3BG,KAAMvX,EAAAA,GAAsBwX,KAC5BC,IAAKzX,EAAAA,GAAsB0X,IAC3BC,WAAY3X,EAAAA,GAAsB4X,YAG9BC,EAAmB,EAEV,SAASC,EACtBC,EAAcC,GAAoB,EAAOC,GAAe,GAExD,MAAMC,EAAW9J,SAAS+J,cAAc,OACxCD,EAASE,UAAYH,EAAeF,EAmDtC,SAAuBA,GACrB,IAAIM,EAAaN,EAAK3pB,MAAM,GAsD5B,OAnDAiqB,EAAaA,EAAWC,QAAQ,UAAW,KAG3CD,EAAaA,EAAWC,QAAQ,4BAA6B,MAE7DD,EAAaA,EAAWC,QAAQ,gBAAiB,MAGjDD,EAAaA,EAAWC,QAAQ,qBAAsB,MACtDD,EAAaA,EAAWC,QAAQ,SAAU,MAC1CD,EAAaA,EAAWC,QAAQ,WAAY,IAG5CD,EAAaA,EAAWC,QAAQ,sCAAuC,oCACvED,EAAaA,EAAWC,QAAQ,kCAAmC,iBACnED,EAAaA,EAAWC,QAAQ,uBAAwB,iBAGxDD,EAAaA,EAAWC,QACtB,wEACA,mBAIGC,EAAAA,KAEHF,EAAaA,EAAWC,QAAQ,oCAAqC,SAEvED,EAAaA,EAAWC,QACtB,0FACA,wCAIFD,EAAaA,EAAWC,QACtB,wEACA,aAEFD,EAAaA,EAAWC,QACtB,wEACA,aAEFD,EAAaA,EAAWC,QACtB,wEACA,aAEFD,EAAaA,EAAWC,QACtB,wEACA,2BAA2BtY,EAAAA,GAAsBC,sBAG5CoY,CACT,CA1G0BG,CAApBR,EA4GN,SAA4BD,GAC1B,OAAOA,EAAKO,QAAQ,IAAIG,OAAO,qBAAqBC,EAAAA,YAA0B,KAAM,CAACC,EAAGvf,EAAMwf,IAErF,YADKA,EAAKlV,SAAS,OAASkV,EAAOA,EAAKlV,SAAS,KAAO,UAAUkV,IAAS,WAAWA,QAClExf,QAE/B,CAjHwCyf,CAAmBd,GAAuBA,GAChFe,EAAgBZ,GAChB,MAAM9e,EAAO8e,EAASa,UAAUC,OAAOV,QAAQ,WAAY,IAE3D,IAAIW,GADcf,EAASa,UAAUnV,QAAQxK,EAAK,IAE9C8f,EAAoB,EACxB,MAAMha,EAA+B,GAErC,SAASia,EAAUC,GACjB,GAAIA,EAAKC,WAAaC,KAAKC,aAAc,OACzC,MAAM,MAAEC,EAAK,OAAEC,GAyGnB,SACEL,EACAM,EACAT,GAEA,MAAM39B,EA6FR,SAA+B89B,GAC7B,GAAIA,aAAgBvL,aAAeuL,EAAK3R,QAAQkS,WAC9C,OAAOP,EAAK3R,QAAQkS,WAGtB,GAAIlD,EAA0B2C,EAAKQ,UACjC,OAAOnD,EAA0B2C,EAAKQ,UAGxC,GAAsB,MAAlBR,EAAKQ,SAAkB,CACzB,MAAMC,EAAST,EACf,OAAIS,EAAOpS,QAAQkS,aAAe3Z,EAAAA,GAAsB8Z,YAC/C9Z,EAAAA,GAAsB8Z,YAE3BD,EAAOpS,QAAQkS,aAAe3Z,EAAAA,GAAsB+Z,IAC/C/Z,EAAAA,GAAsB+Z,IAE3BF,EAAOG,KAAK7P,WAAW,WAClBnK,EAAAA,GAAsBia,MAE3BJ,EAAOG,KAAK7P,WAAW,QAClBnK,EAAAA,GAAsBka,MAE3BL,EAAOG,OAASH,EAAOM,YAClBna,EAAAA,GAAsBoa,QAGxBpa,EAAAA,GAAsB+Z,GAC/B,CAEA,MAAsB,SAAlBX,EAAKQ,SACCR,EAAqB3R,QAAQkS,WAGjB,QAAlBP,EAAKQ,UACFR,EAA0B3R,QAAQzrB,WAC9BgkB,EAAAA,GAAsBjhB,iBAFjC,CAOF,CAtIes7B,CAAsBjB,GAEnC,IAAK99B,IAAS89B,EAAKe,YACjB,MAAO,CACLX,MAAOP,EACPQ,YAAQ5jC,GAIZ,MAAMykC,EAAWZ,EAAQ9V,QAAQwV,EAAKe,YAAalB,GAG7CO,EAAQc,GAAY,EAAIA,EAAWrB,EACnC7gB,EAASshB,EAAQa,UAAU,EAAGf,GAAO58B,QACrC,OAAEA,GAAW88B,EAAQa,UAAUf,EAAOA,EAAQJ,EAAKe,YAAYv9B,QAErE,GAAItB,IAAS0kB,EAAAA,GAAsBoa,QACjC,MAAO,CACLZ,QACAC,OAAQ,CACNn+B,OACA8c,SACAxb,SACA3G,IAAMmjC,EAA2BY,OAIvC,GAAI1+B,IAAS0kB,EAAAA,GAAsB8Z,YACjC,MAAO,CACLN,QACAC,OAAQ,CACNn+B,OACA8c,SACAxb,SACA49B,OAASpB,EAA2B3R,QAAQ+S,SAKlD,GAAIl/B,IAAS0kB,EAAAA,GAAsB0X,IACjC,MAAO,CACL8B,QACAC,OAAQ,CACNn+B,OACA8c,SACAxb,SACA69B,SAAWrB,EAAwB3R,QAAQgT,WAKjD,GAAIn/B,IAAS0kB,EAAAA,GAAsBjhB,YACjC,MAAO,CACLy6B,QACAC,OAAQ,CACNn+B,OACA8c,SACAxb,SACAZ,WAAao9B,EAA0B3R,QAAQzrB,aAKrD,GAAIV,IAAS0kB,EAAAA,GAAsB0a,UAAW,CAC5C,MAAMC,EAAY5iB,OAAQqhB,EAAqB3R,QAAQkT,WACvD,OAAI5iB,OAAO6iB,MAAMD,GACR,CACLnB,QACAC,YAAQ5jC,GAIL,CACL2jC,QACAC,OAAQ,CACNn+B,OACA8c,SACAxb,SACA+9B,aAGN,CAEA,MAAO,CACLnB,QACAC,OAAQ,CACNn+B,OACA8c,SACAxb,UAGN,CAzM8Bi+B,CAAsBzB,EAAMhgB,EAAM6f,GAE5D,GAAIQ,EACFR,EAAYO,EACZta,EAAS3U,KAAKkvB,QACT,GAAIL,EAAKe,YAAa,CAE3B,GAAc,IAAVX,GAA2C,KAA5BJ,EAAKe,YAAYnB,OAClC,OAEFC,GAAaG,EAAKe,YAAYv9B,MAChC,CAEIw8B,EAAK0B,iBAAmB5B,GAAqBrB,IAC/CqB,GAAqB,EACrB1Y,MAAMua,KAAK3B,EAAK4B,YAAYxwB,QAAQ2uB,GAExC,CAOA,OALA3Y,MAAMua,KAAK7C,EAAS8C,YAAYxwB,QAAS4uB,IACvCF,EAAoB,EACpBC,EAAUC,KAGL,CACLhgB,OACA8F,SAAUA,EAAStiB,OAASsiB,OAAWrpB,EAE3C,CAEO,SAASijC,EAAgBZ,GAC9BA,EAAS+C,iBAAiB,OAAOzwB,QAAS4uB,IACpCA,EAAK3R,QAAQzrB,WACfo9B,EAAKe,YAAef,EAAMxzB,KAAO,GAEjCwzB,EAAK8B,YAAY9B,EAAKxzB,KAAO,KAGnC,C,kDC1EA,MAAMu1B,EAAe,EAEN,SAASC,IACtB,MAAMC,EAAYxxB,OAAOyxB,eACzB,IAAIC,EAAoBF,GAAWG,WAAaH,EAAUI,WAAW,GAAGC,qBAAkB7lC,EAE1F,MAAM8lC,EAA2BN,GAAWO,WAAaP,EAAUQ,YAAc,GAC5EC,EAAuBT,EAAUO,UAAWG,EAAAA,KACjD,IAAKR,GAA6D,IAAxCA,EAAkBS,kBAC1C,OAGF,MAAMC,EAAazb,MAAMua,KAAKQ,EAAkB1iC,UAC7CiiB,OAAO,CAACtlB,EAAQ4jC,IACXA,EAAKC,WAAa8B,GAAgB/B,EAAK8C,UAAUvO,SAAS,sBACrDnN,MAAMua,KAAK3B,EAAK6B,iBAAiB,aACrCngB,OAAO,CAACC,EAAKohB,IAAcphB,EAAIuI,OAAOvL,OAAQokB,EAA0B1U,QAAQxR,YAAazgB,GACvF4jC,EAAKC,WAAa8B,GAAgB/B,EAAK8C,UAAUvO,SAAS,WAC5Dn4B,EAAO8tB,OAAOvL,OAAQqhB,EAAqB3R,QAAQxR,YAGrDzgB,EACN,IAGL,KAAO+lC,EAAkBa,YACvBb,EAAkBc,YAAYd,EAAkBa,YAQlD,OANAb,OAAoB1lC,EAEf8lC,GACHM,EAAWK,MAGNL,CACT,CAEA,SAASH,EAAuBhO,EAAeh2B,GAC7C,QAAIg2B,EAAQuL,WAAa8B,IAAiBrN,EAAwBoO,UAAUvO,SAAS71B,OAI9Eg2B,EAAQyO,YAAaT,EAAuBhO,EAAQyO,WAAYzkC,EACzE,C,iEChCA,MAiBA,EAjBoB0kC,EAClB3jC,WACAf,YACAG,UACA6gB,kBAGElgB,EAAAA,EAAAA,GAAA,OACEd,WAAWwB,EAAAA,EAAAA,GCpBM,WDoBsBrB,GCpBC,WDoB4BH,GACpEG,QAASA,EACT6gB,YAAaA,EAAYjgB,SAExBA,G,sKEKP,IACI4jC,EACAC,EAFAC,GAAc,EAIH,SAASlI,EAAcmI,GACpCH,EAAcG,EACd,MAAMC,EAASC,EAAqBF,GAEpC,GAAIA,EAAK9H,uBACP,OAAO+H,GAGTp5B,EAAAA,EAAAA,IAAgBo5B,EAElB,CAEO,SAASE,IACTJ,KAILK,EAAAA,EAAAA,OAEApf,EAAAA,EAAAA,IAAe,MACbna,EAAAA,EAAAA,IAAgBq5B,EAAqBL,MAEzC,CAEA,SAASK,EAAqBF,GAC5B,MAAM,UACJj8B,EAAS,QACTmtB,EAAO,SACP4G,EAAQ,OACRC,EAAS,EAAC,YACVH,EAAclB,EAAAA,IAAmB,eACjCsB,EAAc,2BACdC,GACE+H,EAEJ,IAAIK,EAAgBL,EAAKK,cAGvBrI,IAAmBsI,EAAAA,GAAeC,SAC9B9V,EAAAA,EAAAA,MAA0BpM,EAAAA,EAAAA,SAE9BgiB,EAAgB,GAGlB,MAAQj8B,aAAco8B,GAAkBtP,GAChC5sB,UAAWm8B,EAAkB3qB,aAAc4qB,EAAe,aAAEr8B,GAAiBN,EAC/E48B,GAAaC,EAAAA,EAAAA,GAAqB1P,EAASntB,GAAWwO,IAEtDsuB,EAAwB5I,GAA8Bl0B,EAAU8mB,QAAQiW,aAC1E3lB,OAAOpX,EAAU8mB,QAAQiW,cACzBJ,EAEJ,IAAIK,EACJ,OAAQjJ,GACN,IAAK,QACHiJ,EAAYJ,EAAa5I,GAAW9kB,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACH8tB,EAAYJ,EAAaH,EAAgBzI,EAAU8I,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAWP,EAAgBK,EACtBF,EAAaH,EAAgB,EAAIK,EAAwB,EACzDF,EAAa5I,EAItB,MAAMiJ,EAwER,SACEj9B,EACAg9B,EACAnJ,EAAclB,EAAAA,IACdsB,GAEA,MAAM,UAAE1zB,GAAcP,EAEtB,QAAuB9K,IAAnB++B,EAA8B,CAChC,MAAMxc,EAASulB,EAAWz8B,EAE1B,GAAIkX,GAAUoc,EACZ,OAAOtzB,GAAakX,EAASoc,GACxB,GAAIpc,EAASoc,EAClB,OAAOtzB,GAAakX,EAASoc,EAEjC,KAAO,IAAII,IAAmBsI,EAAAA,GAAepQ,GAC3C,OAAO6Q,EAAWnJ,EACb,GAAII,IAAmBsI,EAAAA,GAAetQ,KAC3C,OAAOnwB,KAAKuD,IAAI,EAAG29B,EAAWnJ,EAChC,CAEA,OAAOtzB,CACT,CA/FqB28B,CAAoBl9B,EAAWg9B,EAAUnJ,EAAaI,GAEzE,IAAIjN,EAAOgW,EAAWC,EACtB,GAAIjW,EAAO,EAAG,CACZ,MAAMC,GAAiBgW,EACvBjW,EAAOlrB,KAAKuD,IAAI2nB,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgB3mB,GAAgB28B,EAAaH,GACnD9V,EAAOlrB,KAAK2M,IAAIue,EAAMC,EACxB,CAEA,MAAMkW,EAAUrhC,KAAKshC,IAAIpW,GAEzB,MAAO,KACL,GAAImW,EAAU,EAKZ,YAJIT,IAAqBO,IACvBj9B,EAAUO,UAAY08B,IAM1B,MAAMh9B,EAASg9B,EAAajW,EAE5B,GAAsB,IAAlBsV,EAEF,YADAt8B,EAAUO,UAAYN,GAIxB,MAAMynB,EAAayV,GAAWE,EAAAA,IAAuCC,EAAkBC,EACjF7lB,EAAW4kB,GACfkB,EAAAA,IACGL,EAAUxK,EAAAA,KAAwB8K,EAAAA,IAAsBD,EAAAA,KAEvDnW,EAAUzb,KAAKC,MAErBmwB,GAAc,EAEd,MAAM0B,EAA0B3B,EAChCA,GAAsB57B,EAAAA,EAAAA,SAAoBjL,GAAW,GACrDwoC,OAEAC,EAAAA,EAAAA,IAAc,KACZ,MAAMnW,EAAI1rB,KAAK2M,KAAKmD,KAAKC,MAAQwb,GAAW3P,EAAU,GAChD+P,EAAcT,GAAQ,EAAIU,EAAWF,IACrCoW,EAAe9hC,KAAK0E,MAAMP,EAASwnB,GAazC,OAXAznB,EAAUO,UAAYq9B,EAEtB5B,EAAcxU,EAAI,GAAKoW,IAAiB39B,EAEnC+7B,IACHF,OAAc5mC,EAEd6mC,MACAA,OAAsB7mC,GAGjB8mC,GACNl5B,EAAAA,IAEP,CAEO,SAAS/C,IACd,OAAOi8B,CACT,CAEO,SAAS6B,IACd9B,IACAA,OAAsB7mC,CACxB,CA2BA,SAASooC,EAAgB9V,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAAS+V,EAAe/V,GACtB,OAAO,GAAM,EAAIA,IAAM,CACzB,C,oHC9MA,QAA6C,W,eCuB7C,MAyDA,GAAezxB,EAAAA,EAAAA,IAvDyBoJ,EACtCnF,WACA8jC,WACA3mC,YACAiI,eACAJ,cAEA,MAAM++B,GAAc1hC,EAAAA,EAAAA,IAAmBrC,EAASqB,YAAY,GAEtD2iC,GAAmBxhC,EAAAA,EAAAA,GAAUshC,OAAyB5oC,EAAd6oC,GAExCE,GAAkBnoC,EAAAA,EAAAA,IAAQ,IACzBooC,EAAAA,GACEre,MAAMua,KAAK,CAAEn+B,OAfF,IAe2ByR,IAAI,IA4CrD,SAAgCtO,EAAe,IAC7C,MAAM8E,GAAK9E,EAAe,EAAItD,KAAKE,SAAWoD,EAAe,IAAMtD,KAAKE,SAAW,GAAM,GAAK,GACxFqI,EAAIjF,EAAetD,KAAKE,SAAWoD,EAAe,EAExD,MAAO,eAAe8E,MAAMG,EAAIjF,KAAgB8E,KAAKG,GACvD,CAjD2D85B,CAAuB/+B,IADxC,GAErC,CAACA,IAEJ,GAAK4+B,GAAqBF,EAI1B,OACE7lC,EAAAA,EAAAA,GAAA,OACEd,WAAWwB,EAAAA,EAAAA,GD/CM,WC+CsBxB,GACvCkB,OAAO+R,EAAAA,EAAAA,GAAWvN,QAAQuC,IAAiB,oBAAoBA,OAAkBlH,SAEhF+lC,EAAMvwB,IAAI,CAACsZ,EAAMxV,KAChB,MAAMnZ,EAAQ,wBAAwB2uB,OACtC,OAAI8W,GAEA7lC,EAAAA,EAAAA,GAACmG,EAAAA,EAAW,CACV/C,WAAYrB,EAASqB,WACrBlE,UAAW6G,EACX3F,MAAOA,EACP+lC,qBAAmB,EACnB7lC,KAAM6G,EACNi/B,eAAsB,IAAN7sB,EAAUxS,OAAU9J,KAMxC+C,EAAAA,EAAAA,GAAA,OACE8M,IAAKi5B,EACL/4B,IAAI,GACJ9N,UAAW6G,EACX3F,MAAOA,EACP6M,WAAW,EACXm5B,eAAsB,IAAN7sB,EAAUxS,OAAU9J,S,0LCjDhD,MAuDA,GAAea,EAAAA,EAAAA,IAvDMuoC,EACnB1zB,SACAhU,QACAumB,WACA7b,cACAi9B,aACA36B,YACA46B,eAAe,GACfxxB,UACAhL,eAEA,MAAMxK,GAAOC,EAAAA,EAAAA,MAENghB,EAAMgmB,IAAWl8B,EAAAA,EAAAA,IAASi8B,GAE3BE,GAAmBnhC,EAAAA,EAAAA,GAAiBmG,IACxC+6B,EAAQ/6B,EAAEzD,OAAOqD,SAGbq7B,GAAephC,EAAAA,EAAAA,GAAgB,KACnCyE,EAASyW,KAGX,OACE1f,EAAAA,EAAAA,IAAC6lC,EAAAA,EAAK,CACJznC,UAAU,SACVP,MAAOA,EACPgU,OAAQA,EACRoC,QAASA,EACT6xB,QAAM,EAAA3mC,SAAA,CAEL2E,QAAQsgB,KACPllB,EAAAA,EAAAA,GAAA,OAAKd,UCvDc,WDuDae,SAC7BilB,KAGLllB,EAAAA,EAAAA,GAACutB,EAAAA,EAAS,CACRlkB,YAAaA,EACbgC,MAAOmV,EACPhV,SAAUi7B,EACV96B,UAAWA,EACXk7B,2BAAyB,KAE3B/lC,EAAAA,EAAAA,IAAA,OAAK5B,UAAU,sBAAqBe,SAAA,EAClCD,EAAAA,EAAAA,GAAC6L,EAAAA,EAAM,CAAC3M,UAAU,wBAAwBG,QAASqnC,EAAazmC,SAC7DqmC,GAAc/mC,EAAK,WAEtBS,EAAAA,EAAAA,GAAC6L,EAAAA,EAAM,CAAC3M,UAAU,wBAAwB4nC,QAAM,EAACznC,QAAS0V,EAAQ9U,SAC/DV,EAAK,oB,qCE/ChB,MAAMsd,EAAgB,KAAO3b,EAAAA,EA+J7B,GAAepD,EAAAA,EAAAA,IA3IQ+lB,EACrB9hB,WACA8gB,MACAxhB,cACAyhB,WACA7F,eACA/d,YACAie,kBACA4pB,YACAjwB,aACAiN,kBACA1hB,sBACAhD,UACA2kB,eAEA,MAAM,qBAAEgjB,IAAyBzkC,EAAAA,EAAAA,MAC3BC,GAAM7F,EAAAA,EAAAA,MACNsqC,GAAUtqC,EAAAA,EAAAA,MAEV4C,GAAOC,EAAAA,EAAAA,MACN0nC,EAAoBC,EAAkBC,IAAqB1hC,EAAAA,EAAAA,MAE5D,MAAE/G,EAAK,MAAEwf,GAAU0E,GAAO,CAAC,EAC3BwkB,EAAUziC,QAAQjG,GAAUooC,GAAa5oB,GAEzClI,GAAc3Q,EAAAA,EAAAA,GAAgB,KAClCjG,IAAU0C,KAGNulC,GAAoBhiC,EAAAA,EAAAA,GAAgB,KACxC0e,IAAWjiB,KAGPwlC,GAAkBjiC,EAAAA,EAAAA,GAAiBkiC,IACvCR,EAAqB,CACnBjlC,WACApD,MAAO6oC,IAETJ,OAGI,kBACJ/oB,EAAiB,kBACjBopB,EAAiB,wBACjBnpB,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBlc,GAAMuhB,OAAiB9mB,OAAWA,OAAWA,GAAW,GAE7EyqC,GAAoBpiC,EAAAA,EAAAA,GAAgB,IAAM9C,EAAItF,SAC9CyqC,GAAiBriC,EAAAA,EAAAA,GAAgB,IAAMkwB,SAASoS,MAChDC,GAAiBviC,EAAAA,EAAAA,GAAgB,IAAM2hC,EAAQ/pC,SAC/C4qC,GAAYxiC,EAAAA,EAAAA,GAAgB,KAAM,CAAGyiC,YAAY,EAAMC,6BAA6B,KAE1F,IAAIjB,GAAuB,IAAV5oB,EAIjB,OACErd,EAAAA,EAAAA,IAAC+K,EAAAA,EAAM,CACL3M,WAAWwB,EAAAA,EAAAA,GACTqF,EAAAA,EAAOC,KACPD,EAAAA,EAAO8c,IACP5F,GAAgBlX,EAAAA,EAAO8Z,IACvBiD,GAAY/c,EAAAA,EAAOka,OACnB6C,GAAY3F,EACZrG,GAAc/Q,EAAAA,EAAOgG,SACrB7M,GAEFoB,KAAK,OACLjB,QAAS4W,EACTiK,YAAa5B,EACb6B,cAAe5B,EACf/b,IAAKA,EAAIvC,SAAA,EAETD,EAAAA,EAAAA,GAAC8B,EAAAA,EAAqB,CACpB5C,UAAW6G,EAAAA,EAAOua,cAClBjf,YAAaA,EACbU,SAAUA,EACVK,UAlGW,EAmGX9B,KAAMuc,EACNxa,oBAAqBA,IAEtBglC,IACCvmC,EAAAA,EAAAA,IAAA,QAAM5B,UAAW6G,EAAAA,EAAOkiC,QAAQhoC,SAAA,CAC7BtB,IAASqB,EAAAA,EAAAA,GAAA,QAAAC,SAAOtB,IAChBooC,IAAa/mC,EAAAA,EAAAA,GAAA,QAAAC,SAAOke,QAGzBne,EAAAA,EAAAA,GAAA,OACEd,UAAW6G,EAAAA,EAAOmiC,KAClB51B,MAAM,KACNzK,OAAO,KACP0K,QAAQ,YAAWtS,UAEnBD,EAAAA,EAAAA,GAAA,QAAMd,UAAW6G,EAAAA,EAAOoiC,SAAU11B,EAAE,+JAErCsR,IACC/jB,EAAAA,EAAAA,GAACqmC,EAAY,CACX1zB,OAAQu0B,EACRv7B,UAxHe,GAyHfhN,MAAOY,EAAKsjB,GAAKlkB,MAAQ,oBAAsB,oBAC/CumB,SAAU3lB,EAAK,wBACf8J,YAAa9J,EAAK,4BAClBgnC,aAAc1jB,GAAKlkB,MACnBoW,QAASqyB,EACTr9B,SAAUw9B,IAGbxjB,GAAmB0jB,IAClB3mC,EAAAA,EAAAA,IAACsnC,EAAAA,EAAI,CACH5lC,IAAKykC,EACLt0B,OAAQ0L,EACR4iB,OAAQwG,EACRC,kBAAmBA,EACnBC,eAAgBA,EAChBE,eAAgBA,EAChBC,UAAWA,EACXO,WAAS,EACTN,YAAU,EACVhzB,QAASyJ,EACT8pB,oBAAqB7pB,EAAsBxe,SAAA,EAE3CD,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,aAAaW,QAAS4W,EAAYhW,SAC9CV,EAAK,0BAERS,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,WAAWW,QAAS8nC,EAAiBlnC,SACjDV,EAAKsjB,GAAKlkB,MAAQ,oBAAsB,uBAE3CqB,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,cAAc8pC,aAAW,EAACnpC,QAASioC,EAAkBrnC,SACjEV,EAAK,8B,mCC/KlB,SAAgB,KAAO,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,UAAY,WAAW,eAAiB,W,gKCInJ,MAAMkpC,EAAMjT,SAAS+J,cAAc,OAC7BmJ,EAAyB,IAAI1e,IAAI,CACrC5C,EAAAA,GAAsB2W,KACtB3W,EAAAA,GAAsB8W,OACtB9W,EAAAA,GAAsBiX,UACtBjX,EAAAA,GAAsBoX,OACtBpX,EAAAA,GAAsBC,QACtBD,EAAAA,GAAsBjhB,cAGjB,SAASwiC,EAA4BC,GAC1C,MAAMzJ,EAMR,SAA4ByJ,GAC1B,MAAMC,EAAkBD,EAAM9F,gBAC9B2F,EAAIK,YAAYD,GAEhB,MAAM1J,EAgBR,SAAgCyJ,EAAczJ,GAC5C,MAAMp3B,EAAY6gC,EAAMG,wBACxB,GAAIhhC,EAAU04B,WAAaC,KAAK6B,cAAiBx6B,EAAsBu7B,UAAUvO,SAAS,gBACxF,OAAOoK,EAET,IAAI6J,EAAiBJ,EAAMG,wBAAwBE,cACnD,KAAOD,IAAmBA,EAAe1F,UAAUvO,SAAS,iBAAiB,CAC3E,MAAMlS,EAAMmmB,EAAe7T,QAAQC,cAC7B2L,EAAaiI,EAAena,QAAQkS,WAC1C5B,EAAO,IAAItc,KAAOke,EAAa,qBAAqBA,KAAgB,MAAM5B,MAAStc,KACnFmmB,EAAiBA,EAAeC,aAClC,CAEA,OAAO9J,CACT,CA9Be+J,CAAuBN,EAAOH,EAAIjJ,WAG/C,OAFAiJ,EAAIjJ,UAAY,GAETL,EACJO,QAAQ,eAAgB,MACxBA,QAAQ,WAAY,KACpBA,QAAQ,WAAY,IACzB,CAjBeyJ,CAAmBP,GAGhC,OAgBF,SAA+BpoB,GAC7B,IAAKA,EAAK8F,SAAU,OAAO9F,EAE3B,MAAM8F,EAAW9F,EAAK8F,SAASzB,OAAQgc,GAAW6H,EAAuBve,IAAI0W,EAAOn+B,OACpF,MAAO,IAAK8d,EAAM8F,SAAUA,EAAStiB,OAASsiB,OAAWrpB,EAC3D,CArBSmsC,EAFelK,EAAAA,EAAAA,IAAyBC,GAAM,GAAO,GAG9D,C,uGCZA,MAOA,EAP4CzsB,IAC1C,MAAM,OAAEC,GAAWD,EACb22B,GAAkBx2B,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,mBAAoBJ,GAE3E,OAAO02B,GAAkBrpC,EAAAA,EAAAA,GAACqpC,EAAe,IAAK32B,SAAYzV,G,gHCgI5D,SAASqsC,EAAaC,GACpB,OAAIA,EACK,4BAEF,uBACT,C,iFChJA,QAAuB,WAAvB,EAA8D,WC+B9D,GAAezrC,EAAAA,EAAAA,IAff,UAA8B,QAC5B+iB,IAEA,MAAMthB,GAAOC,EAAAA,EAAAA,MACP,SAAEgqC,GAAa3oB,EACf4oB,GAAwBD,EAE9B,OACExpC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,aAAaQ,UAAW6G,EAAY9F,SAChDwpC,GAAuBzpC,EAAAA,EAAAA,GAAC0pC,EAAAA,EAAQ,CAACxqC,UAAW6G,IAAsBnB,QAAQ4kC,IACtEjqC,EAAK,yCAAyCoqC,EAAAA,EAAAA,GAAiBpqC,EAAiB,IAAXiqC,KAGhF,G,0BC0BA,SAAe1rC,EAAAA,EAAAA,IAlCf,UAA0B,QACxB+iB,EAAO,qBAAE+oB,EAAoB,gBAAEC,EAAe,iBAAEC,IAEhD,MAAM,+BAAEC,IAAmCxnC,EAAAA,EAAAA,MACrChD,GAAOC,EAAAA,EAAAA,MACP,SAAEwqC,GAAanpB,EACf4oB,EAAuBI,IAAoBG,IAAaJ,EAO9D,OACE5pC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,eAAeQ,UAAW6G,EAAY9F,UACnDD,EAAAA,EAAAA,GAACoS,EAAAA,GAAU,CAACjS,KAAK,OAAOvC,UAAW6rC,EAAuB,EAAI,EAAGvqC,UFpCe,WEoCce,SAC3FwpC,GAAuBzpC,EAAAA,EAAAA,GAAC0pC,EAAAA,EAAQ,CAACxqC,UAAW6G,KAC3CjF,EAAAA,EAAAA,IAAAkG,EAAAA,GAAA,CAAA/G,SAAA,CACG2E,QAAQolC,IAAazqC,EAAK,YAAYoqC,EAAAA,EAAAA,GAAiBpqC,EAAiB,IAAXyqC,KAC5DA,GAAYJ,IACZ9oC,EAAAA,EAAAA,IAAA,OAAAb,SAAA,CACGV,EAAK,WACNS,EAAAA,EAAAA,GAAA,QAAMd,UF3CkB,WE2CKG,QAdnB4qC,KACtBH,IACAC,EAA+B,CAAE3sB,OAAQyD,EAAQzD,OAAQ8sB,YAAY,KAYHjqC,SACnDV,EAAK,6BASxB,GCmfA,GAAezB,EAAAA,EAAAA,IAzZ0BqsC,EACvCC,uBACAxoC,qBACAk2B,eACAC,sBACAplB,SACAkO,UACAwpB,OACAC,UACAC,QACApS,YACAjX,uBACA8W,mBACAS,qBACAP,iBACA+I,SACAuJ,aACAC,aACAC,gBACAC,gBACAC,WACAC,WACAC,UACAC,oBACAC,aACAC,UACAC,YACAC,aACAC,cACAC,aACAC,kBACAC,oBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACAC,gBACAC,mBACAC,qBACAC,iBACAC,qBACAC,iBACAC,yBACAC,uBACAC,qBACAjlB,kBACAklB,mBACApU,yBACAC,qBACAuR,wBACAC,mBACA4C,WACAC,gBACAC,UACAC,oBACAC,SACAC,WACAC,aACAC,YACAC,iBACAC,YACAC,mBACAC,YACAC,UACAC,gBACAv4B,WACAuzB,uBACAiF,cACAC,gBACAC,cACAC,aACAC,gBACAC,eACAC,gBACAC,kBACAnX,oBACAC,sBACAC,2BACAkX,kBACAC,wBACAC,eACAC,kBACAC,oBACAC,gBACAC,eAEA,MAAM,iBACJ3sB,GAAgB,eAAE4sB,GAAc,oBAAEC,GAAmB,aAAEC,GAAY,cAAEC,KACnElsC,EAAAA,EAAAA,MACE0kC,IAAUtqC,EAAAA,EAAAA,MACV+xC,IAAgB/xC,EAAAA,EAAAA,MAChBgyC,IAAUnvC,EAAAA,EAAAA,KACVD,IAAO0K,EAAAA,EAAAA,KACP2kC,IAAezW,IAAcH,EAC7BhW,GAAuBnB,EAAQmB,qBAC/B6sB,GAAiBvC,KAAwBsC,IAAgB5sB,GACzD8sB,GAAY,aAAcjuB,GAAYA,EAAQiuB,SAC9CC,GAAcluB,EAAQkuB,YACtBC,GAAiD,gBAAjCnuB,EAAQ0F,QAAQxb,QAAQrI,KACxCusC,GAA8C,aAAjCpuB,EAAQ0F,QAAQxb,QAAQrI,KACrCwsC,GAA8C,aAAjCruB,EAAQ0F,QAAQxb,QAAQrI,KACrCysC,GAAoD,mBAAjCtuB,EAAQ0F,QAAQxb,QAAQrI,KAC3C0sC,IAAuBC,EAAAA,EAAAA,IAASxuB,EAAQzD,SACzCixB,KAAYW,IAAiBC,IAAcC,IAAcC,KAEvDG,GAAgBC,KAAa7pC,EAAAA,EAAAA,MAC7B+wB,GAAS+Y,GAAaC,KAAiB/pC,EAAAA,EAAAA,MACxC,SAAEwE,GAAQ,UAAEwlC,KAAcvlC,EAAAA,EAAAA,MAC1BwlC,IAAmB9xC,EAAAA,EAAAA,IAAQ,IAAOkxC,GAAca,OAAOC,KAAKd,IAAa/qC,OAAS,EAAI,CAAC+qC,KAEvFe,IAAkBxqC,EAAAA,EAAAA,GAAgB,KACtCoc,GAAiB,CACfb,QAAS8tB,GAAQ,uBAEnB55B,OAGIg7B,IAAkBzqC,EAAAA,EAAAA,GAAgB,KACtCmpC,GAAc,CAAEuB,UAAWnvB,EAAQzD,SACnCrI,QAGFvX,EAAAA,EAAAA,IAAU,KACJmV,GAAU28B,KAAmBlF,GAC/Br1B,MAED,CAACA,GAASpC,EAAQy3B,EAAsBkF,MAE3C9xC,EAAAA,EAAAA,IAAU,KACJgvC,IAAiBxoC,QACnBwoC,GAAgB/2B,IAAKw6B,GACZzB,GAAa,CAClB0B,eAAgB,CACdjtC,GAAIgtC,EAAehtC,GACnBktC,WAAYF,EAAeE,gBAKlC,CAAC3D,GAAiB+B,KAErB,MAAM6B,IAA4B9qC,EAAAA,EAAAA,GAAgB,KAC3CknC,KAC0B,IAA3BA,GAAgBxoC,OAClBsqC,GAAe,CACb4B,eAAgB,CACdG,UAAW7D,GAAgB,GAAG6D,aAIlC9B,GAAoB,CAClB+B,OAAQ9D,GAAgB/2B,IAAKyZ,GAAQA,EAAIjsB,MAG7C8R,QAGIw7B,GJ/QD,SACL1vB,EACAmG,EACAoa,EACAoK,EACAgF,EACAjD,EACAQ,EACAP,GAEA,MAAM,QAAElD,GAAYtjB,GAAmB,CAAC,EAClCypB,EAAwB,GACxBjwB,GAAOkwB,EAAAA,EAAAA,IAAe7vB,GACtB8vB,GAAQC,EAAAA,EAAAA,IAAgB/vB,MACvBgwB,EAAAA,EAAAA,IAAgBvG,QAAsCrtC,GAA3B6zC,EAAAA,EAAAA,IAAgBxG,IAC5CyG,GAAUC,EAAAA,EAAAA,IAAkBnwB,GAC5BpU,EAAYkkC,GAAQM,EAAAA,EAAAA,IAAkBN,EAAO,aAAU1zC,EACvDi0C,EAAmB1F,GAAWmF,IAAUlkC,IAAa0kC,EAAAA,EAAAA,IAAqBR,KAC3ES,EAAAA,KAA6BC,EAAAA,GAC5B5O,EAAYxxB,OAAOyxB,eAezB,GAbIwO,GACFT,EAAQ9+B,KAAK,CACX2/B,MAAO,yBACP5yC,KAAM,aACN6yC,QAASA,KACPx0C,QAAQC,QAAQyP,EAAY+kC,EAAAA,GAAkB/kC,EAAWmwB,EAAAA,GAAeC,SAAW8T,EAAMc,SACtF34B,KAAK44B,EAAAA,IAERlB,SAKFhF,GAAWpK,EACbqP,EAAQ9+B,KAAK,CACX2/B,MAAO,wBACP5yC,KAAM,OACN6yC,QAASA,MACPI,EAAAA,EAAAA,IAAoBvQ,GAEpBoP,cAGC,GAAIhF,GAAWhrB,EAAM,CAE1B,MAAM+oB,EAAe3kC,QACnB69B,GAAWmP,YAAYjO,YACnBlB,EAAUmP,WAAWjO,WAA2B17B,QAAQ,4BACD,KAAxDw6B,EAAUnf,WAAWoc,QAAQ,kBAAmB,KAoDzD,SAAkC7e,GAChC,MAAM4hB,EAAYxxB,OAAOyxB,eACnBmP,EAAsBpP,GAAWmP,YAAYjO,WAC7CmO,EAAyBD,GAAqB5pC,QAAwB,8BAC5E,OAAO8pC,EAAAA,EAAAA,IAAiBlxB,EAAQ5d,MAAQ6uC,GAAwB7uC,EAClE,CAxDS+uC,CAAyBnxB,IAG9B4vB,EAAQ9+B,KAAK,CACX2/B,MAAOhI,EAAaC,GACpB7qC,KAAM,OACN6yC,QAASA,KACP,MAAMlO,GAAab,EAAAA,EAAAA,KACnB,GAAIa,GAAYr/B,QAAU+pC,EACxBA,EAAe1K,QACV,GAAIkG,EACT/T,SAASyc,YAAY,YAChB,CACL,MAAMC,GAAgBtsB,EAAAA,EAAAA,GACpB,CAAE/E,UAASsF,oBAAoB,IAE7B+rB,IACFC,EAAAA,EAAAA,GACED,EAAcE,KAAK,KACnBC,EAAAA,EAAAA,KAA2B3rB,EAAAA,EAAAA,MAAoB7F,EAASmG,GAG9D,CAEAwpB,QAGN,CAsBA,OApBIjD,GACFkD,EAAQ9+B,KAAK,CACX2/B,MAAO,gCACP5yC,KAAM,OACN6yC,QAAShE,IAITwD,GAAWvD,GACbiD,EAAQ9+B,KAAK,CACX2/B,MAAO,yBACP5yC,KAAM,OACN6yC,QAASA,KACP/D,IAEAgD,SAKCC,CACT,CI2KsB6B,CAClBzxB,GACA0xB,EAAAA,EAAAA,IAAqB,CAAElI,OAAMC,UAASC,UACtCC,EACAgB,GACAsE,GACArE,GAAc8B,QAAatwC,EAC3B8wC,GACAP,IAGI9F,IAAoBpiC,EAAAA,EAAAA,GAAgB,IACjCkwB,SAAS4G,cAAc,gEAAgEvb,EAAQ5d,SAGlG0kC,IAAiBriC,EAAAA,EAAAA,GAAgB,IAAMkwB,SAAS4G,cAAc,4CAE9DyL,IAAiBviC,EAAAA,EAAAA,GAAgB,IAAMkwB,SAAS4G,cAAc,gCAE9D0L,IAAYxiC,EAAAA,EAAAA,GAAgB,KAChC,MAAMktC,EAA0BtoC,IAC1BsrB,SAAS4G,cAA2B,yBAA0Bh0B,cAAiB,EAC/EqqC,EAAejd,SAASkd,eAAe,gBACvCC,EAA4BvzB,iBAAiBqzB,GAE7CG,EADoBC,WAAWF,EAA0BG,iBAAiB,kCACjC,EAE/C,MAAO,CACLC,cAhMkB,GAiMlBC,gBAAkBxd,SAAS4G,cAA2B,iBAAmBh0B,aACzE6qC,eAAgBL,EAAoBJ,EACpCxK,6BAA8B0H,GAC9BwD,eAAgBrE,IAAiB3kC,GAnMH,MAmM4ChJ,EAAAA,OAAMjE,MAIpFO,EAAAA,EAAAA,IAAU,KACHmV,EAKL7J,WAAW,KACT0mC,MA7MqB,KAwMrBC,MAOD,CAAC98B,EAAQ68B,GAAaC,MAEzBjyC,EAAAA,EAAAA,IAAU,KACD83B,EAAAA,EAAAA,IAAiBoZ,GAAcxxC,QAAS,mBAC9C,CAACyV,IAEJ,MAAMwgC,IAAkC7tC,EAAAA,EAAAA,GAAiBw2B,IACvDkS,GAAsBlS,GACtByT,OAGF,OACEzuC,EAAAA,EAAAA,IAACsnC,EAAAA,EAAI,CACH5lC,IAAKykC,GACLt0B,OAAQA,EACRsuB,OAAQA,EACRyG,kBAAmBA,GACnBC,eAAgBA,GAChBE,eAAgBA,GAChBC,UAAWA,GACXsL,eAAa,EACbl0C,WAAWwB,EAAAA,EAAAA,GACT,qBAAsB,QAASmuC,IAAiB,kBAElD95B,QAASA,GACTuzB,oBAAqBA,GAAoBroC,SAAA,CAExC4uC,KACC7uC,EAAAA,EAAAA,GAAC43B,EAAAA,EAAgB,CACfI,iBAAkBA,EAClBF,aAAcA,EACdD,sBAAuBj2B,EACvBm2B,oBAAqBA,EACrBE,iBAAkBpX,EAAQtf,WAAWqgB,QACrCsW,eAAgBA,EAChBvB,iBAAkBA,GAClBC,mBAAoBA,GACpBC,wBAAyBA,GACzB4B,mBAAoBA,EACpBN,UAAWA,EACX1B,QAASA,GACTkU,cAAeA,EACfzpB,qBAAsBA,EACtBmX,kBAAmBA,GACnBD,sBAAuBA,GACvBM,WAAYya,GACZp+B,QAASA,GACT7V,WAAWwB,EAAAA,EAAAA,GAAe4uC,IAAkB,8BAIhDxuC,EAAAA,EAAAA,IAAA,OACE0B,IAAKksC,GACLxvC,WAAWwB,EAAAA,EAAAA,GACT,4DACA4uC,IAAkB,mCAEpBvuC,IAAK4tC,GAAQ3tC,MAAQ,WAAQ/D,EAAUgD,SAAA,CAEtCmvC,KAEGpvC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,OAAOW,QAAS0wC,GAAgB9vC,SAC5C4gB,GAASiD,WAAa6qB,GAAQ,mBAC3BA,GAAQ,qCAAsCP,MAGvD3D,IAAczqC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,eAAeW,QAASguC,GAAOptC,SAAE0uC,GAAQ,yBACtEjE,IACC1qC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,WAAWW,QAASiuC,GAAartC,SAAE0uC,GAAQ,6BAE3D/D,IACC5qC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,QAAQW,QAASotC,GAAQxsC,SACrC0uC,GAAQ9D,EAAW,8BAAgC,YAGtDG,IAAapmC,QAAQunC,IAAmBkH,iBACxCrzC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,UAAUW,QAASqtC,GAAazsC,SAC5C0uC,GAAQ,kCAAmCxC,GAAkBkH,cAAe,OAGhFvI,IAAW9qC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,OAAOW,QAASstC,GAAO1sC,SAAE0uC,GAAQ,UAC3D5D,IACC/qC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,MAAMW,QAASutC,GAAiB3sC,SAC5CV,GAAK,8BAGT+rC,KACCtrC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,WAAWW,QAAS4tC,GAAchtC,SAAE0uC,GAAQ,oBAE5DpD,KACCvrC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,WAAWW,QAAS8tC,GAAgBltC,SAAE0uC,GAAQ,kCAE9D5C,KAAgB/rC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,WAAWW,QAAS4uC,GAAYhuC,SAAE0uC,GAAQ,sBACzE3C,KACChsC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,WAAWW,QAAS6uC,GAAejuC,SAC/C0uC,GAAQ,wBAGZ1C,KACCjsC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,MAAMW,QAAS8uC,GAAiBluC,SAAE0uC,GAAQ,8BAE1D4B,GAAY96B,IAAK69B,IAChBtzC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAEP7pC,KAAM40C,EAAO50C,KACbW,QAASi0C,EAAO/B,QAChBgC,+BAA6B,EAAAtzC,SAE5B0uC,GAAQ2E,EAAOhC,QALXgC,EAAOhC,QAQfrG,KAAUjrC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,MAAMW,QAASwtC,GAAM5sC,SAAE0uC,GAAQ,eACxDzD,KAAYlrC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,QAAQW,QAASytC,GAAQ7sC,SAAE0uC,GAAQ,iBAC9D/C,KAAc5rC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,OAAOW,QAASquC,GAAUztC,SAAE0uC,GAAQ,0BACjE9C,KAAa7rC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,SAASW,QAASsuC,GAAa1tC,SAAE0uC,GAAQ,uBACrE7C,KAAgB9rC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,OAAOW,QAASuuC,GAAY3tC,SAAE0uC,GAAQ,oBACrEhD,KACC3rC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,WAAWW,QAASouC,GAAWxtC,SAC3B0uC,GAAhBzC,GAAwB,8BAAyC,wBAGrEd,KAAcprC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,UAAUW,QAAS0tC,GAAU9sC,SAAE0uC,GAAQ,aACpEjD,KAAa1rC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,SAASW,QAAS+tC,GAASntC,SAAE0uC,GAAQ,mBACjEtD,KAAarrC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAAC7pC,KAAK,OAAOW,QAAS6tC,GAASjtC,SAAE0uC,GAAQ,4BAC/DxD,KAAanrC,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAACC,aAAW,EAAC9pC,KAAK,SAASW,QAAS2tC,GAAS/sC,SAAE0uC,GAAQ,YAC7ErnB,KACCxmB,EAAAA,EAAAA,IAAAkG,EAAAA,GAAA,CAAA/G,SAAA,EACED,EAAAA,EAAAA,GAACwzC,EAAAA,EAAa,CAAClzC,KAAK,WAClBksC,KACA1rC,EAAAA,EAAAA,IAAAkG,EAAAA,GAAA,CAAA/G,SAAA,EACED,EAAAA,EAAAA,GAAC0pC,EAAAA,EAAQ,CAAC+J,QAAM,EAACv0C,UAAU,sBAC3Bc,EAAAA,EAAAA,GAAC0pC,EAAAA,EAAQ,CAAC+J,QAAM,EAACv0C,UAAU,wBAG9BstC,IAA8C,IAA3BA,GAAgBxoC,SAClChE,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAACmL,UAAQ,EAACr0C,QAAS+wC,GAA2BlxC,UAAU,yBAAwBe,UACtFunB,EAAAA,EAAAA,GACCmnB,GAAQ,2BAA4BnC,GAAgB,GAAG7tC,OAAQ,CAAC,kBAAmB,YAIxF6tC,IAAmBA,GAAgBxoC,OAAS,IAC3ChE,EAAAA,EAAAA,GAACuoC,EAAAA,EAAQ,CAACmL,UAAQ,EAACr0C,QAAS+wC,GAA2BlxC,UAAU,yBAAwBe,UACtFunB,EAAAA,EAAAA,GAAWmnB,GAAQ,4BAA6BnC,GAAgBxoC,QAAS,CAAC,0BAKjFooC,IAAiBC,MACjBvrC,EAAAA,EAAAA,IAAAkG,EAAAA,GAAA,CAAA/G,SAAA,EACED,EAAAA,EAAAA,GAACwzC,EAAAA,EAAa,CAAClzC,KAAMgnB,GAAiB,OAAS,WAC/CxmB,EAAAA,EAAAA,IAACynC,EAAAA,EAAQ,CACP7pC,KAAM2tC,GAAwB,gBAAkB,QAChDhtC,QAASgtC,GAAwByB,GAAiBD,GAClD9hC,UAAWsgC,KAA0BsD,GAAiB1vC,SAAA,EAEtDD,EAAAA,EAAAA,GAAA,QAAMd,UAAU,4CAA2Ce,UACzDD,EAAAA,EAAAA,GAAA,QAAMd,UAAU,oCAAoC6B,IAAK4tC,GAAQ3tC,MAAQ,WAAQ/D,EAAUgD,SACxFosC,IAAyBxrB,EAAQ8yB,UAAUx1B,MAC1CiuB,IAAiBuD,GACbhB,GACA,yCACA,CAAC9tB,EAAQ8yB,SAASx1B,MAAOwxB,KAEzBhB,GAAQ,4BAA6B9tB,EAAQ8yB,SAASx1B,MAAO,KAE5C,IAArBwxB,IAA0BpD,IACtB/kB,EAAAA,EAAAA,IACA6nB,EAAAA,EAAAA,IAAS9C,GAAkB,GAAGtpC,KAC1B2wC,EAAAA,EAAAA,IAAgBrH,GAAkB,IACjCA,GAAkB,GAAe5tC,OAEtCgxC,GACIhB,GAAQ,+BAAgCgB,GAAkB,KAC1DhB,GAAQ,wCAKtB3uC,EAAAA,EAAAA,GAACiV,EAAAA,EAAU,CAAC/V,UAAU,UAAUoB,KAAK,QAAQ4U,MAAOq3B,YAIxD1C,IAAmBD,IAAwBkF,MAC3C9uC,EAAAA,EAAAA,GAACwzC,EAAAA,EAAa,CAAClzC,KAAMgnB,GAAiB,OAAS,WAE/CuiB,IAAmBD,MACnB5pC,EAAAA,EAAAA,GAAC6zC,EAAgB,CACfhK,gBAAiBA,GACjBD,qBAAsBA,GACtB/oB,QAASA,EACTipB,iBAAkB/0B,KAGrB+5B,KACC9uC,EAAAA,EAAAA,GAAC8zC,EAAoB,CACnBjzB,QAASA,YC1Xf4hB,EAAYxxB,OAAOyxB,eACnBqR,GAAqB,EA2mB3B,IAAej2C,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,IAClB,CAACC,GAAU6iB,UAASmzB,kBAAiBC,uBACnC,MAAM,SAAEnzB,IAAaozB,EAAAA,EAAAA,KAAyBl2C,IAAW,CAAC,GAEpD,YAAEm2C,EAAW,aAAErc,EAAY,mBAAEl2B,GAAuB5D,EAAOuD,UAE3D6yC,GAAkBC,EAAAA,EAAAA,KAAsBr2C,GACxC2B,GAAO69B,EAAAA,EAAAA,KAAWx/B,EAAQ6iB,EAAQzD,QAClC+a,EAAYx4B,IAAQ0vC,EAAAA,EAAAA,IAAS1vC,EAAKsD,IAClCqxC,EAAgBnc,OAAyDl7B,GAA7Cs3C,EAAAA,EAAAA,KAAmBv2C,EAAQ6iB,EAAQzD,QAC/D9e,GAAOC,EAAAA,EAAAA,KAAWP,EAAQ6iB,EAAQzD,QAClCgxB,EAAe9vC,IAAQs1C,EAAAA,EAAAA,IAAgBt1C,IAEvC,gBACJk2C,EAAe,qBAAEC,EAAoB,mBAAEC,EAAkB,kBAAEC,GACzD32C,EAAO42C,UAEL1c,EAAiBoc,GAAcpc,gBAAkBwc,GAEjD,UACJG,EAAS,iBACTC,EAAgB,OAChB7J,EAAM,SACNC,EAAQ,UACRC,EAAS,UACTE,EAAS,QACTP,EAAO,eACPQ,EAAc,iBACdC,EAAgB,QAChBC,EAAO,YACPC,EAAW,UACXC,EAAS,YACTC,EAAW,WACXC,EAAU,UACVC,EAAS,aACTC,GACGhrB,IAAYi0B,EAAAA,EAAAA,KAAgC/2C,EAAQ6iB,EAASC,IAAc,CAAC,EAC3EsqB,GAAa4J,EAAAA,EAAAA,KAAwBh3C,EAAQ6iB,GAE7C0L,EAAa4L,GAAY3L,EAAAA,EAAAA,KAAiBxuB,EAAQ2B,EAAKsD,SAAMhG,EAC7Dg4C,GAAQh4B,EAAAA,EAAAA,IAAa4D,GACrBq0B,EAAUv1C,IAAQw1C,EAAAA,EAAAA,KAAUn3C,EAAQ2B,EAAKsD,IACzCmyC,EAAQxwC,QAAQswC,GAChBG,GAAkBC,EAAAA,EAAAA,KAAsBt3C,EAAQ6iB,GAChDgpB,EAAkBjlC,QACtBuzB,GACG8c,IACCG,IACAC,GACDV,GACA9zB,EAAQtN,KAAOI,KAAKC,MAAQ,IAAO+gC,IAClCpoB,GAAYgpB,sBACO,cAApBvB,GAECpK,EAAuBhlC,QAC3BilC,GAAmB1R,IAAa3L,EAAAA,EAAAA,KAAiBxuB,EAAQ2B,EAAKsD,KAAKuyC,0BAE/DC,EAA+B,WAApBzB,EACX0B,EAAkC,cAApB1B,EACd2B,EAAYh2C,IAAQi2C,EAAAA,EAAAA,IAAcj2C,GAElCk2C,EAAa/0B,IAAYg1B,EAAAA,EAAAA,KAAiB93C,EAAQ6iB,EAAQzD,OAAQ0D,GAClEi1B,EAAkBnxC,QAAQixC,IAAeA,GAAYG,gBAAkBH,GAAYI,eACnFC,EAAQp1B,GAAWq1B,EAAAA,EAAAA,KAAYn4C,EAAQ6iB,EAAQzD,OAAQ0D,QAAY7jB,EAEnEm5C,EAAcz2C,KAAS02C,EAAAA,EAAAA,IAAkB12C,EAAM,YAAa20C,GAE5DgC,MAAiB32C,IAAQmhB,KAAWy1B,EAAAA,EAAAA,IAAiB52C,EAAMu2C,EAAOH,EAAiBzB,IACpF8B,EAECI,IAAUC,EAAAA,EAAAA,IAAe51B,GACzB61B,IAASC,EAAAA,EAAAA,IAAc91B,GACvBurB,GAAgBxnC,SAAS4xC,IAC1B72C,IACCA,EAAKi3C,cACLvB,GACDZ,GACAD,IACAqC,EAAAA,EAAAA,IAAYl3C,IACZs1C,IACCS,GACD/1C,EAAKm3C,cACLn3C,EAAKm3C,cAAgBrC,GACrB5zB,EAAQtN,KAAOI,KAAKC,MAAQ,IAAO4gC,GAClCuC,IAAWC,EAAAA,EAAAA,IAAgBn2B,GAC3BwrB,IAAyBmK,KAAYb,IAAcD,IAAgBqB,KAAa5e,GAAatX,EAAQtf,aACrG01C,EAAAA,EAAAA,GAAkBp2B,EAAQtf,YAAcsf,EAAQtf,UAAU21C,WAC1DjxB,IAAckxB,EAAAA,EAAAA,KAAyBn5C,EAAQ6iB,GAC/Cu2B,GAAgBxyC,QAAQic,EAAQ0F,QAAQwqB,SACxC7vB,IAAuBm2B,EAAAA,EAAAA,KAA2Br5C,GAElDs5C,IAAsBC,EAAAA,EAAAA,KAA6Bv5C,EAAQ6iB,GAC3D22B,GAA6BF,IAAqB7hC,IAAKyZ,IAAQuoB,EAAAA,EAAAA,KAAiBz5C,EAAQkxB,IACxFsd,GAAkBgL,IAA4BE,MAAqB9yC,SACrE4yC,QAA6Bv6C,EAE3B06C,IAA6BC,EAAAA,EAAAA,KAA0C55C,EAAQ6iB,EAAQzD,OAAQyD,EAAQ5d,IACvG40C,GAAiBF,GACnB/yC,SAAQkzC,EAAAA,EAAAA,KAA0B95C,EAAQ6iB,EAAQzD,OAAQu6B,IAA4B92B,EAAQ5d,KAAKud,WACnGvjB,EACE8uC,IAAgB8L,KAAkBE,EAAAA,EAAAA,KAA0B/5C,EAAQ6iB,EAASozB,GAC7E+D,IAAmBC,EAAAA,EAAAA,KAAuCj6C,EAAQ6iB,EAAQzD,QAE1Eib,IAAoB6f,EAAAA,EAAAA,KAAqBl6C,EAAQ6iB,EAAQzD,QAEzDitB,IAAO8N,EAAAA,EAAAA,KAAsBn6C,EAAQ6iB,GACrCypB,IAAU8N,EAAAA,EAAAA,KAAyBp6C,EAAQ6iB,GAC3Cw3B,GAAYx3B,EAAQ0F,QAAQ8xB,UAC5B9N,GAAQ8N,IAAYC,EAAAA,EAAAA,KAAgBt6C,EAAQq6C,GAAUp6C,OAAQo6C,GAAUp1C,SAAMhG,EAE9EoxC,IAAUkK,EAAAA,EAAAA,KAAcv6C,EAAQ6iB,EAAQzD,QAExCo7B,IAAgBC,EAAAA,EAAAA,KAA+Bz6C,EAAQ6iB,GACvD63B,GAAe16C,EAAO42C,UAAU8D,aAItC,MAAO,CACL53B,WACAnhB,OACAiC,qBACAk2B,eACAC,oBAAqBoc,EACrBU,YACAxJ,YACAZ,WAAYiL,EACZhL,cAAegL,EACf9K,UAAW6K,IAAaC,GAAeZ,EACvC7J,QAASyK,GAAezK,EACxBC,UAAWwK,GAAexK,EAC1BC,YACAL,SAAU2K,GAAY3K,EACtBC,kBAlBwBlqB,EAAQ0F,QAAQoyB,MAAMA,KAAKC,iBAChD/3B,EAAQ0F,QAAQoyB,MAAMA,KAAKhrB,OAAO3pB,OAAS00C,GAkB9CtN,YAAasK,GAAetK,EAC5BE,gBAAiBoK,GAAepK,EAChCC,kBAAmBmK,GAAenK,EAClCC,QAAU4L,KAAmBnxB,IAAeulB,EAC5CC,aAAciK,GAAejK,EAC7BC,YACAC,aAAc1lB,IAAe0lB,EAC7BC,YAAa3lB,IAAe2lB,EAC5BC,YACAC,cAAe4J,GAAe5J,EAC9BsI,kBACAhI,iBACAvC,kBACAD,uBACA5R,iBAAkBr4B,GAAMk5C,iBAAc57C,EAAYq3C,GAActc,iBAChEE,iBACAC,YACAjX,wBACA43B,YAAal0C,QAAQ0vC,GACrBjI,yBACAC,sBAAsBkK,IAAYO,IAC5BrB,GAAe/1C,GAAMsD,KAAO81C,EAAAA,KAAkCrC,IACpE/L,eAAgBzpB,MAAyB83B,EAAAA,EAAAA,KAA+Bh7C,GACxEs5C,uBACA9K,mBACAv5B,wBAAwBgmC,EAAAA,EAAAA,KAA6Bj7C,EAAQ6iB,EAAQzD,QACrE2uB,gBACAC,gBAAiB6L,KAAmBG,GACpC/L,kBAAmB4L,KAAmBG,GACtCkB,oBAAqBrB,GACrBzf,uBAAuB+gB,EAAAA,EAAAA,KAA4Bn7C,GACnDosC,sBAAsBgP,EAAAA,EAAAA,KAA2Bp7C,GACjDq6B,qBACAsd,YACAW,kBACA7d,mBAAoB6b,GAAc+E,wBAClChP,QACAE,SACA6D,eACAC,WACAmK,iBACAlO,aA9KcvsC,CAzmBoCu7C,EACtDx4B,WACAlf,qBACAk2B,eACAC,sBACAplB,SACAqhC,kBACAnzB,UACAy2B,sBACA9K,kBACA+M,QACAlP,OACAC,UACAC,QACAtJ,SACAuJ,aACAqK,YACApK,aACAqO,cACApO,gBACAE,WACAK,SACAkB,oBACAjB,WACAC,YACAkB,wBACA1sC,OACA0rC,YACAiB,sBACAxB,UACAC,oBACA/S,mBACAE,iBACAC,YACAjX,wBACAkqB,cACAT,iBACAW,kBACAC,oBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACA1T,yBACAyR,mBACAD,wBACAwK,mBACApJ,aACAoB,iBACAn5B,0BACA84B,gBACAmN,uBACAlN,mBACAC,qBACA7B,wBACA/R,qBACAie,kBACA7d,sBACA2V,gBACAC,WACAnvC,aACAs5C,iBACAzjC,WACAuzB,2BAEA,MAAM,WACJkR,GAAU,qBACVC,GAAoB,aACpBC,GAAY,WACZC,GAAU,gBACVC,GAAe,cACfC,GAAa,YACbC,GAAW,cACXC,GAAa,uBACbC,GAAsB,sBACtBC,GAAqB,kBACrBC,GAAiB,cACjBC,GAAa,oBACbC,GAAmB,WACnBC,GAAU,gBACVC,GAAe,qBACfC,GAAoB,aACpBC,GAAY,aACZC,GAAY,kBACZC,GAAiB,QACjBC,GAAO,aACPnM,GAAY,eACZoM,GAAc,UACdC,GAAS,eACTx5B,GAAc,0BACdy5B,GAAyB,oBACzBC,GAAmB,sBACnBC,GAAqB,0BACrBC,GAAyB,iBACzBx5B,GAAgB,mBAChBy5B,GAAkB,gBAClBC,GAAe,uBACfC,GAAsB,qBACtB95B,GAAoB,sBACpB5D,GAAqB,eACrB29B,GAAc,kBACdC,GAAiB,iBACjB55B,KACEnf,EAAAA,EAAAA,MAEEosC,IAAUnvC,EAAAA,EAAAA,KACVD,IAAO0K,EAAAA,EAAA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","sources":["webpack://telegram-t/./src/hooks/useImageLoader.ts","webpack://telegram-t/./src/hooks/animations/useTransitionActiveKey.ts","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/util/events/getPointerPosition.ts","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/util/resolveTransitionName.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts"],"sourcesContent":["import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { preloadImage } from '../util/files';\nimport useAsync from './useAsync';\n\nexport type UseImageLoaderResult = {\n  image?: HTMLImageElement;\n};\n\nexport default function useImageLoader(file?: Blob): UseImageLoaderResult {\n  const urlRef = useRef<string | undefined>();\n\n  const { result: image } = useAsync(() => {\n    if (!file) {\n      return Promise.resolve(undefined);\n    }\n\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n    }\n\n    const url = URL.createObjectURL(file);\n    urlRef.current = url;\n\n    return preloadImage(url);\n  }, [file]);\n\n  useEffect(() => {\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = undefined;\n      }\n    };\n  }, []);\n\n  return { image };\n}\n","import { useMemo, useRef } from '../../lib/teact/teact';\n\n/**\n * Use this hook to bind `<Transition />` animation to changes in the dependency array.\n * Use optional parameter `noAnimation` if you want to prevent the animation even if the dependency array changes.\n*/\nexport function useTransitionActiveKey(deps: unknown[], noAnimation?: boolean): number {\n  const activeKey = useRef(0);\n\n  useMemo(() => {\n    if (!noAnimation) activeKey.current += 1;\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...deps]);\n\n  return activeKey.current;\n}\n","import type { TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n\n  peerId?: string;\n\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): Complete<StateProps> => {\n    if (!peerId) {\n      return {\n        peer: undefined,\n        isSavedMessages: undefined,\n      };\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { ElementRef } from '../lib/teact/teact';\nimport { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: ElementRef<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  noRipple?: boolean;\n  onClearError: NoneToVoidFunction;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder,\n  submitLabel,\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  onClearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      onClearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          spellCheck={IS_TAURI ? false : undefined}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder || lang('PasswordFormPlaceholder')}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title={lang('AriaPasswordToggle')}\n          aria-label={lang('AriaPasswordToggle')}\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel || lang('PasswordFormSubmit')}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getPointerPosition(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  if ('touches' in e) {\n    return {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"noTransition\":\"HS9PzRKt\",\"floatingBadgeContent\":\"W4rqGyJl\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progressWrapper\":\"_B4r3D5W\",\"positiveLayer\":\"VmyTBAzN\",\"positiveProgress\":\"MzFvyMb5\",\"negativeLayer\":\"QZwWHVdB\",\"negativeProgress\":\"S6H6hBpP\",\"primary\":\"Zi0w7QJ3\",\"negative\":\"dXs41qvC\",\"transitioning\":\"I7toQztx\",\"hidden\":\"xdKGgbKQ\",\"cycling\":\"SxTCkiyg\",\"show\":\"tkyw4hXo\"};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport { REM } from './helpers/mediaDimensions';\n\nimport { useTransitionActiveKey } from '../../hooks/animations/useTransitionActiveKey';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useSyncEffect from '../../hooks/useSyncEffect';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\nexport type AnimationDirection = 'forward' | 'backward' | 'none';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  isNegative?: boolean;\n  animationDirection?: AnimationDirection;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress = 0,\n  isPrimary,\n  isNegative,\n  animationDirection = 'none',\n  className,\n}) => {\n  const lang = useOldLang();\n  const floatingBadgeContentRef = useRef<HTMLDivElement>();\n  const parentContainerRef = useRef<HTMLDivElement>();\n\n  const [shiftX, setShiftX] = useState(0);\n  const [beakPosition, setBeakPosition] = useState(0);\n  const [badgeWidth, setBadgeWidth] = useState(0);\n  const prevBadgeWidth = usePrevious(badgeWidth);\n  const [positiveProgress, setPositiveProgress] = useState(isNegative ? 0 : progress);\n  const [negativeProgress, setNegativeProgress] = useState(isNegative ? progress : 0);\n  const [badgeProgress, setBadgeProgress] = useState(progress);\n\n  const [layerProgress, setLayerProgress] = useState(0);\n  const [showLayer, setShowLayer] = useState(false);\n  const [disableMainProgressTransition, setDisableMainProgressTransition] = useState(false);\n  const [disableLayerProgressTransition, setDisableLayerProgressTransition] = useState(false);\n  const [hideMainLayer, setHideMainLayer] = useState(false);\n  const [isCycling, setIsCycling] = useState(false);\n\n  const badgeActiveKey = useTransitionActiveKey([floatingBadgeText, floatingBadgeIcon]);\n\n  const shouldAnimateCaptionsRef = useRef(false);\n  const prevLeftText = usePrevious(leftText);\n  const prevRightText = usePrevious(rightText);\n  const prevIsNegative = usePrevious(isNegative);\n\n  const BEAK_WIDTH_PX = 28;\n  const PROGRESS_BORDER_RADIUS_PX = REM;\n  const CORNER_BEAK_THRESHOLD = BEAK_WIDTH_PX / 2 + PROGRESS_BORDER_RADIUS_PX;\n  const BADGE_HORIZONTAL_PADDING_PX = 0.75 * 2 * REM;\n\n  const LAYER_PROGRESS_TRANSITION_MS = 400;\n  const FULL_CYCLE_TRANSITION_MS = LAYER_PROGRESS_TRANSITION_MS * 2;\n  const APPLY_TRANSITION_DELAY_MS = 50;\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeContentRef.current && parentContainerRef.current) {\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const halfBadgeWidth = badgeWidth / 2;\n      const minBadgeShift = halfBadgeWidth;\n      const maxBadgeShift = parentWidth - halfBadgeWidth;\n      const halfBeakWidth = BEAK_WIDTH_PX / 2;\n      const currentShift = isNegative ? (1 - badgeProgress) * parentWidth : badgeProgress * parentWidth;\n\n      let safeShift = Math.max(minBadgeShift, Math.min(currentShift, maxBadgeShift));\n      if (currentShift < CORNER_BEAK_THRESHOLD) {\n        safeShift = currentShift + halfBadgeWidth;\n      }\n      if (currentShift > parentWidth - CORNER_BEAK_THRESHOLD) {\n        safeShift = currentShift - halfBadgeWidth;\n      }\n\n      const beakOffsetFromCenter = currentShift - safeShift;\n      const newBeakPositionPx = halfBadgeWidth + beakOffsetFromCenter - halfBeakWidth;\n\n      setShiftX(safeShift / parentWidth);\n      setBeakPosition(newBeakPositionPx);\n    }\n  };\n\n  useEffect(updateBadgePosition, [badgeProgress, badgeWidth, isNegative, CORNER_BEAK_THRESHOLD]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  useEffect(() => {\n    const width = floatingBadgeContentRef?.current?.clientWidth || 0;\n    setBadgeWidth(width + BADGE_HORIZONTAL_PADDING_PX);\n  }, [floatingBadgeText, floatingBadgeIcon, BADGE_HORIZONTAL_PADDING_PX]);\n\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    let timeoutId: number | undefined;\n\n    const isNegativeTransition = prevIsNegative !== undefined && prevIsNegative !== isNegative;\n    const shouldAnimateCaptions = (prevLeftText || prevRightText) && (isNegativeTransition || isCycling);\n\n    if (shouldAnimateCaptions && !shouldAnimateCaptionsRef.current) {\n      shouldAnimateCaptionsRef.current = true;\n\n      const timeoutMs = isCycling ? LAYER_PROGRESS_TRANSITION_MS * 2 : LAYER_PROGRESS_TRANSITION_MS;\n      timeoutId = window.setTimeout(() => {\n        shouldAnimateCaptionsRef.current = false;\n        forceUpdate();\n      }, timeoutMs);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        shouldAnimateCaptionsRef.current = false;\n      }\n    };\n  }, [\n    leftText, prevLeftText, rightText, prevRightText,\n    prevIsNegative, isNegative, animationDirection, isCycling,\n  ]);\n\n  const shouldAnimateCaptions = shouldAnimateCaptionsRef.current;\n\n  useEffect(() => {\n    if (isNegative) {\n      setPositiveProgress(0);\n      setNegativeProgress(progress);\n    } else {\n      setNegativeProgress(0);\n      setPositiveProgress(progress);\n    }\n    setBadgeProgress(progress);\n  }, [progress, isNegative]);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n\n  const displayLeftText = shouldAnimateCaptions ? prevLeftText : leftText;\n  const displayRightText = shouldAnimateCaptions ? prevRightText : rightText;\n\n  const prevProgress = usePrevious(progress);\n\n  useEffect(() => {\n    const timers: number[] = [];\n\n    if (animationDirection === 'none' || prevProgress === undefined) {\n      return;\n    }\n\n    const targetProgress = progress;\n\n    const setMainProgress = (value: number) => {\n      if (isNegative) {\n        setNegativeProgress(value);\n      } else {\n        setPositiveProgress(value);\n      }\n    };\n\n    if (animationDirection === 'forward' || animationDirection === 'backward') {\n      const isForward = animationDirection === 'forward';\n\n      setIsCycling(true);\n      setMainProgress(isForward ? 1 : 0);\n\n      setDisableLayerProgressTransition(true);\n      setLayerProgress(isForward ? 0 : 1);\n\n      timers.push(window.setTimeout(() => {\n        setDisableLayerProgressTransition(false);\n        setShowLayer(true);\n        setLayerProgress(targetProgress);\n        if (isForward) {\n          setDisableMainProgressTransition(true);\n          setMainProgress(0);\n        }\n      }, LAYER_PROGRESS_TRANSITION_MS));\n\n      timers.push(window.setTimeout(() => {\n        setDisableMainProgressTransition(true);\n        setDisableLayerProgressTransition(true);\n        setHideMainLayer(false);\n        setMainProgress(targetProgress);\n        setShowLayer(false);\n\n        timers.push(window.setTimeout(() => {\n          setDisableMainProgressTransition(false);\n          setDisableLayerProgressTransition(false);\n          setIsCycling(false);\n        }, APPLY_TRANSITION_DELAY_MS));\n      }, FULL_CYCLE_TRANSITION_MS));\n    }\n\n    return () => {\n      timers.forEach(clearTimeout);\n    };\n  }, [\n    progress, animationDirection, isNegative,\n    prevProgress, FULL_CYCLE_TRANSITION_MS,\n  ]);\n\n  const renderProgressLayer = (\n    isPositive: boolean,\n    currentProgress: number,\n    layerClassName?: string,\n    disableTransition?: boolean,\n  ) => {\n    const typeClass = isPositive ? styles.positiveProgress : styles.negativeProgress;\n    const progressVar = '--layer-progress';\n\n    return (\n      <div\n        className={buildClassName(\n          typeClass,\n          layerClassName,\n          disableTransition && styles.noTransition,\n        )}\n        style={`${progressVar}: ${currentProgress}`}\n      >\n        <div className={styles.left}>\n          <span>{displayLeftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{displayRightText}</span>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        isNegative && styles.negative,\n        shouldAnimateCaptions && styles.transitioning,\n        isCycling && styles.cycling,\n        className,\n      )}\n      style={buildStyle(\n        `--positive-progress: ${positiveProgress}`,\n        `--negative-progress: ${negativeProgress}`,\n        `--layer-progress: ${layerProgress}`,\n        `--shift-x: ${shiftX}`,\n        `--cycling-animation-badge-position: ${FULL_CYCLE_TRANSITION_MS}ms`,\n        `--cycling-animation-progress: ${LAYER_PROGRESS_TRANSITION_MS}ms`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div\n              className={\n                buildClassName(styles.floatingBadge,\n                  (!prevBadgeWidth || prevBadgeWidth === 0)\n                  && styles.noTransition)\n              }\n              style={`width: ${badgeWidth}px;`}\n            >\n              <Transition\n                activeKey={badgeActiveKey}\n                name=\"fade\"\n                shouldCleanup\n              >\n                <div\n                  ref={floatingBadgeContentRef}\n                  className={styles.floatingBadgeContent}\n                >\n                  {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n                  {floatingBadgeText && (\n                    <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                      {floatingBadgeText}\n                    </div>\n                  )}\n                </div>\n              </Transition>\n            </div>\n            <div className={styles.floatingBadgeTriangle} style={`left: ${beakPosition}px`}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"currentColor\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{displayLeftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{displayRightText}</span>\n      </div>\n\n      <div className={styles.progressWrapper}>\n        {renderProgressLayer(\n          true,\n          positiveProgress,\n          buildClassName(hideMainLayer && styles.hidden),\n          disableMainProgressTransition,\n        )}\n\n        {renderProgressLayer(\n          false,\n          negativeProgress,\n          buildClassName(hideMainLayer && styles.hidden),\n          disableMainProgressTransition,\n        )}\n\n        {renderProgressLayer(\n          !isNegative,\n          layerProgress,\n          buildClassName(\n            isNegative ? styles.negativeLayer : styles.positiveLayer,\n            showLayer && styles.show,\n          ),\n          disableLayerProgressTransition,\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Icon from './icons/Icon';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  isNsfw?: boolean;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  isNsfw,\n  className,\n  width,\n  height,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n      {isNsfw && (\n        <span className={styles.nsfw}>\n          <Icon name=\"eye-crossed-outline\" className={styles.nsfwIcon} />\n          {lang('MediaSpoilerSensitive')}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"nsfw\":\"FJGQoa6s\",\"nsfwIcon\":\"Y7JVRkxJ\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import type { AnimationLevel } from '../types';\n\nimport { ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN } from '../config.ts';\nimport { IS_ANDROID, IS_IOS } from './browser/windowEnvironment.ts';\n\nexport function resolveTransitionName(\n  name: 'slideOptimized' | 'slide' | 'layers',\n  animationLevel: AnimationLevel,\n  isDisabled = false,\n  isRtl = false,\n) {\n  if (isDisabled || animationLevel === ANIMATION_LEVEL_MIN) return 'none';\n\n  if (animationLevel === ANIMATION_LEVEL_MED) return 'slideFade';\n\n  return name === 'slideOptimized' ? (\n    isRtl ? 'slideOptimizedRtl' : 'slideOptimized'\n  ) : name === 'slide' ? (\n    isRtl ? 'slideRtl' : 'slide'\n  ) : (\n    IS_ANDROID ? 'slideFade' : IS_IOS ? 'slideLayers' : 'pushSlide'\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: ElementRef<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\nimport { clamp } from '../../../util/math';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n  patternSize?: number;\n  patternOpacity?: number;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  patternOpacity,\n  clearBottomSector,\n  className,\n  patternSize = 1,\n}: OwnProps) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x: xOffset,\n          y: yOffset,\n          sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.clearRect(0, 0, width, height);\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const renderX = x * patternSize * Math.max(width, MIN_SIZE * dpr) + width / 2;\n      const renderY = y * patternSize * Math.max(height, MIN_SIZE * dpr) + height / 2;\n\n      const size = BASE_ICON_SIZE * dpr * patternSize * sizeFactor;\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n\n    const alpha = clamp(0.6 * (patternOpacity ?? 1), 0, 1);\n\n    radialGradient.addColorStop(0, `rgb(255 255 255 / ${1 - alpha})`);\n    radialGradient.addColorStop(1, `rgb(255 255 255 / 1)`);\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage, patternOpacity, patternSize, patternColor, patternPositions]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current;\n    if (!width || !height || !canvas) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas\n        ref={canvasRef}\n        className={buildClassName(styles.canvas, emojiImage && styles.showing)}\n        aria-hidden=\"true\"\n      />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\",\"showing\":\"Y5FyX1oo\"};","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const effectRef = useRef<HTMLDivElement>();\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import type React from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport type React from '../../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {Boolean(inputElement) && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {Boolean(avatarElement) && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {Boolean(subtitle) && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageTextWithFallback,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getTranslationFn, type LangFn } from '../../../util/localization';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n}: {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageTextWithFallback(getTranslationFn(), message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getMainUsername, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  const inputRef = useRef<HTMLInputElement>();\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) {\n        return (\n          <div key={id}>\n            No peer or category with ID\n            {id}\n          </div>\n        );\n      }\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = getMainUsername(peer);\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n\n        onClick={() => handleItemClick(id)}\n\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById = new Map<string, VoidFunction>();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: ElementRef<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n        && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: ElementRef<HTMLDivElement>;\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, clientHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const menuRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getPhotoMediaHash,\n  getWebPagePhoto,\n  getWebPageVideo,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport { getTranslationFn } from '../../../../util/localization';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const { webPage } = statefulContent || {};\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getWebPageVideo(webPage) ? getWebPagePhoto(webPage) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          ) as string[];\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(getTranslationFn(), message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = selection?.anchorNode?.parentNode as HTMLElement;\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onAppendTodoList?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  webPage,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  canAppendTodoList,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onAppendTodoList,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  const menuRef = useRef<HTMLDivElement>();\n  const scrollableRef = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: oldLang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, webPage, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? oldLang('SendAnotherGift')\n                : oldLang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{oldLang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{oldLang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {oldLang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {oldLang('Conversation.ContextViewReplies', repliesThreadInfo.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{oldLang('Edit')}</MenuItem>}\n        {canAppendTodoList && (\n          <MenuItem icon=\"add\" onClick={onAppendTodoList}>\n            {lang('MenuButtonAppendTodoList')}\n          </MenuItem>\n        )}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{oldLang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{oldLang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{oldLang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && (\n          <MenuItem icon=\"language\" onClick={onShowOriginal}>\n            {oldLang('ShowOriginalButton')}\n          </MenuItem>\n        )}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{oldLang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >\n            {oldLang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{oldLang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{oldLang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{oldLang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{oldLang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{oldLang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? oldLang('lng_context_cancel_download') : oldLang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{oldLang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{oldLang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{oldLang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{oldLang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(\n                  oldLang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'],\n                )}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(oldLang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? oldLang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : oldLang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? oldLang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : oldLang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiWebPage,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSavedDialogIdFromMessage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n  selectWebPageFromMessage,\n} from '../../../global/selectors';\nimport { selectMessageDownloadableMedia } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n  savedDialogId?: string;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  webPage,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  canAppendTodoList,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  savedDialogId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openTodoListModal,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    const global = getGlobal();\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        monoforumPeerId: savedDialogId,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    if (message.content.todo) {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    } else {\n      setEditingId({ messageId: message.id });\n    }\n    closeMenu();\n  });\n\n  const handleAppendTodoList = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForAppendToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n        forNewTask: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    const global = getGlobal();\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canAppendTodoList={canAppendTodoList}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        webPage={webPage}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onAppendTodoList={handleAppendTodoList}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={oldLang('lng_polls_stop_warning')}\n        confirmLabel={oldLang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): Complete<StateProps> => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig;\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n      && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !chat.isMonoforum\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const webPage = selectWebPageFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    const savedDialogId = selectSavedDialogIdFromMessage(global, message);\n    const todoItemsMax = global.appConfig.todoItemsMax;\n    const canAppendTodoList = message.content.todo?.todo.othersCanAppend\n      && message.content.todo?.todo.items?.length < todoItemsMax;\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canAppendTodoList,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n      savedDialogId,\n      webPage,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n"],"names":["useImageLoader","file","urlRef","useRef","result","image","useAsync","Promise","resolve","undefined","current","URL","revokeObjectURL","url","createObjectURL","preloadImage","useEffect","useTransitionActiveKey","deps","noAnimation","activeKey","useMemo","memo","withGlobal","global","peerId","forceShowSelf","peer","isSavedMessages","selectPeer","user","selectUser","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","_jsx","children","Icon","name","style","Avatar","size","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","_jsxs","dir","isRtl","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","ref","isCustom","type","availableReaction","find","r","isSameReaction","centerIconId","centerIcon","id","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","Math","floor","random","length","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","_Fragment","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","setTimeout","clearTimeout","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","onClearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","useLang","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","value","spellCheck","IS_TAURI","onChange","e","MIN_PASSWORD_LENGTH","maxLength","role","Button","ripple","disabled","getPointerPosition","x","touches","clientX","y","clientY","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","isNegative","animationDirection","floatingBadgeContentRef","parentContainerRef","shiftX","setShiftX","beakPosition","setBeakPosition","badgeWidth","setBadgeWidth","prevBadgeWidth","usePrevious","positiveProgress","setPositiveProgress","negativeProgress","setNegativeProgress","badgeProgress","setBadgeProgress","layerProgress","setLayerProgress","showLayer","setShowLayer","disableMainProgressTransition","setDisableMainProgressTransition","disableLayerProgressTransition","setDisableLayerProgressTransition","hideMainLayer","setHideMainLayer","isCycling","setIsCycling","badgeActiveKey","shouldAnimateCaptionsRef","prevLeftText","prevRightText","prevIsNegative","CORNER_BEAK_THRESHOLD","BEAK_WIDTH_PX","BADGE_HORIZONTAL_PADDING_PX","updateBadgePosition","parentWidth","offsetWidth","halfBadgeWidth","minBadgeShift","maxBadgeShift","halfBeakWidth","currentShift","safeShift","min","newBeakPositionPx","clientWidth","forceUpdate","useForceUpdate","useSyncEffect","timeoutId","timeoutMs","LAYER_PROGRESS_TRANSITION_MS","window","shouldAnimateCaptions","hasFloatingBadge","displayLeftText","displayRightText","prevProgress","timers","targetProgress","setMainProgress","isForward","push","forEach","renderProgressLayer","isPositive","currentProgress","layerClassName","disableTransition","typeClass","buildStyle","Transition","shouldCleanup","width","viewBox","fill","d","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","date","isWhenOnline","scheduledAt","getTime","Date","now","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","AvatarList","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","MediaSpoiler","isVisible","withAnimation","thumbDataUri","isNsfw","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","left","top","shiftY","setAttribute","prevRef","lastRef","resolveTransitionName","animationLevel","isDisabled","ANIMATION_LEVEL_MIN","ANIMATION_LEVEL_MED","IS_ANDROID","IS_IOS","useHorizontalScroll","containerRef","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","RadialPatternBackground","backgroundColors","patternColor","patternIcon","patternOpacity","clearBottomSector","patternSize","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","then","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","i","angle","xOffset","cos","yOffset","sin","sizeFactor","clientHeight","draw","canvas","ctx","getContext","clearRect","save","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","alpha","clamp","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","get","MAX_EFFECT_COUNT","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","chatId","messageId","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","count","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","animatedEmoji","AnimatedCounter","text","formatIntegerCompact","paidCounter","counter","Reactions","message","threadId","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","getGlobal","recentReaction","key","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","toString","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","isOutgoing","withContextMenu","onRemove","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","PickerItem","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","content","contentNotSupportedText","getMessageTextWithFallback","getTranslationFn","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","indexOf","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","getMainUsername","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","isStopped","set","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","contains","preventDefaultForScrollKeys","HTMLElement","element","tagName","toLowerCase","isTextBox","disableScrolling","_excludedClosestSelector","document","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","getUnreadChatsByFolderId","ReactionSelectorCustomReaction","isReady","noAppearAnimation","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","ReactionSelector","allAvailableReactions","topReactions","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isPrivate","canPlayAnimatedEmojis","isInSavedMessages","isInStoryViewer","isForEffects","effectReactions","isWithPaidReaction","onShowMore","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","color","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isConnected","blur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","ApiMediaFormat","BlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","isVerified","ENTITY_CLASS_BY_NODE_NAME","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseHtmlAsFormattedText","html","withMarkdownLinks","skipMarkdown","fragment","createElement","innerHTML","parsedHtml","replace","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","trim","textIndex","recursionDeepness","addEntity","node","nodeType","Node","COMMENT_NODE","index","entity","rawText","entityType","nodeName","anchor","MentionName","Url","href","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","from","childNodes","querySelectorAll","replaceWith","ELEMENT_NODE","getMessageIdsForSelectedText","selection","getSelection","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","classList","messageEl","firstChild","removeChild","pop","parentNode","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","getTriggerElement","getRootElement","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","onCloseAnimationEnd","MenuItem","destructive","div","ALLOWED_QUOTE_ENTITIES","getSelectionAsFormattedText","range","clonedSelection","appendChild","commonAncestorContainer","currentElement","parentElement","wrapHtmlWithMarkupTags","getSelectionAsHtml","stripEntitiesForQuote","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","poll","webPage","story","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","canAppendTodoList","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","onReply","onOpenThread","onEdit","onAppendTodoList","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","scrollableRef","oldLang","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","options","getMessageText","photo","getMessagePhoto","getWebPageVideo","getWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","label","handler","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","execCommand","clipboardText","copyHtmlToClipboard","join","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","messagesCount","option","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isMonoforum","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","selectWebPageFromMessage","storyData","selectPeerStory","selectCanGift","savedDialogId","selectSavedDialogIdFromMessage","todoItemsMax","todo","othersCanAppend","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","openTodoListModal","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","users","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","selectMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","monoforumPeerId","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handleAppendTodoList","forNewTask","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","ConfirmDialog","confirmLabel","confirmHandler"],"sourceRoot":""}