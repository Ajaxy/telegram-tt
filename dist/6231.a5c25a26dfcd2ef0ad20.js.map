{"version":3,"file":"6231.a5c25a26dfcd2ef0ad20.js","mappings":"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","sources":["webpack://telegram-t/./node_modules/ieee754/index.js","webpack://telegram-t/./node_modules/@cryptography/aes/dist/es/aes.js","webpack://telegram-t/./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js","webpack://telegram-t/./node_modules/os-browserify/browser.js","webpack://telegram-t/./node_modules/@tauri-apps/api/core.js","webpack://telegram-t/./node_modules/async-mutex/index.mjs","webpack://telegram-t/./node_modules/big-integer/BigInteger.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var S = new Uint8Array(256);\nvar Si = new Uint8Array(256);\nvar T1 = new Uint32Array(256);\nvar T2 = new Uint32Array(256);\nvar T3 = new Uint32Array(256);\nvar T4 = new Uint32Array(256);\nvar T5 = new Uint32Array(256);\nvar T6 = new Uint32Array(256);\nvar T7 = new Uint32Array(256);\nvar T8 = new Uint32Array(256);\nfunction computeTables() {\n    var d = new Uint8Array(256);\n    var t = new Uint8Array(256);\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec;\n    var x = 0;\n    var xInv = 0;\n    // Compute double and third tables\n    for (var i = 0; i < 256; i++) {\n        d[i] = i << 1 ^ (i >> 7) * 283;\n        t[d[i] ^ i] = i;\n    }\n    for (; !S[x]; x ^= x2 || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        S[x] = s;\n        Si[s] = x;\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n        T1[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T2[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T3[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T4[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T5[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T6[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T7[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T8[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        xInv = t[xInv] || 1;\n    }\n}\n\n/**\n * Gets a uint32 from string in big-endian order order\n */\nfunction s2i(str, pos) {\n    return (str.charCodeAt(pos) << 24\n        ^ str.charCodeAt(pos + 1) << 16\n        ^ str.charCodeAt(pos + 2) << 8\n        ^ str.charCodeAt(pos + 3));\n}\n\n/* eslint-disable import/prefer-default-export */\n/**\n * Helper function for transforming string key to Uint32Array\n */\nfunction getWords(key) {\n    if (key instanceof Uint32Array) {\n        return key;\n    }\n    if (typeof key === 'string') {\n        if (key.length % 4 !== 0)\n            for (var i = key.length % 4; i <= 4; i++)\n                key += '\\0x00';\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4)\n            buf[i / 4] = s2i(key, i);\n        return buf;\n    }\n    if (key instanceof Uint8Array) {\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4) {\n            buf[i / 4] = (key[i] << 24\n                ^ key[i + 1] << 16\n                ^ key[i + 2] << 8\n                ^ key[i + 3]);\n        }\n        return buf;\n    }\n    throw new Error('Unable to create 32-bit words');\n}\nfunction xor(left, right, to) {\n    if (to === void 0) { to = left; }\n    for (var i = 0; i < left.length; i++)\n        to[i] = left[i] ^ right[i];\n}\n\ncomputeTables();\n/**\n * Low-level AES Cipher\n */\nvar AES = /** @class */ (function () {\n    function AES(_key) {\n        var key = getWords(_key);\n        if (key.length !== 4 && key.length !== 6 && key.length !== 8) {\n            throw new Error('Invalid key size');\n        }\n        this.encKey = new Uint32Array(4 * key.length + 28);\n        this.decKey = new Uint32Array(4 * key.length + 28);\n        this.encKey.set(key);\n        var rcon = 1;\n        var i = key.length;\n        var tmp;\n        // schedule encryption keys\n        for (; i < 4 * key.length + 28; i++) {\n            tmp = this.encKey[i - 1];\n            // apply sbox\n            if (i % key.length === 0 || (key.length === 8 && i % key.length === 4)) {\n                tmp = S[tmp >>> 24] << 24 ^ S[(tmp >> 16) & 255] << 16 ^ S[(tmp >> 8) & 255] << 8 ^ S[tmp & 255];\n                // shift rows and add rcon\n                if (i % key.length === 0) {\n                    tmp = tmp << 8 ^ tmp >>> 24 ^ (rcon << 24);\n                    rcon = rcon << 1 ^ (rcon >> 7) * 283;\n                }\n            }\n            this.encKey[i] = this.encKey[i - key.length] ^ tmp;\n        }\n        // schedule decryption keys\n        for (var j = 0; i; j++, i--) {\n            tmp = this.encKey[j & 3 ? i : i - 4];\n            if (i <= 4 || j < 4) {\n                this.decKey[j] = tmp;\n            }\n            else {\n                this.decKey[j] = (T5[S[tmp >>> 24]]\n                    ^ T6[S[(tmp >> 16) & 255]]\n                    ^ T7[S[(tmp >> 8) & 255]]\n                    ^ T8[S[tmp & 255]]);\n            }\n        }\n    }\n    AES.prototype.encrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.encKey[0];\n        var b = message[1] ^ this.encKey[1];\n        var c = message[2] ^ this.encKey[2];\n        var d = message[3] ^ this.encKey[3];\n        var rounds = this.encKey.length / 4 - 2;\n        var k = 4;\n        var a2;\n        var b2;\n        var c2;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T1[a >>> 24] ^ T2[(b >> 16) & 255] ^ T3[(c >> 8) & 255] ^ T4[d & 255] ^ this.encKey[k];\n            b2 = T1[b >>> 24] ^ T2[(c >> 16) & 255] ^ T3[(d >> 8) & 255] ^ T4[a & 255] ^ this.encKey[k + 1];\n            c2 = T1[c >>> 24] ^ T2[(d >> 16) & 255] ^ T3[(a >> 8) & 255] ^ T4[b & 255] ^ this.encKey[k + 2];\n            d = T1[d >>> 24] ^ T2[(a >> 16) & 255] ^ T3[(b >> 8) & 255] ^ T4[c & 255] ^ this.encKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n            // console.log(a, b, c, d);\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[i] = (S[a >>> 24] << 24\n                ^ S[(b >> 16) & 255] << 16\n                ^ S[(c >> 8) & 255] << 8\n                ^ S[d & 255]\n                ^ this.encKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    AES.prototype.decrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.decKey[0];\n        var b = message[3] ^ this.decKey[1];\n        var c = message[2] ^ this.decKey[2];\n        var d = message[1] ^ this.decKey[3];\n        var rounds = this.decKey.length / 4 - 2;\n        var a2;\n        var b2;\n        var c2;\n        var k = 4;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T5[a >>> 24] ^ T6[(b >> 16) & 255] ^ T7[(c >> 8) & 255] ^ T8[d & 255] ^ this.decKey[k];\n            b2 = T5[b >>> 24] ^ T6[(c >> 16) & 255] ^ T7[(d >> 8) & 255] ^ T8[a & 255] ^ this.decKey[k + 1];\n            c2 = T5[c >>> 24] ^ T6[(d >> 16) & 255] ^ T7[(a >> 8) & 255] ^ T8[b & 255] ^ this.decKey[k + 2];\n            d = T5[d >>> 24] ^ T6[(a >> 16) & 255] ^ T7[(b >> 8) & 255] ^ T8[c & 255] ^ this.decKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[3 & -i] = (Si[a >>> 24] << 24\n                ^ Si[(b >> 16) & 255] << 16\n                ^ Si[(c >> 8) & 255] << 8\n                ^ Si[d & 255]\n                ^ this.decKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    return AES;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE = /** @class */ (function () {\n    function AES_IGE(key, iv, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.key = getWords(key);\n        this.iv = getWords(iv);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var prevX = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevY = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = text.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.encrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                cipherText[j] = y[k];\n        }\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        var cipherText = getWords(message);\n        var text = buf || new Uint32Array(cipherText.length);\n        var prevY = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevX = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = cipherText.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.decrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                text[j] = y[k];\n        }\n        return text;\n    };\n    return AES_IGE;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE$1 = /** @class */ (function () {\n    function AES_IGE(key, counter, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.offset = 0;\n        this.key = getWords(key);\n        this.counter = getWords(counter);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n        if (this.counter.length !== 4) {\n            throw new Error('AES-CTR mode counter must be 16 bytes length');\n        }\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var offset = this.offset;\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = this.cipher.encrypt(this.counter);\n            for (var j = i, k = offset; j < text.length && k < this.blockSize; j++, k++)\n                cipherText[j] = x[k] ^ text[j];\n            if (text.length - i >= this.blockSize)\n                this.incrementCounter();\n            if (offset) {\n                i -= offset;\n                offset = 0;\n            }\n        }\n        this.offset = (this.offset + (text.length % 4)) % 4;\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        return this.encrypt(message, buf);\n    };\n    AES_IGE.prototype.incrementCounter = function () {\n        // increment counter\n        for (var carry = this.counter.length - 1; carry >= 0; carry--) {\n            if (++this.counter[carry] < 0xFFFFFFFF)\n                break; // If overflowing, it'll be 0 and we'll have to continue propagating the carry\n        }\n    };\n    return AES_IGE;\n}());\n\nexport default AES;\nexport { AES_IGE$1 as CTR, AES_IGE as IGE };\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nexport { __classPrivateFieldGet, __classPrivateFieldSet };\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","import { __classPrivateFieldGet, __classPrivateFieldSet } from './external/tslib/tslib.es6.js';\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\nvar _Channel_onmessage, _Channel_nextMessageIndex, _Channel_pendingMessages, _Channel_messageEndIndex, _Resource_rid;\n/**\n * Invoke your custom commands.\n *\n * This package is also accessible with `window.__TAURI__.core` when [`app.withGlobalTauri`](https://v2.tauri.app/reference/config/#withglobaltauri) in `tauri.conf.json` is set to `true`.\n * @module\n */\n/**\n * A key to be used to implement a special function\n * on your types that define how your type should be serialized\n * when passing across the IPC.\n * @example\n * Given a type in Rust that looks like this\n * ```rs\n * #[derive(serde::Serialize, serde::Deserialize)\n * enum UserId {\n *   String(String),\n *   Number(u32),\n * }\n * ```\n * `UserId::String(\"id\")` would be serialized into `{ String: \"id\" }`\n * and so we need to pass the same structure back to Rust\n * ```ts\n * import { SERIALIZE_TO_IPC_FN } from \"@tauri-apps/api/core\"\n *\n * class UserIdString {\n *   id\n *   constructor(id) {\n *     this.id = id\n *   }\n *\n *   [SERIALIZE_TO_IPC_FN]() {\n *     return { String: this.id }\n *   }\n * }\n *\n * class UserIdNumber {\n *   id\n *   constructor(id) {\n *     this.id = id\n *   }\n *\n *   [SERIALIZE_TO_IPC_FN]() {\n *     return { Number: this.id }\n *   }\n * }\n *\n * type UserId = UserIdString | UserIdNumber\n * ```\n *\n */\n// if this value changes, make sure to update it in:\n// 1. ipc.js\n// 2. process-ipc-message-fn.js\nconst SERIALIZE_TO_IPC_FN = '__TAURI_TO_IPC_KEY__';\n/**\n * Stores the callback in a known location, and returns an identifier that can be passed to the backend.\n * The backend uses the identifier to `eval()` the callback.\n *\n * @return An unique identifier associated with the callback function.\n *\n * @since 1.0.0\n */\nfunction transformCallback(\n// TODO: Make this not optional in v3\ncallback, once = false) {\n    return window.__TAURI_INTERNALS__.transformCallback(callback, once);\n}\nclass Channel {\n    constructor(onmessage) {\n        _Channel_onmessage.set(this, void 0);\n        // the index is used as a mechanism to preserve message order\n        _Channel_nextMessageIndex.set(this, 0);\n        _Channel_pendingMessages.set(this, []);\n        _Channel_messageEndIndex.set(this, void 0);\n        __classPrivateFieldSet(this, _Channel_onmessage, onmessage || (() => { }), \"f\");\n        this.id = transformCallback((rawMessage) => {\n            const index = rawMessage.index;\n            if ('end' in rawMessage) {\n                if (index == __classPrivateFieldGet(this, _Channel_nextMessageIndex, \"f\")) {\n                    this.cleanupCallback();\n                }\n                else {\n                    __classPrivateFieldSet(this, _Channel_messageEndIndex, index, \"f\");\n                }\n                return;\n            }\n            const message = rawMessage.message;\n            // Process the message if we're at the right order\n            if (index == __classPrivateFieldGet(this, _Channel_nextMessageIndex, \"f\")) {\n                __classPrivateFieldGet(this, _Channel_onmessage, \"f\").call(this, message);\n                __classPrivateFieldSet(this, _Channel_nextMessageIndex, __classPrivateFieldGet(this, _Channel_nextMessageIndex, \"f\") + 1, \"f\");\n                // process pending messages\n                while (__classPrivateFieldGet(this, _Channel_nextMessageIndex, \"f\") in __classPrivateFieldGet(this, _Channel_pendingMessages, \"f\")) {\n                    const message = __classPrivateFieldGet(this, _Channel_pendingMessages, \"f\")[__classPrivateFieldGet(this, _Channel_nextMessageIndex, \"f\")];\n                    __classPrivateFieldGet(this, _Channel_onmessage, \"f\").call(this, message);\n                    // eslint-disable-next-line @typescript-eslint/no-array-delete\n                    delete __classPrivateFieldGet(this, _Channel_pendingMessages, \"f\")[__classPrivateFieldGet(this, _Channel_nextMessageIndex, \"f\")];\n                    __classPrivateFieldSet(this, _Channel_nextMessageIndex, __classPrivateFieldGet(this, _Channel_nextMessageIndex, \"f\") + 1, \"f\");\n                }\n                if (__classPrivateFieldGet(this, _Channel_nextMessageIndex, \"f\") === __classPrivateFieldGet(this, _Channel_messageEndIndex, \"f\")) {\n                    this.cleanupCallback();\n                }\n            }\n            // Queue the message if we're not\n            else {\n                // eslint-disable-next-line security/detect-object-injection\n                __classPrivateFieldGet(this, _Channel_pendingMessages, \"f\")[index] = message;\n            }\n        });\n    }\n    cleanupCallback() {\n        window.__TAURI_INTERNALS__.unregisterCallback(this.id);\n    }\n    set onmessage(handler) {\n        __classPrivateFieldSet(this, _Channel_onmessage, handler, \"f\");\n    }\n    get onmessage() {\n        return __classPrivateFieldGet(this, _Channel_onmessage, \"f\");\n    }\n    [(_Channel_onmessage = new WeakMap(), _Channel_nextMessageIndex = new WeakMap(), _Channel_pendingMessages = new WeakMap(), _Channel_messageEndIndex = new WeakMap(), SERIALIZE_TO_IPC_FN)]() {\n        return `__CHANNEL__:${this.id}`;\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[SERIALIZE_TO_IPC_FN]();\n    }\n}\nclass PluginListener {\n    constructor(plugin, event, channelId) {\n        this.plugin = plugin;\n        this.event = event;\n        this.channelId = channelId;\n    }\n    async unregister() {\n        return invoke(`plugin:${this.plugin}|remove_listener`, {\n            event: this.event,\n            channelId: this.channelId\n        });\n    }\n}\n/**\n * Adds a listener to a plugin event.\n *\n * @returns The listener object to stop listening to the events.\n *\n * @since 2.0.0\n */\nasync function addPluginListener(plugin, event, cb) {\n    const handler = new Channel(cb);\n    return invoke(`plugin:${plugin}|registerListener`, { event, handler }).then(() => new PluginListener(plugin, event, handler.id));\n}\n/**\n * Get permission state for a plugin.\n *\n * This should be used by plugin authors to wrap their actual implementation.\n */\nasync function checkPermissions(plugin) {\n    return invoke(`plugin:${plugin}|check_permissions`);\n}\n/**\n * Request permissions.\n *\n * This should be used by plugin authors to wrap their actual implementation.\n */\nasync function requestPermissions(plugin) {\n    return invoke(`plugin:${plugin}|request_permissions`);\n}\n/**\n * Sends a message to the backend.\n * @example\n * ```typescript\n * import { invoke } from '@tauri-apps/api/core';\n * await invoke('login', { user: 'tauri', password: 'poiwe3h4r5ip3yrhtew9ty' });\n * ```\n *\n * @param cmd The command name.\n * @param args The optional arguments to pass to the command.\n * @param options The request options.\n * @return A promise resolving or rejecting to the backend response.\n *\n * @since 1.0.0\n */\nasync function invoke(cmd, args = {}, options) {\n    return window.__TAURI_INTERNALS__.invoke(cmd, args, options);\n}\n/**\n * Convert a device file path to an URL that can be loaded by the webview.\n * Note that `asset:` and `http://asset.localhost` must be added to [`app.security.csp`](https://v2.tauri.app/reference/config/#csp-1) in `tauri.conf.json`.\n * Example CSP value: `\"csp\": \"default-src 'self' ipc: http://ipc.localhost; img-src 'self' asset: http://asset.localhost\"` to use the asset protocol on image sources.\n *\n * Additionally, `\"enable\" : \"true\"` must be added to [`app.security.assetProtocol`](https://v2.tauri.app/reference/config/#assetprotocolconfig)\n * in `tauri.conf.json` and its access scope must be defined on the `scope` array on the same `assetProtocol` object.\n *\n * @param  filePath The file path.\n * @param  protocol The protocol to use. Defaults to `asset`. You only need to set this when using a custom protocol.\n * @example\n * ```typescript\n * import { appDataDir, join } from '@tauri-apps/api/path';\n * import { convertFileSrc } from '@tauri-apps/api/core';\n * const appDataDirPath = await appDataDir();\n * const filePath = await join(appDataDirPath, 'assets/video.mp4');\n * const assetUrl = convertFileSrc(filePath);\n *\n * const video = document.getElementById('my-video');\n * const source = document.createElement('source');\n * source.type = 'video/mp4';\n * source.src = assetUrl;\n * video.appendChild(source);\n * video.load();\n * ```\n *\n * @return the URL that can be used as source on the webview.\n *\n * @since 1.0.0\n */\nfunction convertFileSrc(filePath, protocol = 'asset') {\n    return window.__TAURI_INTERNALS__.convertFileSrc(filePath, protocol);\n}\n/**\n * A rust-backed resource stored through `tauri::Manager::resources_table` API.\n *\n * The resource lives in the main process and does not exist\n * in the Javascript world, and thus will not be cleaned up automatiacally\n * except on application exit. If you want to clean it up early, call {@linkcode Resource.close}\n *\n * @example\n * ```typescript\n * import { Resource, invoke } from '@tauri-apps/api/core';\n * export class DatabaseHandle extends Resource {\n *   static async open(path: string): Promise<DatabaseHandle> {\n *     const rid: number = await invoke('open_db', { path });\n *     return new DatabaseHandle(rid);\n *   }\n *\n *   async execute(sql: string): Promise<void> {\n *     await invoke('execute_sql', { rid: this.rid, sql });\n *   }\n * }\n * ```\n */\nclass Resource {\n    get rid() {\n        return __classPrivateFieldGet(this, _Resource_rid, \"f\");\n    }\n    constructor(rid) {\n        _Resource_rid.set(this, void 0);\n        __classPrivateFieldSet(this, _Resource_rid, rid, \"f\");\n    }\n    /**\n     * Destroys and cleans up this resource from memory.\n     * **You should not call any method on this object anymore and should drop any reference to it.**\n     */\n    async close() {\n        return invoke('plugin:resources|close', {\n            rid: this.rid\n        });\n    }\n}\n_Resource_rid = new WeakMap();\nfunction isTauri() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    return !!(globalThis || window).isTauri;\n}\n\nexport { Channel, PluginListener, Resource, SERIALIZE_TO_IPC_FN, addPluginListener, checkPermissions, convertFileSrc, invoke, isTauri, requestPermissions, transformCallback };\n","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = function(v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value << v.value)\r\n    }\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = function (v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value >> v.value)\r\n    }\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","S","Uint8Array","Si","T1","Uint32Array","T2","T3","T4","T5","T6","T7","T8","s2i","str","pos","charCodeAt","getWords","key","length","buf","Error","xor","left","right","to","x2","x4","tEnc","tDec","t","x","xInv","computeTables","AES","_key","this","encKey","decKey","set","tmp","rcon","j","prototype","encrypt","_message","a2","b2","c2","message","out","a","b","rounds","k","decrypt","AES_IGE","iv","blockSize","cipher","text","cipherText","prevX","subarray","prevY","yXOR","y","counter","incrementCounter","carry","__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","get","__classPrivateFieldSet","SuppressedError","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","isTauri","globalThis","window","WeakMap","E_CANCELED","Semaphore","constructor","_value","_cancelError","_queue","_weightedWaiters","acquire","weight","priority","Promise","resolve","reject","task","findIndexFromEnd","other","_dispatchItem","splice","runExclusive","callback_1","thisArg","_arguments","arguments","generator","callback","P","fulfilled","step","next","rejected","result","done","then","apply","waitForUnlock","_couldLockImmediately","v","insertSorted","isLocked","getValue","setValue","_dispatchQueue","cancel","forEach","entry","_drainUnlockWaiters","shift","item","previousValue","_newReleaser","called","waiters","waiter","queuedPriority","findIndex","predicate","Mutex","cancelError","_semaphore","releaser","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","n","arrayToSmall","arr","trim","compareAbs","createArray","Array","truncate","ceil","add","sum","l_a","l_b","r","base","push","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","multiplySmall","shiftLeft","concat","multiplyKaratsuba","max","slice","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","comparison","quotientDigit","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","bigInt","modPow","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","undefined","bits","bitLength","logN","toJSNumber","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","LOBMASK_I","roughLOB","integerLogarithm","p","min","gcd","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","map","valueOf","neg","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","module","hasOwnProperty"],"sourceRoot":""}