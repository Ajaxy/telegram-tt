{"version":3,"file":"8104.5c3ca0b55408b954003c.js","mappings":"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","sources":["webpack://telegram-t/./src/hooks/useImageLoader.ts","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/util/events/getPointerPosition.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts"],"sourcesContent":["import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { preloadImage } from '../util/files';\nimport useAsync from './useAsync';\n\nexport type UseImageLoaderResult = {\n  image?: HTMLImageElement;\n};\n\nexport default function useImageLoader(file?: Blob): UseImageLoaderResult {\n  const urlRef = useRef<string | undefined>();\n\n  const { result: image } = useAsync(() => {\n    if (!file) {\n      return Promise.resolve(undefined);\n    }\n\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n    }\n\n    const url = URL.createObjectURL(file);\n    urlRef.current = url;\n\n    return preloadImage(url);\n  }, [file]);\n\n  useEffect(() => {\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = undefined;\n      }\n    };\n  }, []);\n\n  return { image };\n}\n","import type { TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n\n  peerId?: string;\n\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { ElementRef } from '../lib/teact/teact';\nimport { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: ElementRef<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>();\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getPointerPosition(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  if ('touches' in e) {\n    return {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY,\n  };\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  const floatingBadgeRef = useRef<HTMLDivElement>();\n  const parentContainerRef = useRef<HTMLDivElement>();\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: ElementRef<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const effectRef = useRef<HTMLDivElement>();\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import type React from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport type React from '../../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {Boolean(inputElement) && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {Boolean(avatarElement) && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {Boolean(subtitle) && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n}: {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getMainUsername, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  const inputRef = useRef<HTMLInputElement>();\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) {\n        return (\n          <div key={id}>\n            No peer or category with ID\n            {id}\n          </div>\n        );\n      }\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = getMainUsername(peer);\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n\n        onClick={() => handleItemClick(id)}\n\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById = new Map<string, VoidFunction>();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: ElementRef<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n        && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: ElementRef<HTMLDivElement>;\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const menuRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          ) as string[];\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = selection?.anchorNode?.parentNode as HTMLElement;\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  const menuRef = useRef<HTMLDivElement>();\n  const scrollableRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >\n            {lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSavedDialogIdFromMessage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n  savedDialogId?: string;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  savedDialogId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        monoforumPeerId: savedDialogId,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n      && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !chat.isMonoforum\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    const savedDialogId = selectSavedDialogIdFromMessage(global, message);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n      savedDialogId,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n"],"names":["useImageLoader","file","urlRef","useRef","result","image","useAsync","Promise","resolve","undefined","current","URL","revokeObjectURL","url","createObjectURL","preloadImage","useEffect","memo","withGlobal","global","peerId","forceShowSelf","peer","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","_jsx","children","Icon","name","style","Avatar","size","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","_jsxs","dir","isRtl","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","ref","isCustom","type","availableReaction","useMemo","find","r","isSameReaction","centerIconId","centerIcon","id","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","Math","floor","random","length","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","_Fragment","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","setTimeout","clearTimeout","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","value","onChange","e","MIN_PASSWORD_LENGTH","maxLength","role","Button","ripple","disabled","getPointerPosition","x","touches","clientX","y","clientY","getOffsetToContainer","element","offsetTop","offsetLeft","contains","offsetParent","top","left","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","shiftX","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","min","newTailPosition","hasFloatingBadge","isProgressFull","buildStyle","width","viewBox","fill","d","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","date","isWhenOnline","scheduledAt","getTime","Date","now","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","AvatarList","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","MediaSpoiler","isVisible","withAnimation","thumbDataUri","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","shiftY","setAttribute","usePrevious","prevRef","lastRef","useHorizontalScroll","containerRef","isDisabled","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","then","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","i","angle","cos","sin","sizeFactor","push","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","forEach","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","get","MAX_EFFECT_COUNT","IS_IOS","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","chatId","messageId","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","useLang","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","count","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","animatedEmoji","AnimatedCounter","text","formatIntegerCompact","paidCounter","counter","Reactions","message","threadId","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","getGlobal","recentReaction","key","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","toString","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","isOutgoing","withContextMenu","onRemove","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","PickerItem","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","content","contentNotSupportedText","getMessageText","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","timeoutId","window","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","indexOf","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","getMainUsername","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","isStopped","set","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","isTextBox","disableScrolling","_excludedClosestSelector","document","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","getUnreadChatsByFolderId","ReactionSelectorCustomReaction","isReady","noAppearAnimation","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","ReactionSelector","allAvailableReactions","topReactions","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isPrivate","canPlayAnimatedEmojis","isInSavedMessages","isInStoryViewer","isForEffects","effectReactions","isWithPaidReaction","onShowMore","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","color","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isConnected","blur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","ApiMediaFormat","BlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","isVerified","ENTITY_CLASS_BY_NODE_NAME","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseHtmlAsFormattedText","html","withMarkdownLinks","skipMarkdown","fragment","createElement","innerHTML","parsedHtml","replace","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","trim","textIndex","recursionDeepness","addEntity","node","nodeType","Node","COMMENT_NODE","index","entity","rawText","entityType","nodeName","anchor","MentionName","Url","href","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","from","childNodes","querySelectorAll","replaceWith","ELEMENT_NODE","getMessageIdsForSelectedText","selection","getSelection","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","classList","messageEl","firstChild","removeChild","pop","parentNode","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","getTriggerElement","getRootElement","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","onCloseAnimationEnd","MenuItem","destructive","div","ALLOWED_QUOTE_ENTITIES","getSelectionAsFormattedText","range","clonedSelection","appendChild","commonAncestorContainer","currentElement","parentElement","wrapHtmlWithMarkupTags","getSelectionAsHtml","stripEntitiesForQuote","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","poll","story","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","onReply","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","scrollableRef","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","options","photo","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","label","handler","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","execCommand","clipboardText","copyHtmlToClipboard","join","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","messagesCount","option","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isMonoforum","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","savedDialogId","selectSavedDialogIdFromMessage","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","users","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","monoforumPeerId","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","ConfirmDialog","confirmLabel","confirmHandler"],"sourceRoot":""}