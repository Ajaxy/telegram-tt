{"version":3,"file":"1302.6fd4f323a717fdb1f395.js","mappings":"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,EAAOgrH,eAAezF,IAAkB0F,UACzFC,qBAAqCvqH,IAApB4kH,EAAgCvlH,EAAOgrH,eAAezF,IAAkBtqG,UAAOta,EAChGg/D,aACAsmD,oBACAgD,gBACAD,gBACAj0D,oBACAs0D,0BACA8B,0BAA0BC,EAAAA,EAAAA,KAA+BprH,EAAQC,GACjEkpH,gCACAn0D,oCACAq2D,cAAexqH,QAAQ0xB,GAAc+4F,cACrCC,qBAAqBn1F,EAAAA,EAAAA,KAA+Bp2B,EAAQ,kBAC5D2lH,eACAtkB,eACAmqB,kBAAmBnP,IAAmBoP,gBACjCvG,GAAewG,gBAAkBrP,IAAmBlL,iBACpD+T,GAAeyG,mBAAqBtP,IAAmBpL,gBAC5DlvD,wBACIglB,GAAc,CAAEle,gBAAgBuf,EAAAA,EAAAA,KAAqBpoE,EAAQ4E,EAA6B,cAApBod,OAC5C,iBAAnBld,IAA+B,CAAEA,sBACxCuiH,IAAa,CACfE,kBACAE,oBACAC,uBACAE,gBACAC,sBACAC,yBAEFyB,gBACAqC,KAAM5rH,EAAO6rH,mBAAmB74F,MAChC82F,sBACAC,kBACAvzF,UACA8e,QACA20E,gBACAE,yBACAtN,mBACA3qF,iBACAmF,mBACD,GAxOet3B,EAz3CuB+rH,EACzClnH,UACAmnH,+BACA92D,gCACA5B,gCACA0vC,QACA99F,YACA8E,aACAo7G,iBACA6G,aACAzP,YACA0P,kBACAC,cACA7G,iBACA1lD,YACAwsD,gBACAC,yBACAhH,yBACA//G,kBACA6lH,mBACAmB,gBACA1nH,SACAihH,mBACAz8F,UACA28F,iBACAC,gBACAC,aACAG,eACAK,mBACAC,gBACAG,sBACAE,6BACAC,oBACAG,cACAF,kBACAG,eACAt+D,kBACA/jD,kBACA4jH,qBACA8C,qBACAvhE,eACAqgE,mBACAjD,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACA9+F,gBACAkB,kBACAujC,iBACAE,uBACAx1B,aACA0tF,WACArc,YACA6e,aACA93C,iBACAi4C,uBACAkB,sBACA+B,iBACAliB,kBACAhkG,cACAqlH,mBACA1pG,YACA+nG,m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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMarkScrolled/useMarkScrolled.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThemeKey, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ThemeKey;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  forwardedMessagesCount,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, threadId, windowWidth, paidMessagesStars,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={!paidMessagesStars && isInScheduledList}\n        canSchedule={!paidMessagesStars}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName('paidStarsBadge', shouldRenderPaidBadge && 'visible')}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={!paidMessagesStars && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(oldLang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n            && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserId,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n      + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n  isAccountFrozen,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type {\n  IAnchorPosition, MessageListType, SharedSettings, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.usernames && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","/* eslint-disable no-bitwise */\n// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata(message.chatId, message.id, isTranslatable, detectedLanguage);\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata(chatId: string, id: number, isTranslatable: boolean, detectedLanguage?: string) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / messagesChecked;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type { RefObject } from 'react';\nimport type React from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: RefObject<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: RefObject<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      }),\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  // eslint-disable-next-line @typescript-eslint/comma-dangle\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        // eslint-disable-next-line no-bitwise\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji: emoji!,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers!.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        ) }\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cutoutRef = useRef<HTMLDivElement>(null);\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = selectChat(global, giveaway?.channelIds[0]!)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount!)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo!.messagesCount!)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {paidMessageStars && (\n        <span className=\"message-price\">{\n          formatStarsAsIcon(lang, paidMessageStars, {\n            asFont: true,\n            className: 'message-price-star-icon',\n            containerClassName: 'message-price-stars-container',\n          })\n        }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React, { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}%\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const timerCircleRef = useRef<SVGCircleElement>(null);\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')!\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const bottomMarkerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const quickReactionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n  && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album!.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album!, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album!}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(shouldSkipRenderForwardTitle:boolean = false, shouldSkipRenderAdminTitle: boolean = false) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(lang, originSender!);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.usernames?.length;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.usernames?.length && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${botSender.usernames[0].username}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '../../../lib/teact/teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn } : OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const stickerRef = useRef<HTMLDivElement>(null);\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)} — {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import type { RefObject } from '../../lib/teact/teact';\nimport { useEffect } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { throttle } from '../../util/schedulers';\n\nconst THROTTLE_DELAY = 100;\n\nconst useMarkScrolled = ({\n  containerRef, selector,\n}: {\n  containerRef: RefObject<HTMLDivElement | null>;\n  selector: string;\n}, deps: unknown[]) => {\n  useEffect(() => {\n    const elements = containerRef?.current?.querySelectorAll(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n      requestMutation(() => {\n        target.classList.toggle('scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => el.addEventListener('scroll', handleScroll, { passive: true }));\n    // Trigger the scroll handler immediately to apply the current state\n    elements.forEach((el) => el.dispatchEvent(new Event('scroll', { bubbles: false })));\n\n    return () => {\n      elements.forEach((el) => el.removeEventListener('scroll', handleScroll));\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useMarkScrolled;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","messageListType","paidMessagesStars","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","oldLang","useLang","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","selectForwardedSender","unique","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","senders","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","shouldPaidMessageAutoApprove","settings","byKey","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","selectNotifyDefaults","selectNotifyException","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","starsBalance","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAccountFrozen","selectIsCurrentUserFrozen","isAppConfigLoaded","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","inputRef","counterRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","starsForAllMessages","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","selectPeer","peerId","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleSendWithConfirmation","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","canSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","Transition","slideClassName","activeKey","direction","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","getPeerTitle","messagePriceInStars","confirmHandler","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSharedSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","selectTopic","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","confirmPaymentMessage","formatStarsAsText","totalAmount","count","withMarkdown","pluralValue","confirmLabel","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","hasAvatarMediaViewer","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","PeerColorWrapper","emojiIconClassName","shouldReset","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","asPreview","emojiSize","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","containerRef","forceAlways","shouldLoop","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","getIsChatMuted","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","screen","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","toggleStoryRibbon","openLeftColumnContent","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","container","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","onChange","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","forceFocus","insertAtEnd","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isStarsBalanceModeOpen","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","openPaymentMessageConfirmDialogOpen","setPaidMessageAutoApprove","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","getSingularPaidMedia","extendedMedia","singularMedia","AlbumRectPart","Top","Bottom","accumulate","initValue","accumulator","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","paidMedia","getMessageContent","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","thirdWidth","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","worker","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","createConnector","Worker","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","contains","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","pictogramUrl","handleFastClick","peerColor","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","mediaType","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","noLoad","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","prev","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","RE_TME_LINK","renderIcon","Invoice","forcedWidth","invoice","getMessageInvoice","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","useBlurredMediaThumbRef","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","PinSvg","cx","cy","Location","countdownRef","location","getMessageLocation","serverTime","isGeoLiveExpired","secondsBeforeEnd","period","point","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","long","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","renderPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","time","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","children","isClickable","isBought","starsAmount","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","Poll","onSendVote","loadMessage","openPollResults","summary","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","getPollTypeString","CheckboxGroup","loadingOptions","isRound","RadioGroup","loadingOption","getReadableVotersCount","Sticker","withEffect","onStopEffect","effectRef","hasEffect","isMirrored","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","openModal","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","AnimatedSticker","onEnded","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","useShowTransition","noMountTransition","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","threshold","promise","request","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","getPeerFullTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","meta","Reactions","metaChildren","noRecentReactors","renderWebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","renderInvertibleMediaContent","messageText","shouldRenderSenderName","renderForwardTitle","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","RoundVideo","Story","StoryMention","footerClass","hasContentAfterText","isMetaInText","renderInvertedMediaContent","MessageAppendix","isOutside","targetHref","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","isForMessageEffect","effectClassName","isInWebPage","isPaidPreview","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","isSmall","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","defaultMuted","isPriority","onTimeUpdate","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","WebPageUniqueGift","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","openUrl","openTelegramLink","stickersRef","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","linkTimestamp","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","drawImage","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","useMarkScrolled","selector","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","parseMessageKey","splitTrackId","messageKey","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}