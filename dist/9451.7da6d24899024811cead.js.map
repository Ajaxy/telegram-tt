{"version":3,"file":"9451.7da6d24899024811cead.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/AppendEntityPicker.module.scss?b380","webpack://telegram-t/./src/components/main/AppendEntityPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingModal.module.scss?a8f0","webpack://telegram-t/./src/components/main/premium/PremiumGiftingModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/StarsTransactionItem.module.scss?2a3b","webpack://telegram-t/./src/components/modals/stars/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.module.scss?0072","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.module.scss?c38f","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.module.scss?dbb9","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getMessageActionPhoto,\n  getMessageDocument,\n  getMessageFileName,\n  getMessageFileSize,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoFullDimensions,\n  getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\ntype UseMediaProps = {\n  mediaId?: number;\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  message,\n  mediaId = 0,\n  avatarOwner,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const actionPhoto = message ? getMessageActionPhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n  const avatarMedia = avatarOwner?.photos?.[mediaId];\n  const isVideoAvatar = Boolean(avatarMedia?.isVideo || actionPhoto?.isVideo);\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto || actionPhoto));\n  const { isGif } = video || webPageVideo || {};\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaHash = useMemo(() => (isFull?: boolean) => {\n    if (avatarOwner) {\n      if (avatarMedia) {\n        if (avatarMedia.isVideo && isFull) {\n          return getVideoAvatarMediaHash(avatarMedia);\n        } else if (mediaId === 0) {\n          // Show preloaded avatar if this is the first media (when user clicks on profile info avatar)\n          return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n        } else {\n          return `photo${avatarMedia.id}?size=c`;\n        }\n      } else {\n        return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n      }\n    }\n    if (actionPhoto && isVideoAvatar && isFull) {\n      return `videoAvatar${actionPhoto.id}?size=u`;\n    }\n    return message && getMessageMediaHash(message, isFull ? 'full' : 'preview');\n  }, [avatarOwner, actionPhoto, isVideoAvatar, message, avatarMedia, mediaId]);\n\n  const pictogramBlobUrl = useMedia(\n    message\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocumentPhoto || isDocumentVideo)\n    && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const isLocal = Boolean(localBlobUrl);\n  const fileName = message\n    ? getMessageFileName(message)\n    : avatarOwner\n      ? `avatar${avatarOwner!.id}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  const dimensions = useMemo(() => {\n    if (message) {\n      if (isDocumentPhoto || isDocumentVideo) {\n        return getMessageDocument(message)!.mediaSize!;\n      } else if (photo || webPagePhoto || actionPhoto) {\n        return getPhotoFullDimensions((photo || webPagePhoto || actionPhoto)!)!;\n      } else if (video || webPageVideo) {\n        return getVideoDimensions((video || webPageVideo)!)!;\n      }\n    } else {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n    return undefined;\n  }, [\n    isDocumentPhoto,\n    isDocumentVideo,\n    isVideoAvatar,\n    message,\n    photo,\n    video,\n    actionPhoto,\n    webPagePhoto,\n    webPageVideo,\n  ]);\n\n  return {\n    getMediaHash,\n    photo,\n    video,\n    webPagePhoto,\n    actionPhoto,\n    webPageVideo,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocumentPhoto,\n    isDocumentVideo,\n    fileName,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    avatarPhoto: avatarMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    videoSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(selectBot(global, message.chatId));\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { MenuItemProps } from '../ui/MenuItem';\n\nimport { getMessageMediaFormat, getMessageMediaHash, isUserId } from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsDownloading,\n  selectIsMessageProtected,\n} from '../../global/selectors';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  avatarOwnerId?: string;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  message?: ApiMessage;\n  canUpdateMedia?: boolean;\n  isSingleMedia?: boolean;\n  avatarPhoto?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  fileName?: string;\n  canReport?: boolean;\n  selectMedia: (mediaId?: number) => void;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  avatarPhoto,\n  avatarOwnerId,\n  fileName,\n  isChatProtected,\n  isDownloading,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  selectMedia,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    message && getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (!avatarPhoto || !avatarOwnerId) return;\n    if (isUserId(avatarOwnerId)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwnerId, photo: avatarPhoto });\n    }\n    selectMedia(0);\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    return message\n      ? (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={message}\n        />\n      )\n      : (avatarOwnerId && avatarPhoto) ? (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={avatarOwnerId}\n          photo={avatarPhoto}\n        />\n      ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (message?.isForwardingAllowed && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {message?.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message, canUpdateMedia, avatarPhoto, avatarOwner,\n  }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      isDownloading,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      avatarOwnerId: avatarOwner?.id,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered && !isUnsupported, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport { MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  selectChat, selectChatMessage, selectIsMessageProtected, selectScheduledMessage, selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  mediaId?: number;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  isMoving?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  mediaId?: number;\n  senderId?: string;\n  threadId?: ThreadId;\n  avatarOwner?: ApiPeer;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    mediaId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    origin,\n    withAnimation,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    isHidden,\n    onClose,\n    onFooterClick,\n    isMoving,\n  } = props;\n\n  const lang = useOldLang();\n\n  const {\n    isVideo,\n    isPhoto,\n    actionPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    videoSize,\n    loadProgress,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (avatarOwner || actionPhoto) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={mediaId}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = message.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message, forcePlayback: true, isForMediaViewer: true });\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = message && calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={mediaId}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n    } = selectTabState(global).mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        origin,\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  mediaId?: number;\n  loadMoreMediaIfNeeded: (activeMediaId?: number) => void;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  getMediaId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMedia: (id?: number) => void;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  onClose: () => void;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  mediaId,\n  loadMoreMediaIfNeeded,\n  getMediaId,\n  selectMedia,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveMediaId, setActiveMediaId] = useSignal<number | undefined>(mediaId);\n  const activeMediaIdRef = useSignalRef(getActiveMediaId);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeMediaId = useDerivedState(getActiveMediaId);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n  const { onClose } = rest;\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectMediaDebounced = useDebouncedCallback(selectMedia, [selectMedia], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveMediaId(mediaId);\n    }\n  }, [mediaId, setActiveMediaId, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || isLoadingMoreMedia) return;\n    loadMoreMediaIfNeeded(activeMediaId);\n  }, [activeMediaId, loadMoreMediaIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeMediaIdRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMediaId(activeMediaIdRef.current, direction);\n      if (mId !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMediaId(activeMediaIdRef.current, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    onClose,\n    setTransform,\n    loadMoreMediaIfNeeded,\n    getMediaId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMediaDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    withAnimation,\n    setIsMouseDown,\n    setIsActive,\n    isHidden,\n    isFullscreen,\n    transformRef,\n    setActiveMediaId,\n    activeMediaIdRef,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  if (activeMediaId === undefined) return undefined;\n\n  const nextMediaId = getMediaId(activeMediaId, 1);\n  const prevMediaId = getMediaId(activeMediaId, -1);\n  const hasPrev = prevMediaId !== undefined;\n  const hasNext = nextMediaId !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={prevMediaId}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...rest}\n          mediaId={activeMediaId}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={nextMediaId}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport { getSenderTitle } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectPeer,\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n  isFallbackAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isFallbackAvatar,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  });\n\n  const lang = useOldLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={sender.id} size=\"medium\" peer={sender} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang(isFallbackAvatar ? 'lng_mediaview_profile_public_photo' : 'lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: selectPeer(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getChatMediaMessageIds, isChatAdmin, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  mediaId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiPeer;\n  avatarOwnerFallbackPhoto?: ApiPhoto;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  mediaId,\n  senderId,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatarOwner,\n  avatarOwnerFallbackPhoto,\n  message,\n  chatMessages,\n  collectionIds,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const {\n    webPagePhoto,\n    webPageVideo,\n    isVideo,\n    actionPhoto,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n    avatarPhoto,\n    fileName,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = !!avatarPhoto && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  /* Navigation */\n  const singleMediaId = webPagePhoto || webPageVideo || actionPhoto || isGif ? mediaId : undefined;\n\n  const mediaIds = useMemo(() => {\n    if (singleMediaId) return [singleMediaId];\n    if (avatarOwner) return avatarOwner.photos?.map((p, i) => i) || [];\n    if (withDynamicLoading) return collectionIds || [];\n    return getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n  }, [singleMediaId, avatarOwner, chatMessages, collectionIds, isFromSharedMedia, withDynamicLoading]);\n\n  const selectedMediaIndex = mediaId ? mediaIds.indexOf(mediaId) : -1;\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaIndex;\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwner = usePrevious<ApiPeer | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevMediaId !== mediaId;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (!prevMessage || shouldAnimateOpening) && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, shouldAnimateOpening, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const mediaIdRef = useStateRef(mediaId);\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    const currentMediaId = mediaIdRef.current;\n\n    if (!chatId || !currentMediaId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId: currentMediaId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId: currentMediaId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [mediaId!],\n    });\n  });\n\n  const selectMedia = useLastCallback((id?: number) => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      mediaId: id,\n      avatarOwnerId: avatarOwner?.id,\n      origin: origin!,\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const mediaIdsRef = useStateRef(mediaIds);\n\n  const loadMoreMediaIfNeeded = useLastCallback((activeMediaId?: number) => {\n    if (!activeMediaId || !withDynamicLoading || isLoadingMoreMedia) return;\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: activeMediaId });\n  });\n\n  const getMediaId = useLastCallback((fromId?: number, direction?: number): number | undefined => {\n    if (fromId === undefined) return undefined;\n    const mIds = mediaIdsRef.current;\n    const index = mIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < mIds.length - 1)) {\n      return mIds[index + direction];\n    }\n    // Fallback\n    if (isVisible) loadMoreMediaIfNeeded(fromId);\n    return undefined;\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    if (mediaIds.length <= 1) {\n      handleClose();\n      return;\n    }\n    let index = mediaId ? mediaIds.indexOf(mediaId) : -1;\n    // Before deleting, select previous media or the first one\n    index = index > 0 ? index - 1 : 0;\n    selectMedia(mediaIds[index]);\n  });\n\n  const lang = useOldLang();\n\n  function renderSenderInfo() {\n    return avatarOwner ? (\n      <SenderInfo\n        key={mediaId}\n        chatId={avatarOwner.id}\n        isAvatar\n        isFallbackAvatar={isUserId(avatarOwner.id)\n          && (avatarOwner as ApiUser).photos?.[mediaId!]?.id === avatarOwnerFallbackPhoto?.id}\n      />\n    ) : (\n      <SenderInfo\n        key={mediaId}\n        chatId={chatId}\n        messageId={mediaId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          message={message}\n          canUpdateMedia={canUpdateMedia}\n          avatarPhoto={avatarPhoto}\n          avatarOwner={avatarOwner}\n          fileName={fileName}\n          canReport={canReport}\n          selectMedia={selectMedia}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        mediaId={mediaId}\n        loadMoreMediaIfNeeded={loadMoreMediaIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getMediaId={getMediaId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectMedia={selectMedia}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        withAnimation,\n        isHidden,\n        shouldSkipHistoryAnimations,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const user = selectUser(global, avatarOwnerId);\n      const chat = selectChat(global, avatarOwnerId);\n      let canUpdateMedia = false;\n      if (user) {\n        canUpdateMedia = avatarOwnerId === currentUserId;\n      } else if (chat) {\n        canUpdateMedia = isChatAdmin(chat);\n      }\n\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: user || chat,\n        avatarOwnerFallbackPhoto: user ? selectUserFullInfo(global, avatarOwnerId)?.fallbackPhoto : undefined,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectChatScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectionIds: number[] | undefined;\n\n    if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n      const currentSearch = selectCurrentChatMediaSearch(global);\n      isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n      const { foundIds } = (currentSearch?.currentSegment) || {};\n      collectionIds = foundIds;\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentSharedMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    } else if (isOriginInline || isOriginAlbum) {\n      const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, message.id);\n      collectionIds = outlyingList || selectListedIds(global, chatId, threadId);\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <Picker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransition(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransition(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransition(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransition(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransition(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransition(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransition(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress(handleLongPressStart, handleLongPressEnd);\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress(\n  onStart: NoneToVoidFunction,\n  onEnd: NoneToVoidFunction,\n) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart();\n      isLongPressActive.current = true;\n    }, DEFAULT_THRESHOLD);\n  }, [onStart]);\n\n  const cancel = useCallback(() => {\n    if (isLongPressActive.current) {\n      onEnd();\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePrevious(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePrevious(isOpen);\n  const prevBestImageData = usePrevious(bestImageData);\n  const prevPeerId = usePrevious(peerId);\n  const prevOrigin = usePrevious(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const topicsResult = forumId ? chatsById[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById[forumId!], topic.id, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePrevious(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n  const [isRemoveModalOpen, openRemoveModal, hideRemoveModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useOldLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = modal || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(modal!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (modal?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: modal.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, modal?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeWebApp();\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      openRemoveModal();\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      hideRemoveModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={hideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId } = modal || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"PMXzSiTT\",\"closeButton\":\"j3gx2vFZ\",\"avatars\":\"yIKcy5ir\",\"center\":\"EIXAUV27\",\"description\":\"TJy4zGvM\",\"premiumFeatures\":\"JqQfM_r9\",\"options\":\"eXU0NjiF\",\"boostIcon\":\"ZsR31o4m\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n} from '../../../api/types';\n\nimport { BOOST_PER_SENT_GIFT } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  gifts?: ApiPremiumGiftCodeOption[] | undefined;\n  forUserIds?: string[];\n  boostPerSentGift?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  gifts,\n  boostPerSentGift = BOOST_PER_SENT_GIFT,\n  forUserIds,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    openPremiumModal, closeGiftPremiumModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n\n  const selectedUserQuantity = forUserIds && forUserIds.length * boostPerSentGift;\n\n  useEffect(() => {\n    if (forUserIds?.length) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [gifts, forUserIds]);\n\n  const giftingUserList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => usersById[userId]).filter(Boolean);\n  }, [forUserIds]);\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === forUserIds?.length);\n  }, [gifts, selectedMonthOption, forUserIds?.length]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === forUserIds?.length);\n  }, [gifts, forUserIds?.length]);\n\n  const fullMonthlyGiftAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const handleSubmit = useLastCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    openInvoice({\n      type: 'giftcode',\n      userIds: forUserIds!,\n      currency: selectedGift!.currency,\n      amount: selectedGift!.amount,\n      option: selectedGift!,\n    });\n  });\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const userNameList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [forUserIds]);\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return renderText(lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle',\n        [userNameList, selectedGift?.months]), ['simple_markdown']);\n    }\n\n    return lang('GiftTelegramPremiumTitle');\n  }\n\n  function renderGiftText() {\n    if (isCompleted) {\n      return renderText(lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', userNameList),\n        ['simple_markdown']);\n    }\n    return renderText(lang('GiftPremiumUsersGiveAccessManyZero', userNameList), ['simple_markdown']);\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={buildClassName(styles.premiumFeatures, styles.center)}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function renderBoostsPluralText() {\n    const giftParts = renderText(lang('GiftPremiumWillReceiveBoostsPlural', selectedUserQuantity), ['simple_markdown']);\n    return giftParts.map((part) => {\n      if (typeof part === 'string') {\n        return part.split(/(⚡)/g).map((subpart) => {\n          if (subpart === '⚡') {\n            return <Icon name=\"boost\" className={styles.boostIcon} />;\n          }\n          return subpart;\n        });\n      }\n      return part;\n    });\n  }\n\n  function renderSubscriptionGiftOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={gift.months}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyGiftAmount}\n              checked={gift.months === selectedMonthOption}\n              onChange={setSelectedMonthOption}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={styles.avatars}>\n          <AvatarList\n            size=\"large\"\n            peers={giftingUserList}\n          />\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={buildClassName(styles.description, styles.center)}>\n          {renderGiftText()}\n        </p>\n        {!isCompleted && (\n          <>\n            <p className={styles.description}>\n              {renderText(renderBoostsPluralText(), ['simple_markdown', 'emoji'])}\n            </p>\n\n            <div className={styles.options}>\n              {renderSubscriptionGiftOptions()}\n            </div>\n          </>\n        )}\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      {!isCompleted && (\n        <Button withPremiumGradient className={styles.button} isShiny disabled={!selectedGift} onClick={handleSubmit}>\n          {lang(\n            'GiftSubscriptionFor', selectedGift\n            && formatCurrency(selectedGift!.amount, selectedGift.currency, lang.code),\n          )}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    gifts, forUserIds, isCompleted,\n  } = selectTabState(global).giftPremiumModal || {};\n\n  return {\n    isCompleted,\n    gifts,\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    forUserIds,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport Picker from './Picker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePrevious(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList\n      .filter((country) => !country.isHidden)\n      .map((country) => country.iso2);\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <Picker\n          className={styles.picker}\n          itemIds={displayedIds}\n          selectedIds={selectedCountryIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          isCountryList\n          countryList={countryList}\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fAO_fMJD\",\"main\":\"vtyWYWNc\",\"filter\":\"OM3FgjkD\",\"title\":\"d3EvpDij\",\"buttons\":\"w2D1Ddo7\",\"picker\":\"dWDj6lW6\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUserStatus } from '../../api/types';\n\nimport {\n  filterChatsByName,\n  filterUsersByName, isChatChannel, isChatPublic, isChatSuperGroup, isUserBot, sortUserIds,\n} from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from '../common/helpers/sortChatIds';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Picker from '../common/Picker';\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Modal from '../ui/Modal';\n\nimport styles from './AppendEntityPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  chatId?: string;\n  entityType: 'members' | 'channels' | undefined;\n  onSubmit: (value: string[]) => void;\n  selectionLimit: number;\n};\n\ninterface StateProps {\n  chatId?: string;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  channelList?: (ApiChat | undefined)[] | undefined;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  currentUserId?: string | undefined;\n}\n\nconst AppendEntityPickerModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  isOpen,\n  onClose,\n  members,\n  adminMembersById,\n  userStatusesById,\n  entityType,\n  isChannel,\n  isSuperGroup,\n  onSubmit,\n  currentUserId,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const channelsIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const activeChatIds = getGlobal().chats.listIds.active;\n\n    return activeChatIds!.map((id) => chatsById[id])\n      .filter((chat) => chat && (isChatChannel(chat)\n        || isChatSuperGroup(chat)) && chat.id !== chatId)\n      .map((chat) => chat!.id);\n  }, [chatId]);\n\n  const adminIds = useMemo(() => {\n    return adminMembersById && Object.keys(adminMembersById);\n  }, [adminMembersById]);\n\n  const memberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return adminIds ? userIds.filter((userId) => userId !== currentUserId) : userIds;\n  }, [adminIds, currentUserId, members, userStatusesById]);\n\n  const displayedMembersIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelsIds ? filterChatsByName(lang, channelsIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(unique(foundChannelIds).filter((contactId) => {\n      const chat = chatsById[contactId];\n      if (!chat) {\n        return true;\n      }\n\n      return isChannel || isSuperGroup;\n    }),\n    false,\n    selectedIds);\n  }, [channelsIds, lang, searchQuery, selectedIds, isSuperGroup, isChannel]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    onSubmit([]);\n    onClose();\n  });\n\n  const handleSendIdList = useLastCallback(() => {\n    onSubmit(selectedIds);\n    onClose();\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds((prevIds) => unique([...prevIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const handleClose = useLastCallback(() => {\n    onSubmit([]);\n    onClose();\n  });\n\n  function renderSearchField() {\n    return (\n      <div className={styles.filter} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleCloseButtonClick}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={styles.title}>{lang(entityType === 'channels'\n          ? 'RequestPeer.ChooseChannelTitle' : 'BoostingAwardSpecificUsers')}\n        </h3>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={handleSendIdList}\n    >\n      <div className={styles.main}>\n        {renderSearchField()}\n        <div className={buildClassName(styles.main, 'custom-scroll')}>\n          <Picker\n            className={styles.picker}\n            itemIds={entityType === 'members' ? displayedMembersIds : displayedChannelIds}\n            selectedIds={selectedIds}\n            filterValue={searchQuery}\n            filterPlaceholder={lang('Search')}\n            searchInputId={`${entityType}-picker-search`}\n            onSelectedIdsChange={entityType === 'channels'\n              ? handleSelectedChannelIdsChange : handleSelectedMemberIdsChange}\n            onFilterChange={setSearchQuery}\n            isSearchable\n          />\n        </div>\n        <div className={styles.buttons}>\n          <Button size=\"smaller\" onClick={handleSendIdList}>\n            {lang('Save')}\n          </Button>\n        </div>\n      </div>\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId, entityType }): StateProps => {\n  const { statusesById: userStatusesById } = global.users;\n  let isChannel;\n  let isSuperGroup;\n  let members: ApiChatMember[] | undefined;\n  let adminMembersById: Record<string, ApiChatMember> | undefined;\n  let currentUserId: string | undefined;\n\n  if (entityType === 'members') {\n    currentUserId = global.currentUserId;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    if (chatFullInfo) {\n      members = chatFullInfo.members;\n      adminMembersById = chatFullInfo.adminMembersById;\n    }\n  } if (entityType === 'channels') {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    if (chat) {\n      isChannel = isChatChannel(chat);\n      isSuperGroup = isChatSuperGroup(chat);\n    }\n  }\n\n  return {\n    chatId,\n    members,\n    adminMembersById,\n    userStatusesById,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n  };\n})(AppendEntityPickerModal));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'random_users' | 'specific_users';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry, ApiPremiumGiftCodeOption, ApiPrepaidGiveaway, ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport AppendEntityPickerModal from '../AppendEntityPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiveawayUsersRound from '../../../assets/premium/GiveawayUsersRound.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiPrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n};\n\ntype GiveawayAction = 'createRandomlyUsers' | 'createSpecificUsers';\ntype ApiGiveawayType = 'random_users' | 'specific_users';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isEntityPickerModalOpen, openEntityPickerModal, closeEntityPickerModal] = useFlag();\n  const [entityType, setEntityType] = useState<'members' | 'channels' | undefined>(undefined);\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'BoostingCreateGiveaway',\n    text: 'BoostingWinnersRandomly',\n    value: 'random_users',\n    img: GiftBlueRound,\n    actions: 'createRandomlyUsers',\n    isLink: false,\n  }, {\n    name: 'BoostingAwardSpecificUsers',\n    text: 'BoostingSelectRecipients',\n    value: 'specific_users',\n    img: GiveawayUsersRound,\n    actions: 'createSpecificUsers',\n    isLink: true,\n    onClickAction: () => {\n      openEntityPickerModal();\n      setEntityType('members');\n    },\n  }];\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedUserCount, setSelectedUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountriesIds, setSelectedCountriesIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const isRandomUsers = selectedGiveawayOption === 'random_users';\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountriesIds && selectedCountriesIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountriesIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountriesIds && selectedCountriesIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountriesIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountriesIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n\n  const selectedGift = useMemo(() => {\n    return gifts!.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === (selectedUserIds?.length ? selectedUserIds?.length : selectedUserCount));\n  }, [gifts, selectedUserIds, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    const uniqueUserCounts = new Set(gifts?.map((gift) => gift.users));\n    return Array.from(uniqueUserCounts).sort((a, b) => a - b);\n  }, [gifts]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedMonthOption(prepaidGiveaway ? prepaidGiveaway.months : gifts?.[0].months);\n    }\n  }, [gifts, isOpen, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (prepaidGiveaway) {\n      setSelectedUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openInvoice({\n        type: 'giftcode',\n        boostChannelId: chatId!,\n        userIds: selectedUserIds,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n        option: selectedGift!,\n      });\n    } else {\n      openInvoice({\n        type: 'giveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountriesIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n        option: selectedGift!,\n      });\n    }\n\n    closeGiveawayModal();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    launchPrepaidGiveaway({\n      chatId: chatId!,\n      giveawayId: dataPrepaidGiveaway!.id,\n      paymentPurpose: {\n        additionalChannelIds: selectedChannelIds,\n        countries: selectedCountriesIds,\n        prizeDescription,\n        areWinnersVisible: shouldShowWinners,\n        untilDate: customExpireDate / 1000,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n      },\n    });\n\n    closeConfirmModal();\n    closeGiveawayModal();\n  });\n\n  const handleUserCountChange = useLastCallback((newValue) => {\n    setSelectedUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  const handleAdd = useLastCallback(() => {\n    openEntityPickerModal();\n    setEntityType('channels');\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountriesIds(value);\n  });\n\n  const handleSetIdsListChange = useLastCallback((value: string[]) => {\n    return entityType === 'members'\n      ? (value?.length ? setSelectedUserIds(value) : setGiveawayOption('random_users'))\n      : setSelectedChannelIds(value);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeGiveawayModal();\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  if (!gifts) return undefined;\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {dataPrepaidGiveaway ? (\n          <div className={styles.status}>\n            <div>\n              <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway.months]} alt=\"\" />\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway.quantity)}\n              </h3>\n              <p className={styles.month}>{lang('PrepaidGiveawayMonths', dataPrepaidGiveaway.months)}</p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataPrepaidGiveaway.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isRandomUsers && (\n          <>\n            {!dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingChannelsIncludedGiveaway')}\n              </h2>\n\n              <ListItem\n                inactive\n                className=\"chat-item-clickable contact-list-item\"\n              >\n                <GroupChatInfo\n                  chatId={chatId!}\n                  status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                    : 'BoostingGroupWillReceiveBoost', boostQuantity, 'i')}\n                />\n              </ListItem>\n\n              {selectedChannelIds?.map((channelId) => {\n                return (\n                  <ListItem\n                    ripple\n                    key={channelId}\n                    className=\"chat-item-clickable contact-list-item\"\n                    /* eslint-disable-next-line react/jsx-no-bind */\n                    onClick={() => deleteParticipantsHandler(channelId)}\n                    rightElement={(<Icon name=\"close\" />)}\n                  >\n                    <GroupChatInfo\n                      chatId={channelId.toString()}\n                    />\n                  </ListItem>\n                );\n              })}\n\n              {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n                <ListItem\n                  icon=\"add\"\n                  ripple\n                  onClick={handleAdd}\n                  className={styles.addButton}\n                  iconClassName={styles.addChannel}\n                >\n                  {lang('BoostingAddChannelOrGroup')}\n                </ListItem>\n              )}\n            </div>\n\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingEligibleUsers')}\n              </h2>\n\n              {renderSubscribersOptions()}\n            </div>\n\n            <div className={styles.subscription}>\n              {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n            </div>\n\n            <div className={styles.section}>\n              <div className={styles.checkboxSection}>\n                <h2 className={styles.title}>\n                  {lang('BoostingGiveawayAdditionalPrizes')}\n                </h2>\n\n                <Switcher\n                  label={lang('BoostingGiveawayAdditionalPrizes')}\n                  checked={shouldShowPrizes}\n                  onChange={handleShouldShowPrizesChange}\n                />\n              </div>\n\n              {shouldShowPrizes && (\n                <div className={styles.prizesSection}>\n                  <h2 className={styles.title}>\n                    {dataPrepaidGiveaway ? dataPrepaidGiveaway.quantity : selectedUserCount}\n                  </h2>\n                  <InputText\n                    className={styles.prizesInput}\n                    value={prizeDescription}\n                    onChange={handlePrizeDescriptionChange}\n                    label={lang('BoostingGiveawayEnterYourPrize')}\n                  />\n                </div>\n              )}\n            </div>\n\n            {shouldShowPrizes ? (\n              <div className={styles.subscription}>\n                {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                  dataPrepaidGiveaway\n                    ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                    : [selectedUserCount, prizeDescription, monthQuantity],\n                  undefined,\n                  selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                  dataPrepaidGiveaway\n                    ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                    : [selectedUserCount, monthQuantity],\n                  undefined,\n                  selectedMonthOption), ['simple_markdown'])}\n              </div>\n            ) : (\n              <div className={styles.subscription}>\n                {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n              </div>\n            )}\n\n            <div className={styles.section}>\n              <div className={styles.checkboxSection}>\n                <h2 className={styles.title}>\n                  {lang('BoostingGiveawayShowWinners')}\n                </h2>\n\n                <Switcher\n                  label={lang('BoostingGiveawayAdditionalPrizes')}\n                  checked={shouldShowWinners}\n                  onChange={handleShouldShowWinnersChange}\n                />\n              </div>\n            </div>\n\n            <div className={styles.subscription}>\n              {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n            </div>\n\n            <div className={buildClassName(styles.section, dataPrepaidGiveaway && styles.subscriptionFooter)}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDateWhenGiveawayEnds')}\n              </h2>\n\n              <Button\n                ariaLabel={lang('BoostGift.DateEnds')}\n                className={buildClassName(styles.dateButton, 'expire-limit')}\n                isText\n                onClick={openCalendar}\n              >\n                <h3 className={styles.title}>\n                  {lang('BoostGift.DateEnds')}\n                </h3>\n                {formatDateTimeToString(customExpireDate, lang.code)}\n              </Button>\n            </div>\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button className={styles.button} onClick={dataPrepaidGiveaway ? openConfirmModal : handleClick}>\n              {lang('BoostingStartGiveaway')}\n              <div className={styles.quantity}>\n                <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeButtonColor)}>\n                  <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                  <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                    {dataPrepaidGiveaway ? dataPrepaidGiveaway.quantity : boostQuantity}\n                  </div>\n                </div>\n              </div>\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <AppendEntityPickerModal\n        key={entityType}\n        isOpen={isEntityPickerModalOpen}\n        onClose={closeEntityPickerModal}\n        entityType={entityType}\n        chatId={chatId}\n        onSubmit={handleSetIdsListChange}\n        selectionLimit={entityType === 'members' ? userSelectionLimit : GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n  };\n})(GiveawayModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"cKwZp5xA\",\"main\":\"bo8ICYep\",\"filter\":\"HK8ZNKHl\",\"title\":\"LUU19p8W\",\"buttons\":\"CdZFeuxb\",\"picker\":\"JBzw9a0l\",\"avatars\":\"UAhbe3L3\",\"center\":\"JZ7y_T5c\",\"description\":\"OySCJvvR\",\"premiumFeatures\":\"CrYMy2g6\",\"options\":\"IRkNlxtz\",\"button\":\"HIPk0a6e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { GIVEAWAY_MAX_ADDITIONAL_CHANNELS } from '../../../config';\nimport {\n  filterUsersByName, isUserBot,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PremiumGiftingModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userSelectionLimit?: number;\n  userIds?: string[];\n}\n\nconst PremiumGiftingModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  userIds,\n}) => {\n  const { closePremiumGiftingModal, openGiftPremiumModal, showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = userIds ? filterUsersByName(userIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user) && userId !== currentUserId;\n    }));\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSendIdList = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openGiftPremiumModal({ forUserIds: selectedUserIds });\n\n      closePremiumGiftingModal();\n    }\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > userSelectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', userSelectionLimit),\n      });\n      return;\n    }\n    setSelectedUserIds(newSelectedIds);\n  });\n\n  function renderSearchField() {\n    return (\n      <div className={styles.filter} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closePremiumGiftingModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={styles.title}>{lang('GiftTelegramPremiumTitle')}\n        </h3>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closePremiumGiftingModal}\n      onEnter={handleSendIdList}\n    >\n      <div className={styles.main}>\n        {renderSearchField()}\n        <div className={buildClassName(styles.main, 'custom-scroll')}>\n          <Picker\n            className={styles.picker}\n            itemIds={displayedUserIds}\n            selectedIds={selectedUserIds}\n            filterValue={searchQuery}\n            filterPlaceholder={lang('Search')}\n            searchInputId=\"users-picker-search\"\n            onSelectedIdsChange={handleSelectedUserIdsChange}\n            onFilterChange={setSearchQuery}\n            isSearchable\n          />\n        </div>\n        <div className={styles.buttons}>\n          <Button withPremiumGradient size=\"smaller\" onClick={handleSendIdList} disabled={!selectedUserIds?.length}>\n            {lang('Continue')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n  };\n})(PremiumGiftingModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerPreviewHash(stickerSet.stickers![0].id);\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Lu0K9UZP\",\"selected\":\"UF8XKO4C\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation) : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID && stickerSet.id !== POPULAR_SYMBOL_SET_ID\n    && !isChatEmojiSet && !isChatStickerSet;\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <i className=\"symbol-set-locked-icon icon icon-lock-badge\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <i className=\"symbol-set-remove icon icon-close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('symbol-set-container shared-canvas-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <i className=\"icon icon-premium\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateInFuture } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, prevBoostedChat);\n  }, [prevBoostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? lang('BoostChannel') : lang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = lang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = lang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = lang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = lang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, lang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {lang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"cell\":\"Cnh5ENvm\",\"logo\":\"jbiW0GE8\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiWebDocument } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerImageUrl?: string;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  headerAvatarWebPhoto?: ApiWebDocument;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerImageUrl,\n  headerAvatarPeer,\n  headerAvatarWebPhoto,\n  header,\n  footer,\n  buttonText,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  const withAvatar = Boolean(headerAvatarPeer || headerAvatarWebPhoto);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {withAvatar ? (\n        <Avatar peer={headerAvatarPeer} webPhoto={headerAvatarWebPhoto} size=\"jumbo\" className={styles.avatar} />\n      ) : (\n        <img className={styles.logo} src={headerImageUrl} alt=\"\" draggable={false} />\n      )}\n      {header}\n      <table className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <tr className={styles.row}>\n            <td className={buildClassName(styles.cell, styles.title)}>{label}</td>\n            <td className={buildClassName(styles.cell, styles.value)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </td>\n          </tr>\n        ))}\n      </table>\n      {footer}\n      {buttonText && (\n        <Button onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      headerImageUrl={PremiumLogo}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePrevious(modal) || modal;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"section\":\"lYkNd_gb\",\"secondaryInfo\":\"fBublGG8\",\"logo\":\"sjhpNB8l\",\"logoBackground\":\"jjESKN3H\",\"headerHext\":\"xbpAOr37\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"balance\":\"LitvQduT\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"options\":\"qPBycZTv\",\"option\":\"UJPk4YLZ\",\"optionTop\":\"uYCOjzEO\",\"stackedStars\":\"uulRH8gY\",\"stackedStar\":\"pXdx3arJ\",\"optionBottom\":\"ByyaPmxJ\",\"moreOptions\":\"z4OfLFqg\",\"iconDown\":\"Hj7jRHF8\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentAmount\":\"sd2jk3Hn\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance: number;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className }: OwnProps) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.balance, className)}>\n      <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n      <div className={styles.balanceBottom}>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {formatInteger(balance)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ic1OO5om\",\"info\":\"mNSPocCT\",\"stars\":\"mNOFB1jr\",\"amount\":\"vocPCemA\",\"title\":\"LiLNLeVH\",\"description\":\"Iu1Cg3HS\",\"date\":\"mPKxgyId\",\"positive\":\"dKHKLKDW\",\"negative\":\"Qsu5djeZ\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { getSenderTitle } from '../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../global/helpers/payments';\nimport { selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n};\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction }: OwnProps) => {\n  const { getStarsReceipt } = getActions();\n  const {\n    date,\n    stars,\n    photo,\n    isRefund,\n    peer: transactionPeer,\n  } = transaction;\n  const lang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n\n  const data = useMemo(() => {\n    let title = transaction.title;\n    let description;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getSenderTitle(lang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction.peer);\n      title = lang(customPeer.titleKey);\n      description = lang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n    };\n  }, [lang, peer, transaction]);\n\n  const handleClick = useLastCallback(() => {\n    getStarsReceipt({ transaction });\n  });\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        <p className={styles.description}>{data.description}</p>\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, lang.code, true)}\n          {isRefund && ` — (${lang('StarsRefunded')})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span className={buildClassName(styles.amount, stars < 0 ? styles.negative : styles.positive)}>\n          {formatStarsTransactionAmount(stars)}\n        </span>\n        <StarIcon type=\"gold\" size=\"big\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarTopupOption, ApiUser } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from './BalanceBlock';\nimport TransactionItem from './StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\n\nconst TRANSACTION_TABS: TabWithProperties[] = [\n  { title: 'StarsTransactionsAll' },\n  { title: 'StarsTransactionsIncoming' },\n  { title: 'StarsTransactionsOutgoing' },\n];\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  originPaymentBot?: ApiUser;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, originPaymentBot,\n}: OwnProps & StateProps) => {\n  const { closeStarsBalanceModal, loadStarsTransactions, openInvoice } = getActions();\n\n  const { balance, history, topupOptions } = starsBalanceState || {};\n\n  const lang = useOldLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const productStarsPrice = modal?.originPayment?.invoice?.amount;\n  const starsNeeded = productStarsPrice ? productStarsPrice - (balance || 0) : undefined;\n  const originBotName = originPaymentBot && getUserFullName(originPaymentBot);\n  const shouldShowTransactions = Boolean(history?.all?.transactions.length && !modal?.originPayment);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      unmarkOptionsExtended();\n      setSelectedTabIndex(0);\n    }\n  }, [isOpen]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!topupOptions) {\n      return [undefined, false];\n    }\n\n    const maxOption = topupOptions.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption; starsCount: number }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    topupOptions.forEach((option) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: currentStackedStarsCount,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, topupOptions, starsNeeded]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = lang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={lang('StarsTOSLink')} text={lang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, lang]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    openInvoice({\n      type: 'stars',\n      option,\n    });\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n    });\n  });\n\n  return (\n    <Modal className={styles.root} isOpen={isOpen} onClose={closeStarsBalanceModal}>\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <BalanceBlock balance={balance || 0} className={styles.modalBalance} />\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {lang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n          <h2 className={styles.headerText}>\n            {starsNeeded ? lang('StarsNeededTitle', starsNeeded) : lang('TelegramStars')}\n          </h2>\n          <div className={styles.description}>\n            {renderText(\n              starsNeeded ? lang('StarsNeededText', originBotName) : lang('TelegramStarsInfo'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className={styles.options}>\n            {renderingOptions?.map(({ option, starsCount }) => (\n              <StarTopupOption option={option} starsCount={starsCount} onClick={handleClick} />\n            ))}\n            {!areOptionsExtended && canExtend && (\n              <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n                {lang('Stars.Purchase.ShowMore')}\n                <Icon className={styles.iconDown} name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n        <div className={styles.secondaryInfo}>\n          {tosText}\n        </div>\n        {shouldShowTransactions && (\n          <>\n            <TabList\n              big\n              activeTab={selectedTabIndex}\n              tabs={TRANSACTION_TABS}\n              onSwitchTab={setSelectedTabIndex}\n            />\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMore}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  className={styles.transactions}\n                  noFastList\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <TransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction StarTopupOption({\n  option, starsCount, onClick,\n}: {\n  option: ApiStarTopupOption; starsCount: number; onClick?: (option: ApiStarTopupOption) => void;\n}) {\n  const lang = useOldLang();\n\n  return (\n    <div className={styles.option} key={option.stars} onClick={() => onClick?.(option)}>\n      <div className={styles.optionTop}>\n        +{option.stars}\n        {/* Switch directionality for correct order. Can't use flex because https://issues.chromium.org/issues/40249030 */}\n        <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n          {Array.from({ length: starsCount }).map(() => (\n            <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n          ))}\n        </div>\n      </div>\n      <div className={styles.optionBottom}>\n        {formatCurrency(option.amount, option.currency, lang.code)}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const botId = modal?.originPayment?.botId;\n    const bot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      starsBalanceState: global.stars,\n      originPaymentBot: bot,\n    };\n  },\n)(StarsBalanceModal));\n","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['isStarPaymentModalOpen'];\n};\n\ntype StateProps = {\n  payment?: TabState['payment'];\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n};\n\nconst StarPaymentModal = ({\n  modal, bot, starsBalanceState, payment,\n}: OwnProps & StateProps) => {\n  const { closePaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const photo = payment?.invoice?.photo;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!payment?.invoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = lang('Stars.Intro.PurchasedText.Stars', payment.invoice.amount);\n\n    return lang('Stars.Transfer.Info', [payment.invoice.title, botName, starsText]);\n  }, [bot, payment, lang]);\n\n  const handlePayment = useLastCallback(() => {\n    const price = payment?.invoice?.amount;\n    const balance = starsBalanceState?.balance;\n    if (price === undefined || balance === undefined) {\n      return;\n    }\n\n    if (price > balance) {\n      openStarsBalanceModal({\n        originPayment: payment,\n      });\n      return;\n    }\n\n    sendStarPaymentForm();\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closePaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance || 0} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n        <Avatar peer={bot} size=\"giant\" />\n        {photo && <Avatar className={styles.paymentPhoto} webPhoto={photo} size=\"giant\" />}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {lang('StarsConfirmPurchaseTitle')}\n      </h2>\n      <div className={buildClassName(styles.description, styles.smallerText)}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang('Stars.Transfer.Pay')}\n        <div className={styles.paymentAmount}>\n          {payment?.invoice?.amount}\n          <StarIcon className={styles.paymentButtonStar} size=\"small\" />\n        </div>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const payment = selectTabState(global).payment;\n    const bot = payment?.botId ? selectUser(global, payment.botId) : undefined;\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      payment,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"FqyZSYhX\",\"description\":\"DkalJSBt\",\"secondary\":\"xNUKKd8T\",\"separator\":\"kiRrTaj3\",\"topIcon\":\"PKnc2DV2\",\"content\":\"qxOr0JyQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useSelectorSignal from '../../hooks/data/useSelectorSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isRevenueSharing?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  isRevenueSharing,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  const minLevelSignal = useSelectorSignal((global) => global.appConfig?.channelRestrictAdsLevelMin);\n  const minLevelToRestrictAds = useDerivedState(minLevelSignal);\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{lang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={lang('SponsoredMessageAlertLearnMoreUrl')}\n            text={lang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [lang]);\n\n  const revenueSharingAdContent = useMemo(() => {\n    return (\n      <>\n        <div className={styles.topIcon}><Icon name=\"channel\" /></div>\n        <h3 className={styles.title}>{lang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {lang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"lock\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo1Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"revenue-split\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo2Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"nochannel\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo3Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <Separator className={styles.separator} />\n        <h3 className={styles.title}>{renderText(lang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(lang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={lang('PromoteUrl')}\n            text={lang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n  }, [lang, minLevelToRestrictAds]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {isRevenueSharing ? revenueSharingAdContent : regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={onClose}\n      >\n        {lang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 40;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink text={lang('lng_report_sponsored_reported_link')} url={lang('ReportAd.Help_URL')} />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const lang = useOldLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads']['byChatId'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { getPrivateChatUserId, isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"large\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"large\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountChatIds?: string[];\n  accountUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountChatIds,\n  accountUserIds,\n  globalChatIds,\n  globalUserIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = unique([\n      ...localContactIds,\n      ...localChatIds,\n    ]);\n\n    const accountPeerIds = unique([\n      ...(accountChatIds ?? []),\n      ...(accountUserIds ?? []),\n    ].filter((accountPeerId) => !localPeerIds.includes(accountPeerId)));\n\n    return [\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds),\n    ];\n  }, [searchQuery, lang, currentUserId, contactIds, accountChatIds, accountUserIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const ids = unique([...globalChatIds, ...globalUserIds]);\n    const filteredIds = ids.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalChatIds, globalUserIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: accountChatIds, userIds: accountUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountChatIds,\n      accountUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getMessageDocument } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      mediaId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(2), // Skip ChatList and ChannelList, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport Checkbox from '../../../ui/Checkbox';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  shouldHideChatTypes?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onSaveFilter: VoidFunction;\n  isActive?: boolean;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  shouldHideChatTypes,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n  onSaveFilter,\n  isActive,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    setIsTouched(true);\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    setIsTouched(true);\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useOldLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={buildClassName('icon', `icon-${type.icon}`)} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            peerId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll fab-padding-bottom\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <div key=\"header\">\n            {!shouldHideChatTypes && (\n              <>\n                <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('FilterChatTypes')}\n                </h4>\n                {chatTypes.map(renderChatType)}\n                <div className=\"picker-list-divider\" />\n              </>\n            )}\n            <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </div>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { unique } from '../../../../util/iteratees';\n\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Loading from '../../../ui/Loading';\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useOldLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      shouldHideChatTypes={shouldHideChatTypes}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n      onSaveFilter={onSaveFilter}\n      isActive={isActive}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedSelectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition, unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toString().toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\",\"checkbox\":\"obmoCKjY\",\"languages\":\"BccnzXwC\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({ withStars: true })}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useOldLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{lang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{lang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: number;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openPremiumGiftingModal,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadProfilePhotos({ profileId: currentUserId });\n    }\n  }, [currentUserId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            userId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon\" type=\"gold\" size=\"big\" />}\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {lang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">{formatInteger(starsBalance)}</span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumGiftingModal()}\n          >\n            {lang('GiftPremiumGifting')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('lng_settings_ask_ok')}\n        title={lang('AskAQuestion')}\n        text={lang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility, shouldAllowPremium } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    if (shouldAllowPremium) {\n      return lang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? lang('PrivacyMessagesContactsAndPremium')\n                : lang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useOldLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PContacts')} />\n        ) : (\n          lang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PNobody')} />\n        ) : (\n          lang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [lang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return lang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return shouldAllowPremium ? lang('PrivacyPremium') : lang('EditAdminAddUsers');\n    } else if (shouldAllowPremium) {\n      return lang('ContactsAndPremium');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds, privacy?.shouldAllowPremium);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useOldLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    return [settings.shouldAllowPremium ? CUSTOM_PEER_PREMIUM.type : undefined].filter(Boolean);\n  }, [settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(lang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedCategoryTypes, newSelectedContactIds, onScreenSelect, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        categories={withPremiumCategory ? PREMIUM_CATEGORY : undefined}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localUserIds, globalUserIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransition(isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMessageLocalBlobUrl(message))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"lhinieg0\",\"get\":\"wysoV1T4\",\"skeleton\":\"gPqaUijR\",\"transition\":\"Yg6u_MIn\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './ReadTimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  menuSeparatorSize: 'thin' | 'thick';\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu, menuSeparatorSize,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <>\n      <MenuSeparator size={menuSeparatorSize} />\n      <MenuItem icon=\"message-read\" className={styles.item}>\n        <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n          {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n            <>\n              {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n              {!readDate && shouldRenderShowWhen && (\n                <div>\n                  {lang('PmRead')}\n                  <span className={styles.get} onClick={handleOpenModal}>\n                    {lang('PmReadShowWhen')}\n                  </span>\n                </div>\n              )}\n            </>\n          )}\n        </Transition>\n      </MenuItem>\n    </>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        dir={lang.isRtl ? 'rtl' : undefined}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && (\n          <MenuItem icon=\"info\" onClick={onAboutAds}>\n            {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && message.canReport && (\n          <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n            {lang('ReportAd')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && onSponsoredHide && (\n          <>\n            <MenuSeparator />\n            <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {!isSponsoredMessage && (canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            menuSeparatorSize={hasCustomEmoji ? 'thin' : 'thick'}\n            closeContextMenu={onClose}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { MessageListType, TabState } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport {\n  type ApiAvailableReaction,\n  type ApiChatReactions,\n  type ApiMessage,\n  type ApiReaction,\n  type ApiStickerSet,\n  type ApiStickerSetInfo,\n  type ApiThreadInfo,\n  MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads?: TabState['activeDownloads']['byChatId'][number];\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(msg.id);\n      });\n    }\n\n    return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(message.id);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    updateDraftReplyInfo({\n      replyToMsgId: message.id,\n      quoteText: canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined,\n      replyToPeerId: undefined,\n    });\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n        && isOwn\n        && !isMessageUnread\n        && readDateExpiresAt\n        && message.date > Date.now() / 1000 - readDateExpiresAt\n        && !userStatus?.isReadDateRestricted\n        && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    return {\n      threadId,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: NoneToVoidFunction;\n  onReportAd: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onReportAd,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    closeMenu();\n    onReportAd();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage, selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown, selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openBoostStatistics,\n    openGiftPremiumModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [chatId] });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCurrentTextSearch,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectTabState,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dates/dateFormat';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\nimport SavedTagButton from './message/reactions/SavedTagButton';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  query?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  searchTag?: ApiReaction;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  savedTags,\n  searchTag,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    setLocalTextSearchTag,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const tagsRef = useRef<HTMLDivElement>(null);\n\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  const hasQueryData = Boolean(query || searchTag);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const tags = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasTags = Boolean(tags?.length);\n  const areTagsDisabled = hasTags && !isCurrentUserPremium;\n\n  useHorizontalScroll(tagsRef, !hasTags);\n\n  useEffect(() => {\n    if (isActive) loadSavedReactionTags();\n  }, [hasTags, isActive]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (hasQueryData) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleTagClick = useLastCallback((tag: ApiReaction) => {\n    if (areTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    setLocalTextSearchTag({ tag });\n\n    runDebouncedForSearch(searchTextMessagesLocal);\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      {hasTags && (\n        <div\n          ref={tagsRef}\n          className=\"tags-subheader custom-scroll-x no-scrollbar\"\n        >\n          {tags.map((tag) => (\n            <SavedTagButton\n              containerId=\"mobile-search\"\n              key={getReactionKey(tag.reaction)}\n              reaction={tag.reaction}\n              tag={tag}\n              withCount\n              isDisabled={areTagsDisabled}\n              isChosen={isSameReaction(tag.reaction, searchTag)}\n              onClick={handleTagClick}\n            />\n          ))}\n        </div>\n      )}\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {hasQueryData ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, savedTag, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      searchTag: savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(MobileSearchFooter));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiAvailableReaction, ApiChatReactions, ApiReaction } from '../../../../api/types';\n\nimport { getReactionKey, sortReactions } from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiMessageEntity,\n  ApiReaction, ApiReactionCustomEmoji, ApiSticker, ApiStory, ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectIsCurrentUserPremium,\n  selectPeerStory, selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  withCustomReactions,\n  sendAsMessage,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, withCustomReactions]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !withCustomReactions && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      <CustomEmojiPicker\n        chatId={renderedChatId}\n        idPrefix=\"message-emoji-set-\"\n        isHidden={!isOpen || !(withCustomReactions || renderedStoryId)}\n        loadAndPlay={Boolean(isOpen && withCustomReactions)}\n        isReactionPicker\n        className={!withCustomReactions && !renderedStoryId ? styles.hidden : undefined}\n        selectedReactionIds={selectedReactionIds}\n        isTranslucent={isTranslucent}\n        onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n        onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n      />\n      {!withCustomReactions && Boolean(renderedChatId) && (\n        <ReactionPickerLimited\n          chatId={renderedChatId}\n          loadAndPlay={isOpen}\n          onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          selectedReactionIds={selectedReactionIds}\n        />\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    story,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"drop-target\":\"LhhRTsy6\",\"dropTarget\":\"LhhRTsy6\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const [isInvertedMedia, setIsInvertedMedia] = useState(attachmentSettings.isInvertedMedia);\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n      setIsInvertedMedia(attachmentSettings.isInvertedMedia);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail canvas-blur-setup\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [addedSetIds, stickerSetsById, favoriteStickers, recentStickers, chatStickerSetId, lang]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents && !noPopulatedSets && canSendStickers;\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div ref={headerRef} className={headerClassName}>\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(styles.main, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport { UnfreezableMenu } from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <UnfreezableMenu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </UnfreezableMenu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const lang = useOldLang();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className=\"CustomSendMenu with-menu-transitions\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {canSchedule && onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n      {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n        <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n          {lang('SendWhenOnline')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { ANONYMOUS_USER_ID, REPLIES_USER_ID } from '../../config';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessages,\n  selectCurrentTextSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n} from '../../global/selectors';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { debounce } from '../../util/schedulers';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport SavedTagButton from '../middle/message/reactions/SavedTagButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  searchTag?: ApiReaction;\n  totalCount?: number;\n  foundIds?: number[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  savedTags,\n  searchTag,\n  isSavedMessages,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    setLocalTextSearchTag,\n    focusMessage,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const tagsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const tags = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasTags = Boolean(tags?.length);\n  const areTagsDisabled = hasTags && !isCurrentUserPremium;\n\n  useHorizontalScroll(tagsRef, !hasTags);\n\n  useEffect(() => {\n    if (isActive) loadSavedReactionTags();\n  }, [hasTags, isActive]);\n\n  const handleSearchTextMessagesLocal = useLastCallback(() => {\n    runDebouncedForSearch(searchTextMessagesLocal);\n  });\n\n  const handleTagClick = useLastCallback((tag: ApiReaction) => {\n    if (areTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    if (isSameReaction(tag, searchTag)) {\n      setLocalTextSearchTag({ tag: undefined });\n      return;\n    }\n\n    setLocalTextSearchTag({ tag });\n    handleSearchTextMessagesLocal();\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !searchTag) || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const global = getGlobal();\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n\n      const senderPeer = originalSender || messageSender;\n\n      const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n      return {\n        message,\n        senderPeer,\n        hiddenForwardTitle,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, searchTag, viewportIds, messagesById, isSavedMessages, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderPeer, hiddenForwardTitle, onClick,\n  }: {\n    message: ApiMessage;\n    senderPeer?: ApiPeer;\n    hiddenForwardTitle?: string;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          peer={senderPeer}\n          text={hiddenForwardTitle}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            {senderPeer && <FullNameTitle peer={senderPeer} withEmojiStatus />}\n            {!senderPeer && hiddenForwardTitle}\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {hasTags && (\n        <div\n          ref={tagsRef}\n          className=\"search-tags custom-scroll-x no-scrollbar\"\n          key=\"search-tags\"\n        >\n          {tags.map((tag) => (\n            <SavedTagButton\n              containerId=\"local-search\"\n              key={getReactionKey(tag.reaction)}\n              reaction={tag.reaction}\n              tag={tag}\n              withCount\n              isDisabled={areTagsDisabled}\n              isChosen={isSameReaction(tag.reaction, searchTag)}\n              onClick={handleTagClick}\n            />\n          ))}\n        </div>\n      )}\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const messagesById = selectChatMessages(global, chatId);\n    if (!messagesById) {\n      return {};\n    }\n\n    const { query, savedTag, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n      isSavedMessages,\n      savedTags,\n      searchTag: savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  canPost?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  canPost,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          {canPost && (\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isSignaturesShown}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      canPost: getHasAdminRight(chat, 'postMessages'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || chat?.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useOldLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n    botName?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      multiline={isMultiline}\n      narrow={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePrevious(step, true);\n  const prevRequestId = usePrevious(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n      botId,\n      type,\n    } = selectTabState(global).payment;\n\n    const countryList = global.countryList.general;\n\n    // Handled in `StarPaymentModal`\n    if (type === 'stars') {\n      return {\n        countryList,\n      };\n    }\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"positive\":\"ziem0hIt\",\"negative\":\"w5IBroJ0\",\"header\":\"LGfGeGBe\",\"amount\":\"qw8_2l5a\",\"title\":\"jUEywRxM\",\"description\":\"fqcBAivG\",\"tid\":\"Ryt8HXRa\",\"footer\":\"YxElnkFc\",\"starsBackground\":\"gqB7YL11\",\"copyIcon\":\"VjTcIW6A\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiReceipt, ApiReceiptRegular, ApiShippingAddress,\n  ApiStarsTransactionPeer,\n  ApiUser,\n} from '../../api/types';\n\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../global/helpers/payments';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatDateTimeToString } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport StarIcon from '../common/icons/StarIcon';\nimport SafeLink from '../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../modals/common/TableInfoModal';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\nimport styles from './ReceiptModal.module.scss';\n\nimport StarsBackground from '../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceipt;\n  bot?: ApiUser;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen, receipt, bot, onClose,\n}) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const starModalData = useMemo(() => {\n    if (receipt?.type !== 'stars') return undefined;\n\n    const customPeer = (receipt.peer && receipt.peer.type !== 'peer' && buildStarsTransactionCustomPeer(receipt.peer))\n      || undefined;\n\n    const botId = receipt.botId || (receipt.peer?.type === 'peer' ? receipt.peer.id : undefined);\n    const toName = receipt.peer && lang(getStarsPeerTitleKey(receipt.peer));\n\n    const title = receipt.title || (customPeer ? lang(customPeer.titleKey) : undefined);\n\n    const header = (\n      <div className={styles.header}>\n        <img className={styles.starsBackground} src={StarsBackground} alt=\"\" draggable={false} />\n        {title && <h1 className={styles.title}>{title}</h1>}\n        <p className={styles.description}>{receipt.text}</p>\n        <p className={styles.amount}>\n          <span className={buildClassName(styles.amount, receipt.totalAmount < 0 ? styles.negative : styles.positive)}>\n            {formatStarsTransactionAmount(receipt.totalAmount)}\n          </span>\n          <StarIcon type=\"gold\" size=\"big\" />\n        </p>\n      </div>\n    );\n\n    const tableData = [\n      [\n        lang(receipt.totalAmount < 0 ? 'Stars.Transaction.To' : 'Stars.Transaction.Via'),\n        botId ? { chatId: botId } : toName || '',\n      ],\n      [lang('Stars.Transaction.Id'), (\n        <span\n          className={styles.tid}\n          onClick={() => {\n            copyTextToClipboard(receipt.transactionId);\n            showNotification({\n              message: lang('StarsTransactionIDCopied'),\n            });\n          }}\n        >\n          {receipt.transactionId}\n          <Icon className={styles.copyIcon} name=\"copy\" />\n        </span>\n      )],\n      [lang('Stars.Transaction.Date'), formatDateTimeToString(receipt.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footerText = lang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={lang('StarsTOSLink')} text={lang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n      avatarPeer: !receipt.photo ? (bot || customPeer) : undefined,\n    };\n  }, [lang, receipt, bot]);\n\n  if (receipt?.type === 'regular') {\n    return <ReceiptModalRegular isOpen={isOpen} receipt={receipt} onClose={onClose} />;\n  }\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      header={starModalData?.header}\n      tableData={starModalData?.tableData}\n      footer={starModalData?.footer}\n      headerAvatarWebPhoto={receipt?.photo}\n      headerAvatarPeer={starModalData?.avatarPeer}\n      buttonText={lang('OK')}\n      onClose={onClose}\n    />\n  );\n};\n\nfunction ReceiptModalRegular({\n  isOpen, receipt, onClose,\n}: {\n  isOpen?: boolean;\n  receipt: ApiReceiptRegular;\n  onClose: NoneToVoidFunction;\n}) {\n  const {\n    credentialsTitle,\n    currency,\n    prices,\n    tipAmount,\n    totalAmount,\n    info,\n    photo,\n    shippingMethod,\n    shippingPrices,\n    text,\n    title,\n  } = receipt;\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice = useMemo(() => {\n    return {\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    const botId = receipt?.type === 'stars' && (receipt.botId || (receipt.peer?.type === 'peer' && receipt.peer.id));\n    const bot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      receipt,\n      bot,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id), [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  if (!userIds) return undefined;\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <Picker\n            className={styles.userPicker}\n            itemIds={userIds!}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            isRoundCheckbox\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["createGhost","source","origin","ghost","document","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","message","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","video","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","useMediaProps","_ref","mediaId","avatarOwner","delay","photo","getMessagePhoto","undefined","actionPhoto","getMessageActionPhoto","getMessageVideo","webPagePhoto","getMessageWebPagePhoto","webPageVideo","getMessageWebPageVideo","isDocumentPhoto","isMessageDocumentPhoto","isDocumentVideo","isMessageDocumentVideo","videoSize","getMessageFileSize","avatarMedia","photos","isVideoAvatar","Boolean","isVideo","isPhoto","isGif","isFromSharedMedia","isFromSearch","getMediaHash","useMemo","isFull","getVideoAvatarMediaHash","getChatAvatarHash","getMessageMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMessageMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","length","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","useBlurSync","getMessageMediaThumbDataUri","bestData","isLocal","fileName","getMessageFileName","hasVideoAvatar","dimensions","getMessageDocument","mediaSize","getPhotoFullDimensions","getVideoDimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","avatarPhoto","getZoomChange","setZoomChange","useZoomChange","memo","withGlobal","global","_ref4","isSchedule","threadId","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","chat","selectChat","chatId","contactName","isUserId","getUserFirstOrLastName","selectUser","getPrivateChatUserId","isChatWithBot","selectBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","isOpen","album","onConfirm","onClose","deleteMessages","deleteScheduledMessages","getActions","handleDeleteMessageForAll","useCallback","messageIds","messages","map","_ref2","shouldDeleteForAll","handleDeleteMessageForSelf","_ref3","lang","useOldLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","renderText","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","canUpdateMedia","currentMessageList","isDownloading","selectIsDownloading","isProtected","selectIsMessageProtected","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","isCurrentAvatar","avatarHash","canUpdate","messageListType","type","avatarOwnerId","canReport","selectMedia","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMessageMedia","cancelMessageMediaDownload","updateProfilePhoto","updateChatPhoto","downloadProgress","handleDownloadClick","useLastCallback","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","MenuButton","onTrigger","round","ariaLabel","renderDeleteModals","DeleteMessageModal","DeleteProfilePhotoModal","menuItems","isForwardingAllowed","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","index","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","params","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","square","VideoPlayerControls","ownProps","selectTabState","mediaViewer","selectChatMessage","senderId","selectScheduledMessage","props","withAnimation","onFooterClick","isMoving","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","content","action","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","loadMoreMediaIfNeeded","getMediaId","isLoadingMoreMedia","isSynced","rest","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveMediaId","setActiveMediaId","activeMediaIdRef","isScaled","activeMediaId","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectMediaDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","mId","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","nextMediaId","prevMediaId","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","isAvatar","sender","selectPeer","selectSender","isFallbackAvatar","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","senderTitle","getSenderTitle","Avatar","peer","formatMediaDateTime","date","shouldSkipHistoryAnimations","withDynamicLoading","selectPerformanceSettingsValue","currentUserId","chatMessages","isChatWithSelf","selectIsChatWithSelf","user","isChatAdmin","avatarOwnerFallbackPhoto","selectUserFullInfo","fallbackPhoto","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectionIds","currentSearch","selectCurrentChatMediaSearch","isLoading","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","media","selectOutlyingListByMessageId","selectListedIds","openMediaViewer","openForwardMenu","searchChatMediaMessages","animationKey","prevSenderId","usePrevious","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","singleMediaId","mediaIds","p","i","getChatMediaMessageIds","selectedMediaIndex","indexOf","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevAvatarOwner","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","mediaIdRef","useStateRef","handleFooterClick","currentMediaId","handleForward","fromChatId","forceOnHeavyAnimation","captureEscKeyListener","stopCurrentAudio","mediaIdsRef","currentMediaMessageId","fromId","mIds","handleBeforeDelete","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","peerId","MediaViewerSlides","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","tabState","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","Picker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","forceShowSelf","onSelectedIdsChange","onFilterChange","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isChannel","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","isChatChannel","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransition","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","onStart","isLongPressActive","isPressed","timerId","canProcessEvent","cancel","useLongPress","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","parts","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","topicsResult","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","handleTopicClick","topicId","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","clickArg","TopicIcon","letterClassName","Loading","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","isSelf","toChatId","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","openUrl","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","CalendarModal","userStatus","selectUserStatus","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","isStarPaymentModalOpen","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","isRemoveModalOpen","openRemoveModal","hideRemoveModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleToggleClick","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","shortName","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","count","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","options","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","gifts","forUserIds","isCompleted","giftPremiumModal","boostPerSentGift","boostsPerSentGift","BOOST_PER_SENT_GIFT","closeGiftPremiumModal","selectedMonthOption","setSelectedMonthOption","selectedUserQuantity","giftingUserList","selectedGift","gift","filteredGifts","fullMonthlyGiftAmount","basicGift","handlePremiumClick","userNameList","modalDialog","avatars","headerText","center","part","subpart","boostIcon","subscriptionOptions","match","premiumFeatures","Link","isPrimary","renderPremiumFeaturesLink","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","noScrollRestore","isCountryList","entityType","statusesById","userStatusesById","isSuperGroup","members","adminMembersById","chatFullInfo","selectChatFullInfo","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","pendingChannelId","setPendingChannelId","channelsIds","adminIds","memberIds","sortUserIds","displayedMembersIds","filteredContactIds","isUserBot","displayedChannelIds","foundChannelIds","contactId","handleSendIdList","confirmPrivateLinkChannelSelection","prevIds","handleSelectedMemberIdsChange","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","isLink","onClickAction","userNames","selectedMemberIds","displayText","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isEntityPickerModalOpen","openEntityPickerModal","closeEntityPickerModal","setEntityType","TYPE_OPTIONS","GiveawayUsersRound","customExpireDate","setCustomExpireDate","selectedUserCount","setSelectedUserCount","selectedGiveawayOption","setGiveawayOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","selectedCountriesIds","setSelectedCountriesIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","boostQuantity","isRandomUsers","SUBSCRIBER_OPTIONS","subLabel","monthQuantity","userCountOptions","uniqueUserCounts","Set","quantity","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleUserCountChange","newValue","handlePrizeDescriptionChange","handleAdd","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSetIdsListChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","filteredChannelIds","deleteParticipantsHandler","iconClassName","RadioGroup","subLabelClassName","formatDateTimeToString","CountryPickerModal","AppendEntityPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","closePremiumGiftingModal","openGiftPremiumModal","displayedUserIds","handleSelectedUserIdsChange","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerPreviewHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","accessHash","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isSavedMessages","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","setEmojiStatus","menuRef","isCustomEmoji","hasEffect","isLocked","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","item","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","isInstalled","installedDate","isArchived","canCut","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","has","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","cleanRecentReactions","some","topReaction","cleanAvailableReactions","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","unshift","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","tableData","headerImageUrl","headerAvatarPeer","headerAvatarWebPhoto","onButtonClick","withAvatar","hasAbsoluteCloseButton","webPhoto","avatar","logo","table","row","cell","PickerSelectedItem","chatItem","chatMessage","messageSender","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","isFromGiveaway","TableInfoModal","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","balance","smallerText","balanceBottom","StarIcon","formatInteger","transaction","getStarsReceipt","stars","isRefund","transactionPeer","useSelector","selectOptionalPeer","avatarPeer","CUSTOM_PEER_PREMIUM","customPeer","buildStarsTransactionCustomPeer","titleKey","subtitleKey","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS","StarTopupOption","starsCount","optionTop","stackedStars","stackedStar","optionBottom","originPayment","starsBalanceState","originPaymentBot","closeStarsBalanceModal","loadStarsTransactions","history","topupOptions","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","selectedTabIndex","setSelectedTabIndex","productStarsPrice","invoice","starsNeeded","originBotName","shouldShowTransactions","all","transactions","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","tosText","SafeLink","BalanceBlock","modalBalance","hiddenHeader","starHeaderText","StarLogo","logoBackground","StarsBackground","moreOptions","noForcedUpperCase","secondaryInfo","TabList","big","activeTab","tabs","onSwitchTab","renderCount","shouldRestoreHeight","noFastList","TransactionItem","closePaymentModal","openStarsBalanceModal","sendStarPaymentForm","markLoading","unmarkLoading","botName","starsText","handlePayment","price","paymentContent","paymentImages","paymentPhoto","paymentImageBackground","paymentButton","paymentAmount","paymentButtonStar","isRevenueSharing","minLevelSignal","useSelectorSignal","channelRestrictAdsLevelMin","minLevelToRestrictAds","regularAdContent","revenueSharingAdContent","isStatic","Separator","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","subtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","isPrivateChat","isGroup","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isForwardModalOpen","isModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","handleCopy","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","userName","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","LOCAL_TGS_URLS","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","flatMap","peerReactions","reactor","seenByUser","FullNameTitle","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","formatCurrencyAsString","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","activeDownloads","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","shouldReplaceHistory","useSelectWithEnter","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","openThread","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","storyViewerOrigin","MuteChatModal","ChatFolderModal","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","LeftSearchResultChat","isChannelList","globalResults","localResults","globalChatIds","globalUserIds","accountChatIds","accountUserIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localContactIds","localPeerIds","accountPeerIds","accountPeerId","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","itemSelector","Media","TABS","GlobalSearchContent","ChannelList","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","selectedChatTypes","shouldHideChatTypes","onSelectedChatTypesChange","onSaveFilter","openLimitReachedModal","chatTypes","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","shouldMinimize","isTouched","setIsTouched","handleItemClick","splice","handleChatTypeClick","newSelectedChatTypes","handleFilterChange","selectedType","typeKey","isMinimized","canClose","withChatType","dispatch","chatFilter","selectedChatIds","selectChatFilters","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","SettingsFoldersChatsPicker","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","renderChatType","ShowMoreButton","itemName","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","onDisabledClick","isRoundCheckbox","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","language","doNotTranslate","displayedOptions","setDisplayedOptions","otherLanguages","unselected","newDoNotTranslate","v","filteredDisplayedOptions","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","rightIcon","onClickLabel","loadingOption","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","shouldDisplayStars","sessionCount","loadProfilePhotos","openSupportChat","openPremiumGiftingModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","prev","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","getCurrentPrivacySettings","isAllowList","withPremiumCategory","setPrivacySettings","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","categories","selectedCategories","onSelectedCategoriesChange","config","selectedReaction","defaultReaction","setDefaultReaction","isInactive","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","CheckboxGroup","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","menuSeparatorSize","openPrivacySettingsNoticeModal","readDate","MenuSeparator","handleOpenModal","isReactionPickerOpen","enabledReactions","maxUniqueReactions","anchor","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","noTransition","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAds","onSponsoredHide","onSponsorInfo","onSponsoredReport","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessageContact","canImageBeCopied","hasMessageLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","withScroll","handleOpenMessageReactionPicker","bubbleStyle","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","inline","withWrap","sponsorInfo","ReadTimeMenuItem","detectedLanguage","selectActiveDownloads","seenByExpiresAt","seenByMaxChatMembers","readDateExpiresAt","noOptions","isOwn","isOwnMessage","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","setIsMenuOpen","setIsDeleteModalOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","handleDelete","handleReport","closeMenu","closePinModal","handleReply","replyToMsgId","quoteText","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","onReportAd","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","chatBot","REPLIES_USER_ID","userFullInfo","fullInfo","canGiftPremium","premiumGifts","canCreateTopic","isCreator","isUserRightBanned","getHasAdminRight","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","cmd","deleteTitle","DeleteChatModal","isSavedDialog","runDebouncedForSearch","savedTag","selectCurrentTextSearch","savedTags","savedReactionTags","isHistoryCalendarOpen","searchTag","setLocalTextSearchQuery","setLocalTextSearchTag","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","loadSavedReactionTags","tagsRef","focusedIndex","setFocusedIndex","hasQueryData","visualViewport","mainEl","pageTop","blur","tags","hasTags","areTagsDisabled","handleMessageSearchQueryChange","newQuery","handleTagClick","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","SavedTagButton","withCount","isChosen","getDayStartAt","isTouchScreen","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areCustomReactionsAllowed","areCustomAllowed","withCustomReactions","closeReactionPicker","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","isFree","customEmojiMessage","buildCustomEmojiHtml","isReaction","chosenOrder","backdropExcludedSelector","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","isSingle","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","setIsInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","focusInput","addNewOption","requestNextMutation","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","withThumb","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","favorite","chatStickerSetId","recentStickers","selectShouldLoopStickers","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","StickerPicker","GifPicker","SymbolMenuFooter","mobileClassName","UnfreezableMenu","onMouseEnter","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","messagesById","handleSearchTextMessagesLocal","viewportResults","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","senderPeer","hiddenForwardTitle","hiddenUserName","foundResult","isOnTop","preloadBackwards","teactOrderKey","LastMessageMeta","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","msgId","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","setIsLoading","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","isSignaturesShown","canChangeInfo","canInvite","exportedInvites","updateChat","toggleSignatures","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleToggleSignatures","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","onChatMemberSelect","canAddNewAdmins","adminRights","addAdmins","adminMembers","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","bannedRights","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","canBanUsers","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","defaultBannedRights","sendStickers","sendGifs","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","isNewAdmin","selectedUserId","updateChatAdmin","permissions","setPermissions","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handlePermissionChange","handleSavePermissions","handleDismissAdmin","getControlIsDisabled","memberStatus","handleCustomTitleChange","changeInfo","blocking","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","inviteUsers","pinMessages","manageCall","manageTopics","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","havePermissionChanged","setHavePermissionChanged","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","checkMedia","mediaPermissions","sendMedia","assign","embedLinks","sendPlain","sendMessages","updateChatDefaultBannedRights","shouldDisablePermissionForPublicGroup","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isMediaDropdownOpen","setIsMediaDropdownOpen","handleOpenMediaDropdown","handleDisabledClick","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","sendPhotos","sendVideos","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","reactionsOptions","handleSaveReactions","availableActiveReactions","handleReactionsOptionChange","handleReactionChange","local","personalPhoto","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","defaultName","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","passwordHint","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","ReceiptModalRegular","receipt","credentialsTitle","totalAmount","fullAddress","starModalData","toName","getStarsPeerTitleKey","transactionId","footerTextParts","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedIds","lockedUnselectedSubtitle","isViewOnly","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","isRound","RoundVideo","onStop","renderMedia","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","hardwareConcurrency","instances","IS_TEST","Worker","createConnector"],"sourceRoot":""}