{"version":3,"file":"3246.b4f537eb074a0a938bae.js","mappings":"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CA,iDACA,kDACA,0EACA,4EACA,oEACA,yEACA,kBACA,oBACA,+BACA,mBACA,sBACA,8BACA,gCACA,6BACA,YACA,aACA,mBACA,aACA,kBACA,gBACA,YACA,cACA,iBACA,iBACA,yBACA,aACA,aACA,aACA,YACA,YACA,YACA,yBACA,kBACA,eACA,YACA,gBACA,YACA,kBACA,oBACA,4BACA,2BACA,gCACA,kBACA,mBACA,YACA,aACA,gCACA,WACA,WACA,kBACA,eACA,cACA,yBACA,kBACA,mBACA,wBACA,iCACA,wCACA,oCACA,oBACA,6BACA,oBACA,yBACA,qBACA,oBACA,oBACA,kBACA,aACA,wBACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,kBACA,iCACA,aACA,sBACA,aACA,sBACA,aACA,YACA,oBACA,mBACA,gBACA,aACA,WACA,oBACA,+BACA,cACA,4BACA,4BACA,cACA,yBACA,cACA,aACA,sBACA,mBACA,oBACA,oBACA,wBACA,uBACA,cACA,cACA,2BACA,YACA,aACA,cACA,aACA,aACA,aACA,+BACA,aACA,+BACA,4BACA,qBACA,YACA,8BACA,YACA,YACA,mBACA,YACA,6BACA,gBACA,wBACA,sBACA,oBACA,qBACA,+BACA,mBACA,6BACA,6BACA,wBACA,0CACA,+BACA,oBACA,wEACA,uEACA,0EACA,oDACA,mDACA,0DACA,2DACA,8CACA,uDACA,iDACA,mDACA,mDACA,yDACA,6DACA,2BACA,yEC9VD,MAAMC,GAAiB,CACnBC,UAAU,GAERC,GAAa,CACfC,KAAMH,GACNI,MAAOJ,GACPK,KAAML,GACNM,MAAON,GACPO,OAAQP,GACRQ,QAAS,CAAEP,UAAU,EAAMQ,QAAQ,GACnCC,YAAaV,GACbW,MAAOX,GACPY,KAAMZ,GACNa,aAAcb,GACdc,aAAcd,GACde,YAAaf,GACbgB,QAAS,CAAEf,UAAU,EAAMQ,QAAQ,GACnCQ,MAAO,CAAEhB,UAAU,EAAMQ,QAAQ,GACjCS,QAAS,CAAEjB,UAAU,EAAMQ,QAAQ,GACnCU,SAAU,CAAElB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","sources":["webpack://telegram-t/./node_modules/ieee754/index.js","webpack://telegram-t/./node_modules/fflate/esm/browser.js","webpack://telegram-t/./node_modules/@tokenizer/inflate/lib/ZipToken.js","webpack://telegram-t/./node_modules/@tokenizer/inflate/lib/index.js","webpack://telegram-t/./node_modules/file-type/util.js","webpack://telegram-t/./node_modules/file-type/core.js","webpack://telegram-t/./node_modules/file-type/supported.js","webpack://telegram-t/./node_modules/music-metadata/lib/common/GenericTagTypes.js","webpack://telegram-t/./node_modules/music-metadata/lib/common/GenericTagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/id3v1/ID3v1TagMap.js","webpack://telegram-t/./node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js","webpack://telegram-t/./node_modules/music-metadata/lib/id3v2/ID3v24TagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/asf/AsfTagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/id3v2/ID3v22TagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/apev2/APEv2TagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/mp4/MP4TagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/ogg/vorbis/VorbisTagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/riff/RiffInfoTagMap.js","webpack://telegram-t/./node_modules/music-metadata/lib/matroska/MatroskaTagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/aiff/AiffTagMap.js","webpack://telegram-t/./node_modules/music-metadata/lib/common/CombinedTagMapper.js","webpack://telegram-t/./node_modules/music-metadata/lib/common/MetadataCollector.js","webpack://telegram-t/./node_modules/music-metadata/lib/lrc/LyricsParser.js","webpack://telegram-t/./node_modules/music-metadata/lib/mpeg/MpegLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/apev2/Apev2Loader.js","webpack://telegram-t/./node_modules/music-metadata/lib/asf/AsfLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/dsdiff/DsdiffLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/aiff/AiffLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/dsf/DsfLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/flac/FlacLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/matroska/MatroskaLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/mp4/Mp4Loader.js","webpack://telegram-t/./node_modules/music-metadata/lib/musepack/MusepackLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/ogg/OggLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/wavpack/WavPackLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/wav/WaveLoader.js","webpack://telegram-t/./node_modules/music-metadata/lib/ParserFactory.js","webpack://telegram-t/./node_modules/music-metadata/lib/lyrics3/Lyrics3.js","webpack://telegram-t/./node_modules/music-metadata/lib/core.js","webpack://telegram-t/./node_modules/token-types/lib/index.js","webpack://telegram-t/./node_modules/music-metadata/lib/common/FourCC.js","webpack://telegram-t/./node_modules/ms/index.js","webpack://telegram-t/./node_modules/music-metadata/lib/apev2/APEv2Token.js","webpack://telegram-t/./node_modules/music-metadata/lib/apev2/APEv2Parser.js","webpack://telegram-t/./node_modules/debug/src/browser.js","webpack://telegram-t/./node_modules/debug/src/common.js","webpack://telegram-t/./node_modules/music-metadata/lib/matroska/types.js","webpack://telegram-t/./node_modules/music-metadata/lib/id3v2/ID3v2Token.js","webpack://telegram-t/./node_modules/media-typer/index.js","webpack://telegram-t/./node_modules/music-metadata/lib/common/Util.js","webpack://telegram-t/./node_modules/content-type/index.js","webpack://telegram-t/./node_modules/music-metadata/lib/ParseError.js","webpack://telegram-t/./node_modules/music-metadata/lib/id3v1/ID3v1Parser.js","webpack://telegram-t/./node_modules/music-metadata/lib/common/BasicParser.js","webpack://telegram-t/./node_modules/uint8array-extras/index.js","webpack://telegram-t/./node_modules/peek-readable/lib/Errors.js","webpack://telegram-t/./node_modules/peek-readable/lib/AbstractStreamReader.js","webpack://telegram-t/./node_modules/peek-readable/lib/WebStreamReader.js","webpack://telegram-t/./node_modules/peek-readable/lib/WebStreamByobReader.js","webpack://telegram-t/./node_modules/peek-readable/lib/WebStreamDefaultReader.js","webpack://telegram-t/./node_modules/strtok3/lib/AbstractTokenizer.js","webpack://telegram-t/./node_modules/strtok3/lib/ReadStreamTokenizer.js","webpack://telegram-t/./node_modules/strtok3/lib/BufferTokenizer.js","webpack://telegram-t/./node_modules/strtok3/lib/core.js","webpack://telegram-t/./node_modules/peek-readable/lib/WebStreamReaderFactory.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","/**\n * Ref https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\n */\nimport { UINT16_LE, UINT32_LE } from \"token-types\";\nexport const Signature = {\n    LocalFileHeader: 0x04034b50,\n    DataDescriptor: 0x08074b50,\n    CentralFileHeader: 0x02014b50,\n    EndOfCentralDirectory: 0x06054b50\n};\nexport const DataDescriptor = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 6);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            compressedSize: UINT32_LE.get(array, 8),\n            uncompressedSize: UINT32_LE.get(array, 12),\n        };\n    }, len: 16\n};\n/**\n * First part of the ZIP Local File Header\n * Offset | Bytes| Description\n * -------|------+-------------------------------------------------------------------\n *      0 |    4 | Signature (0x04034b50)\n *      4 |    2 | Minimum version needed to extract\n *      6 |    2 | Bit flag\n *      8 |    2 | Compression method\n *     10 |    2 | File last modification time (MS-DOS format)\n *     12 |    2 | File last modification date (MS-DOS format)\n *     14 |    4 | CRC-32 of uncompressed data\n *     18 |    4 | Compressed size\n *     22 |    4 | Uncompressed size\n *     26 |    2 | File name length (n)\n *     28 |    2 | Extra field length (m)\n *     30 |    n | File name\n * 30 + n |    m | Extra field\n */\nexport const LocalFileHeaderToken = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 6);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            minVersion: UINT16_LE.get(array, 4),\n            dataDescriptor: !!(flags & 0x0008),\n            compressedMethod: UINT16_LE.get(array, 8),\n            compressedSize: UINT32_LE.get(array, 18),\n            uncompressedSize: UINT32_LE.get(array, 22),\n            filenameLength: UINT16_LE.get(array, 26),\n            extraFieldLength: UINT16_LE.get(array, 28),\n            filename: null\n        };\n    }, len: 30\n};\n/**\n * 4.3.16  End of central directory record:\n *  end of central dir signature (0x06064b50)                                      4 bytes\n *  number of this disk                                                            2 bytes\n *  number of the disk with the start of the central directory                     2 bytes\n *  total number of entries in the central directory on this disk                  2 bytes\n *  total number of entries in the size of the central directory                   2 bytes\n *  sizeOfTheCentralDirectory                                                      4 bytes\n *  offset of start of central directory with respect to the starting disk number  4 bytes\n *  .ZIP file comment length                                                       2 bytes\n *  .ZIP file comment       (variable size)\n */\nexport const EndOfCentralDirectoryRecordToken = {\n    get(array) {\n        return {\n            signature: UINT32_LE.get(array, 0),\n            nrOfThisDisk: UINT16_LE.get(array, 4),\n            nrOfThisDiskWithTheStart: UINT16_LE.get(array, 6),\n            nrOfEntriesOnThisDisk: UINT16_LE.get(array, 8),\n            nrOfEntriesOfSize: UINT16_LE.get(array, 10),\n            sizeOfCd: UINT32_LE.get(array, 12),\n            offsetOfStartOfCd: UINT32_LE.get(array, 16),\n            zipFileCommentLength: UINT16_LE.get(array, 20),\n        };\n    }, len: 22\n};\n/**\n * File header:\n *    central file header signature   4 bytes   0 (0x02014b50)\n *    version made by                 2 bytes   4\n *    version needed to extract       2 bytes   6\n *    general purpose bit flag        2 bytes   8\n *    compression method              2 bytes  10\n *    last mod file time              2 bytes  12\n *    last mod file date              2 bytes  14\n *    crc-32                          4 bytes  16\n *    compressed size                 4 bytes  20\n *    uncompressed size               4 bytes  24\n *    file name length                2 bytes  28\n *    extra field length              2 bytes  30\n *    file comment length             2 bytes  32\n *    disk number start               2 bytes  34\n *    internal file attributes        2 bytes  36\n *    external file attributes        4 bytes  38\n *    relative offset of local header 4 bytes  42\n */\nexport const FileHeader = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 8);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            minVersion: UINT16_LE.get(array, 6),\n            dataDescriptor: !!(flags & 0x0008),\n            compressedMethod: UINT16_LE.get(array, 10),\n            compressedSize: UINT32_LE.get(array, 20),\n            uncompressedSize: UINT32_LE.get(array, 24),\n            filenameLength: UINT16_LE.get(array, 28),\n            extraFieldLength: UINT16_LE.get(array, 30),\n            fileCommentLength: UINT16_LE.get(array, 32),\n            relativeOffsetOfLocalHeader: UINT32_LE.get(array, 42),\n            filename: null\n        };\n    }, len: 46\n};\n","import { StringType, UINT32_LE } from 'token-types';\nimport { decompressSync } from 'fflate';\nimport initDebug from 'debug';\nimport { DataDescriptor, EndOfCentralDirectoryRecordToken, FileHeader, LocalFileHeaderToken, Signature } from \"./ZipToken.js\";\nfunction signatureToArray(signature) {\n    const signatureBytes = new Uint8Array(UINT32_LE.len);\n    UINT32_LE.put(signatureBytes, 0, signature);\n    return signatureBytes;\n}\nconst debug = initDebug('tokenizer:inflate');\nconst syncBufferSize = 256 * 1024;\nconst ddSignatureArray = signatureToArray(Signature.DataDescriptor);\nconst eocdSignatureBytes = signatureToArray(Signature.EndOfCentralDirectory);\nexport class ZipHandler {\n    constructor(tokenizer) {\n        this.tokenizer = tokenizer;\n        this.syncBuffer = new Uint8Array(syncBufferSize);\n    }\n    async isZip() {\n        return await this.peekSignature() === Signature.LocalFileHeader;\n    }\n    peekSignature() {\n        return this.tokenizer.peekToken(UINT32_LE);\n    }\n    async findEndOfCentralDirectoryLocator() {\n        const randomReadTokenizer = this.tokenizer;\n        const chunkLength = Math.min(16 * 1024, randomReadTokenizer.fileInfo.size);\n        const buffer = this.syncBuffer.subarray(0, chunkLength);\n        await this.tokenizer.readBuffer(buffer, { position: randomReadTokenizer.fileInfo.size - chunkLength });\n        // Search the buffer from end to beginning for EOCD signature\n        // const signature = 0x06054b50;\n        for (let i = buffer.length - 4; i >= 0; i--) {\n            // Compare 4 bytes directly without calling readUInt32LE\n            if (buffer[i] === eocdSignatureBytes[0] &&\n                buffer[i + 1] === eocdSignatureBytes[1] &&\n                buffer[i + 2] === eocdSignatureBytes[2] &&\n                buffer[i + 3] === eocdSignatureBytes[3]) {\n                return randomReadTokenizer.fileInfo.size - chunkLength + i;\n            }\n        }\n        return -1;\n    }\n    async readCentralDirectory() {\n        if (!this.tokenizer.supportsRandomAccess()) {\n            debug('Cannot reading central-directory without random-read support');\n            return;\n        }\n        debug('Reading central-directory...');\n        const pos = this.tokenizer.position;\n        const offset = await this.findEndOfCentralDirectoryLocator();\n        if (offset > 0) {\n            debug('Central-directory 32-bit signature found');\n            const eocdHeader = await this.tokenizer.readToken(EndOfCentralDirectoryRecordToken, offset);\n            const files = [];\n            this.tokenizer.setPosition(eocdHeader.offsetOfStartOfCd);\n            for (let n = 0; n < eocdHeader.nrOfEntriesOfSize; ++n) {\n                const entry = await this.tokenizer.readToken(FileHeader);\n                if (entry.signature !== Signature.CentralFileHeader) {\n                    throw new Error('Expected Central-File-Header signature');\n                }\n                entry.filename = await this.tokenizer.readToken(new StringType(entry.filenameLength, 'utf-8'));\n                await this.tokenizer.ignore(entry.extraFieldLength);\n                await this.tokenizer.ignore(entry.fileCommentLength);\n                files.push(entry);\n                debug(`Add central-directory file-entry: n=${n + 1}/${files.length}: filename=${files[n].filename}`);\n            }\n            this.tokenizer.setPosition(pos);\n            return files;\n        }\n        this.tokenizer.setPosition(pos);\n    }\n    async unzip(fileCb) {\n        const entries = await this.readCentralDirectory();\n        if (entries) {\n            // Use Central Directory to iterate over files\n            return this.iterateOverCentralDirectory(entries, fileCb);\n        }\n        // Scan Zip files for local-file-header\n        let stop = false;\n        do {\n            const zipHeader = await this.readLocalFileHeader();\n            if (!zipHeader)\n                break;\n            const next = fileCb(zipHeader);\n            stop = !!next.stop;\n            let fileData = undefined;\n            await this.tokenizer.ignore(zipHeader.extraFieldLength);\n            if (zipHeader.dataDescriptor && zipHeader.compressedSize === 0) {\n                const chunks = [];\n                let len = syncBufferSize;\n                debug('Compressed-file-size unknown, scanning for next data-descriptor-signature....');\n                let nextHeaderIndex = -1;\n                while (nextHeaderIndex < 0 && len === syncBufferSize) {\n                    len = await this.tokenizer.peekBuffer(this.syncBuffer, { mayBeLess: true });\n                    nextHeaderIndex = indexOf(this.syncBuffer.subarray(0, len), ddSignatureArray);\n                    const size = nextHeaderIndex >= 0 ? nextHeaderIndex : len;\n                    if (next.handler) {\n                        const data = new Uint8Array(size);\n                        await this.tokenizer.readBuffer(data);\n                        chunks.push(data);\n                    }\n                    else {\n                        // Move position to the next header if found, skip the whole buffer otherwise\n                        await this.tokenizer.ignore(size);\n                    }\n                }\n                debug(`Found data-descriptor-signature at pos=${this.tokenizer.position}`);\n                if (next.handler) {\n                    await this.inflate(zipHeader, mergeArrays(chunks), next.handler);\n                }\n            }\n            else {\n                if (next.handler) {\n                    debug(`Reading compressed-file-data: ${zipHeader.compressedSize} bytes`);\n                    fileData = new Uint8Array(zipHeader.compressedSize);\n                    await this.tokenizer.readBuffer(fileData);\n                    await this.inflate(zipHeader, fileData, next.handler);\n                }\n                else {\n                    debug(`Ignoring compressed-file-data: ${zipHeader.compressedSize} bytes`);\n                    await this.tokenizer.ignore(zipHeader.compressedSize);\n                }\n            }\n            debug(`Reading data-descriptor at pos=${this.tokenizer.position}`);\n            if (zipHeader.dataDescriptor) {\n                // await this.tokenizer.ignore(DataDescriptor.len);\n                const dataDescriptor = await this.tokenizer.readToken(DataDescriptor);\n                if (dataDescriptor.signature !== 0x08074b50) {\n                    throw new Error(`Expected data-descriptor-signature at position ${this.tokenizer.position - DataDescriptor.len}`);\n                }\n            }\n        } while (!stop);\n    }\n    async iterateOverCentralDirectory(entries, fileCb) {\n        for (const fileHeader of entries) {\n            const next = fileCb(fileHeader);\n            if (next.handler) {\n                this.tokenizer.setPosition(fileHeader.relativeOffsetOfLocalHeader);\n                const zipHeader = await this.readLocalFileHeader();\n                if (zipHeader) {\n                    await this.tokenizer.ignore(zipHeader.extraFieldLength);\n                    const fileData = new Uint8Array(fileHeader.compressedSize);\n                    await this.tokenizer.readBuffer(fileData);\n                    await this.inflate(zipHeader, fileData, next.handler);\n                }\n            }\n            if (next.stop)\n                break;\n        }\n    }\n    inflate(zipHeader, fileData, cb) {\n        if (zipHeader.compressedMethod === 0) {\n            return cb(fileData);\n        }\n        debug(`Decompress filename=${zipHeader.filename}, compressed-size=${fileData.length}`);\n        const uncompressedData = decompressSync(fileData);\n        return cb(uncompressedData);\n    }\n    async readLocalFileHeader() {\n        const signature = await this.tokenizer.peekToken(UINT32_LE);\n        if (signature === Signature.LocalFileHeader) {\n            const header = await this.tokenizer.readToken(LocalFileHeaderToken);\n            header.filename = await this.tokenizer.readToken(new StringType(header.filenameLength, 'utf-8'));\n            return header;\n        }\n        if (signature === Signature.CentralFileHeader) {\n            return false;\n        }\n        if (signature === 0xE011CFD0) {\n            throw new Error('Encrypted ZIP');\n        }\n        throw new Error('Unexpected signature');\n    }\n}\nfunction indexOf(buffer, portion) {\n    const bufferLength = buffer.length;\n    const portionLength = portion.length;\n    // Return -1 if the portion is longer than the buffer\n    if (portionLength > bufferLength)\n        return -1;\n    // Search for the portion in the buffer\n    for (let i = 0; i <= bufferLength - portionLength; i++) {\n        let found = true;\n        for (let j = 0; j < portionLength; j++) {\n            if (buffer[i + j] !== portion[j]) {\n                found = false;\n                break;\n            }\n        }\n        if (found) {\n            return i; // Return the starting offset\n        }\n    }\n    return -1; // Not found\n}\nfunction mergeArrays(chunks) {\n    // Concatenate chunks into a single Uint8Array\n    const totalLength = chunks.reduce((acc, curr) => acc + curr.length, 0);\n    const mergedArray = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const chunk of chunks) {\n        mergedArray.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return mergedArray;\n}\n","import {StringType} from 'token-types';\n\nexport function stringToBytes(string) {\n\treturn [...string].map(character => character.charCodeAt(0)); // eslint-disable-line unicorn/prefer-code-point\n}\n\n/**\nChecks whether the TAR checksum is valid.\n\n@param {Uint8Array} arrayBuffer - The TAR header `[offset ... offset + 512]`.\n@param {number} offset - TAR header offset.\n@returns {boolean} `true` if the TAR checksum is valid, otherwise `false`.\n*/\nexport function tarHeaderChecksumMatches(arrayBuffer, offset = 0) {\n\tconst readSum = Number.parseInt(new StringType(6).get(arrayBuffer, 148).replace(/\\0.*$/, '').trim(), 8); // Read sum in header\n\tif (Number.isNaN(readSum)) {\n\t\treturn false;\n\t}\n\n\tlet sum = 8 * 0x20; // Initialize signed bit sum\n\n\tfor (let index = offset; index < offset + 148; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\tfor (let index = offset + 156; index < offset + 512; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\treturn readSum === sum;\n}\n\n/**\nID3 UINT32 sync-safe tokenizer token.\n28 bits (representing up to 256MB) integer, the msb is 0 to avoid \"false syncsignals\".\n*/\nexport const uint32SyncSafeToken = {\n\tget: (buffer, offset) => (buffer[offset + 3] & 0x7F) | ((buffer[offset + 2]) << 7) | ((buffer[offset + 1]) << 14) | ((buffer[offset]) << 21),\n\tlen: 4,\n};\n","/**\nPrimary entry point, Node.js specific entry point is index.js\n*/\n\nimport * as Token from 'token-types';\nimport * as strtok3 from 'strtok3/core';\nimport {ZipHandler} from '@tokenizer/inflate';\nimport {includes, getUintBE} from 'uint8array-extras';\nimport {\n\tstringToBytes,\n\ttarHeaderChecksumMatches,\n\tuint32SyncSafeToken,\n} from './util.js';\nimport {extensions, mimeTypes} from './supported.js';\n\nexport const reasonableDetectionSizeInBytes = 4100; // A fair amount of file-types are detectable within this range.\n\nexport async function fileTypeFromStream(stream) {\n\treturn new FileTypeParser().fromStream(stream);\n}\n\nexport async function fileTypeFromBuffer(input) {\n\treturn new FileTypeParser().fromBuffer(input);\n}\n\nexport async function fileTypeFromBlob(blob) {\n\treturn new FileTypeParser().fromBlob(blob);\n}\n\nfunction getFileTypeFromMimeType(mimeType) {\n\tswitch (mimeType.toLowerCase()) {\n\t\tcase 'application/epub+zip':\n\t\t\treturn {\n\t\t\t\text: 'epub',\n\t\t\t\tmime: 'application/epub+zip',\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.text':\n\t\t\treturn {\n\t\t\t\text: 'odt',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.text',\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.text-template':\n\t\t\treturn {\n\t\t\t\text: 'ott',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.text-template',\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.spreadsheet':\n\t\t\treturn {\n\t\t\t\text: 'ods',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.spreadsheet',\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.spreadsheet-template':\n\t\t\treturn {\n\t\t\t\text: 'ots',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.spreadsheet-template',\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.presentation':\n\t\t\treturn {\n\t\t\t\text: 'odp',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.presentation',\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.presentation-template':\n\t\t\treturn {\n\t\t\t\text: 'otp',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.presentation-template',\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.graphics':\n\t\t\treturn {\n\t\t\t\text: 'odg',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.graphics',\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.graphics-template':\n\t\t\treturn {\n\t\t\t\text: 'otg',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.graphics-template',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.slideshow':\n\t\t\treturn {\n\t\t\t\text: 'ppsx',\n\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n\t\t\treturn {\n\t\t\t\text: 'xlsx',\n\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t};\n\t\tcase 'application/vnd.ms-excel.sheet.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'xlsm',\n\t\t\t\tmime: 'application/vnd.ms-excel.sheet.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.template':\n\t\t\treturn {\n\t\t\t\text: 'xltx',\n\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n\t\t\t};\n\t\tcase 'application/vnd.ms-excel.template.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'xltm',\n\t\t\t\tmime: 'application/vnd.ms-excel.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.slideshow.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'ppsm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n\t\t\treturn {\n\t\t\t\text: 'docx',\n\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t\t};\n\t\tcase 'application/vnd.ms-word.document.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'docm',\n\t\t\t\tmime: 'application/vnd.ms-word.document.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.template':\n\t\t\treturn {\n\t\t\t\text: 'dotx',\n\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n\t\t\t};\n\t\tcase 'application/vnd.ms-word.template.macroenabledtemplate':\n\t\t\treturn {\n\t\t\t\text: 'dotm',\n\t\t\t\tmime: 'application/vnd.ms-word.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.template':\n\t\t\treturn {\n\t\t\t\text: 'potx',\n\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.template',\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.template.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'potm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.presentation':\n\t\t\treturn {\n\t\t\t\text: 'pptx',\n\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.presentation.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'pptm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.ms-visio.drawing':\n\t\t\treturn {\n\t\t\t\text: 'vsdx',\n\t\t\t\tmime: 'application/vnd.visio',\n\t\t\t};\n\t\tcase 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml':\n\t\t\treturn {\n\t\t\t\text: '3mf',\n\t\t\t\tmime: 'model/3mf',\n\t\t\t};\n\t\tdefault:\n\t}\n}\n\nfunction _check(buffer, headers, options) {\n\toptions = {\n\t\toffset: 0,\n\t\t...options,\n\t};\n\n\tfor (const [index, header] of headers.entries()) {\n\t\t// If a bitmask is set\n\t\tif (options.mask) {\n\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\tif (header !== (options.mask[index] & buffer[index + options.offset])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (header !== buffer[index + options.offset]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport async function fileTypeFromTokenizer(tokenizer) {\n\treturn new FileTypeParser().fromTokenizer(tokenizer);\n}\n\nexport async function fileTypeStream(webStream, options) {\n\treturn new FileTypeParser(options).toDetectionStream(webStream, options);\n}\n\nexport class FileTypeParser {\n\tconstructor(options) {\n\t\tthis.detectors = [...(options?.customDetectors ?? []),\n\t\t\t{id: 'core', detect: this.detectConfident},\n\t\t\t{id: 'core.imprecise', detect: this.detectImprecise}];\n\t\tthis.tokenizerOptions = {\n\t\t\tabortSignal: options?.signal,\n\t\t};\n\t}\n\n\tasync fromTokenizer(tokenizer) {\n\t\tconst initialPosition = tokenizer.position;\n\n\t\t// Iterate through all file-type detectors\n\t\tfor (const detector of this.detectors) {\n\t\t\tconst fileType = await detector.detect(tokenizer);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\n\t\t\tif (initialPosition !== tokenizer.position) {\n\t\t\t\treturn undefined; // Cannot proceed scanning of the tokenizer is at an arbitrary position\n\t\t\t}\n\t\t}\n\t}\n\n\tasync fromBuffer(input) {\n\t\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer)) {\n\t\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t\t}\n\n\t\tconst buffer = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\t\tif (!(buffer?.length > 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.fromTokenizer(strtok3.fromBuffer(buffer, this.tokenizerOptions));\n\t}\n\n\tasync fromBlob(blob) {\n\t\treturn this.fromStream(blob.stream());\n\t}\n\n\tasync fromStream(stream) {\n\t\tconst tokenizer = await strtok3.fromWebStream(stream, this.tokenizerOptions);\n\t\ttry {\n\t\t\treturn await this.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tasync toDetectionStream(stream, options) {\n\t\tconst {sampleSize = reasonableDetectionSizeInBytes} = options;\n\t\tlet detectedFileType;\n\t\tlet firstChunk;\n\n\t\tconst reader = stream.getReader({mode: 'byob'});\n\t\ttry {\n\t\t\t// Read the first chunk from the stream\n\t\t\tconst {value: chunk, done} = await reader.read(new Uint8Array(sampleSize));\n\t\t\tfirstChunk = chunk;\n\t\t\tif (!done && chunk) {\n\t\t\t\ttry {\n\t\t\t\t\t// Attempt to detect the file type from the chunk\n\t\t\t\t\tdetectedFileType = await this.fromBuffer(chunk.slice(0, sampleSize));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\t\tthrow error; // Re-throw non-EndOfStreamError\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedFileType = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfirstChunk = chunk;\n\t\t} finally {\n\t\t\treader.releaseLock(); // Ensure the reader is released\n\t\t}\n\n\t\t// Create a new ReadableStream to manage locking issues\n\t\tconst transformStream = new TransformStream({\n\t\t\tasync start(controller) {\n\t\t\t\tcontroller.enqueue(firstChunk); // Enqueue the initial chunk\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\t// Pass through the chunks without modification\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t});\n\n\t\tconst newStream = stream.pipeThrough(transformStream);\n\t\tnewStream.fileType = detectedFileType;\n\n\t\treturn newStream;\n\t}\n\n\tcheck(header, options) {\n\t\treturn _check(this.buffer, header, options);\n\t}\n\n\tcheckString(header, options) {\n\t\treturn this.check(stringToBytes(header), options);\n\t}\n\n\t// Detections with a high degree of certainty in identifying the correct file type\n\tdetectConfident = async tokenizer => {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Keep reading until EOF if the file size is unknown.\n\t\tif (tokenizer.fileInfo.size === undefined) {\n\t\t\ttokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n\t\t}\n\n\t\tthis.tokenizer = tokenizer;\n\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: 12, mayBeLess: true});\n\n\t\t// -- 2-byte signatures --\n\n\t\tif (this.check([0x42, 0x4D])) {\n\t\t\treturn {\n\t\t\t\text: 'bmp',\n\t\t\t\tmime: 'image/bmp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x0B, 0x77])) {\n\t\t\treturn {\n\t\t\t\text: 'ac3',\n\t\t\t\tmime: 'audio/vnd.dolby.dd-raw',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x78, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'dmg',\n\t\t\t\tmime: 'application/x-apple-diskimage',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4D, 0x5A])) {\n\t\t\treturn {\n\t\t\t\text: 'exe',\n\t\t\t\tmime: 'application/x-msdownload',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x25, 0x21])) {\n\t\t\tawait tokenizer.peekBuffer(this.buffer, {length: 24, mayBeLess: true});\n\n\t\t\tif (\n\t\t\t\tthis.checkString('PS-Adobe-', {offset: 2})\n\t\t\t\t&& this.checkString(' EPSF-', {offset: 14})\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'eps',\n\t\t\t\t\tmime: 'application/eps',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ps',\n\t\t\t\tmime: 'application/postscript',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x1F, 0xA0])\n\t\t\t|| this.check([0x1F, 0x9D])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'Z',\n\t\t\t\tmime: 'application/x-compress',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC7, 0x71])) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x60, 0xEA])) {\n\t\t\treturn {\n\t\t\t\text: 'arj',\n\t\t\t\tmime: 'application/x-arj',\n\t\t\t};\n\t\t}\n\n\t\t// -- 3-byte signatures --\n\n\t\tif (this.check([0xEF, 0xBB, 0xBF])) { // UTF-8-BOM\n\t\t\t// Strip off UTF-8-BOM\n\t\t\tthis.tokenizer.ignore(3);\n\t\t\treturn this.detectConfident(tokenizer);\n\t\t}\n\n\t\tif (this.check([0x47, 0x49, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'gif',\n\t\t\t\tmime: 'image/gif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0xBC])) {\n\t\t\treturn {\n\t\t\t\text: 'jxr',\n\t\t\t\tmime: 'image/vnd.ms-photo',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x1F, 0x8B, 0x8])) {\n\t\t\treturn {\n\t\t\t\text: 'gz',\n\t\t\t\tmime: 'application/gzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x5A, 0x68])) {\n\t\t\treturn {\n\t\t\t\text: 'bz2',\n\t\t\t\tmime: 'application/x-bzip2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ID3')) {\n\t\t\tawait tokenizer.ignore(6); // Skip ID3 header until the header size\n\t\t\tconst id3HeaderLength = await tokenizer.readToken(uint32SyncSafeToken);\n\t\t\tif (tokenizer.position + id3HeaderLength > tokenizer.fileInfo.size) {\n\t\t\t\t// Guess file type based on ID3 header for backward compatibility\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(id3HeaderLength);\n\t\t\treturn this.fromTokenizer(tokenizer); // Skip ID3 header, recursion\n\t\t}\n\n\t\t// Musepack, SV7\n\t\tif (this.checkString('MP+')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\t(this.buffer[0] === 0x43 || this.buffer[0] === 0x46)\n\t\t\t&& this.check([0x57, 0x53], {offset: 1})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'swf',\n\t\t\t\tmime: 'application/x-shockwave-flash',\n\t\t\t};\n\t\t}\n\n\t\t// -- 4-byte signatures --\n\n\t\t// Requires a sample size of 4 bytes\n\t\tif (this.check([0xFF, 0xD8, 0xFF])) {\n\t\t\tif (this.check([0xF7], {offset: 3})) { // JPG7/SOF55, indicating a ISO/IEC 14495 / JPEG-LS file\n\t\t\t\treturn {\n\t\t\t\t\text: 'jls',\n\t\t\t\t\tmime: 'image/jls',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'jpg',\n\t\t\t\tmime: 'image/jpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4F, 0x62, 0x6A, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'avro',\n\t\t\t\tmime: 'application/avro',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FLIF')) {\n\t\t\treturn {\n\t\t\t\text: 'flif',\n\t\t\t\tmime: 'image/flif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('8BPS')) {\n\t\t\treturn {\n\t\t\t\text: 'psd',\n\t\t\t\tmime: 'image/vnd.adobe.photoshop',\n\t\t\t};\n\t\t}\n\n\t\t// Musepack, SV8\n\t\tif (this.checkString('MPCK')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FORM')) {\n\t\t\treturn {\n\t\t\t\text: 'aif',\n\t\t\t\tmime: 'audio/aiff',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('icns', {offset: 0})) {\n\t\t\treturn {\n\t\t\t\text: 'icns',\n\t\t\t\tmime: 'image/icns',\n\t\t\t};\n\t\t}\n\n\t\t// Zip-based file formats\n\t\t// Need to be before the `zip` check\n\t\tif (this.check([0x50, 0x4B, 0x3, 0x4])) { // Local file header signature\n\t\t\tlet fileType;\n\t\t\tawait new ZipHandler(tokenizer).unzip(zipHeader => {\n\t\t\t\tswitch (zipHeader.filename) {\n\t\t\t\t\tcase 'META-INF/mozilla.rsa':\n\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\text: 'xpi',\n\t\t\t\t\t\t\tmime: 'application/x-xpinstall',\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'META-INF/MANIFEST.MF':\n\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\text: 'jar',\n\t\t\t\t\t\t\tmime: 'application/java-archive',\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'mimetype':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync handler(fileData) {\n\t\t\t\t\t\t\t\t// Use TextDecoder to decode the UTF-8 encoded data\n\t\t\t\t\t\t\t\tconst mimeType = new TextDecoder('utf-8').decode(fileData).trim();\n\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase '[Content_Types].xml':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync handler(fileData) {\n\t\t\t\t\t\t\t\t// Use TextDecoder to decode the UTF-8 encoded data\n\t\t\t\t\t\t\t\tlet xmlContent = new TextDecoder('utf-8').decode(fileData);\n\t\t\t\t\t\t\t\tconst endPos = xmlContent.indexOf('.main+xml\"');\n\t\t\t\t\t\t\t\tif (endPos === -1) {\n\t\t\t\t\t\t\t\t\tconst mimeType = 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml';\n\t\t\t\t\t\t\t\t\tif (xmlContent.includes(`ContentType=\"${mimeType}\"`)) {\n\t\t\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\txmlContent = xmlContent.slice(0, Math.max(0, endPos));\n\t\t\t\t\t\t\t\t\tconst firstPos = xmlContent.lastIndexOf('\"');\n\t\t\t\t\t\t\t\t\tconst mimeType = xmlContent.slice(Math.max(0, firstPos + 1));\n\t\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (/classes\\d*\\.dex/.test(zipHeader.filename)) {\n\t\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\t\text: 'apk',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.android.package-archive',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn {stop: true};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('OggS')) {\n\t\t\t// This is an OGG container\n\t\t\tawait tokenizer.ignore(28);\n\t\t\tconst type = new Uint8Array(8);\n\t\t\tawait tokenizer.readBuffer(type);\n\n\t\t\t// Needs to be before `ogg` check\n\t\t\tif (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'opus',\n\t\t\t\t\tmime: 'audio/ogg; codecs=opus',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' theora' in header.\n\t\t\tif (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogv',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01video' in header.\n\t\t\tif (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogm',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\t\tif (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'oga',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\t\tif (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'spx',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01vorbis' in header\n\t\t\tif (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogg',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\t\treturn {\n\t\t\t\text: 'ogx',\n\t\t\t\tmime: 'application/ogg',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x50, 0x4B])\n\t\t\t&& (this.buffer[2] === 0x3 || this.buffer[2] === 0x5 || this.buffer[2] === 0x7)\n\t\t\t&& (this.buffer[3] === 0x4 || this.buffer[3] === 0x6 || this.buffer[3] === 0x8)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('MThd')) {\n\t\t\treturn {\n\t\t\t\text: 'mid',\n\t\t\t\tmime: 'audio/midi',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOFF')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff',\n\t\t\t\tmime: 'font/woff',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOF2')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff2',\n\t\t\t\tmime: 'font/woff2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xD4, 0xC3, 0xB2, 0xA1]) || this.check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\t\treturn {\n\t\t\t\text: 'pcap',\n\t\t\t\tmime: 'application/vnd.tcpdump.pcap',\n\t\t\t};\n\t\t}\n\n\t\t// Sony DSD Stream File (DSF)\n\t\tif (this.checkString('DSD ')) {\n\t\t\treturn {\n\t\t\t\text: 'dsf',\n\t\t\t\tmime: 'audio/x-dsf', // Non-standard\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('LZIP')) {\n\t\t\treturn {\n\t\t\t\text: 'lz',\n\t\t\t\tmime: 'application/x-lzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('fLaC')) {\n\t\t\treturn {\n\t\t\t\text: 'flac',\n\t\t\t\tmime: 'audio/x-flac',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x50, 0x47, 0xFB])) {\n\t\t\treturn {\n\t\t\t\text: 'bpg',\n\t\t\t\tmime: 'image/bpg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('wvpk')) {\n\t\t\treturn {\n\t\t\t\text: 'wv',\n\t\t\t\tmime: 'audio/wavpack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('%PDF')) {\n\t\t\ttry {\n\t\t\t\tconst skipBytes = 1350;\n\t\t\t\tif (skipBytes === await tokenizer.ignore(skipBytes)) {\n\t\t\t\t\tconst maxBufferSize = 10 * 1024 * 1024;\n\t\t\t\t\tconst buffer = new Uint8Array(Math.min(maxBufferSize, tokenizer.fileInfo.size - skipBytes));\n\t\t\t\t\tawait tokenizer.readBuffer(buffer, {mayBeLess: true});\n\n\t\t\t\t\t// Check if this is an Adobe Illustrator file\n\t\t\t\t\tif (includes(buffer, new TextEncoder().encode('AIPrivateData'))) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'ai',\n\t\t\t\t\t\t\tmime: 'application/postscript',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Swallow end of stream error if file is too small for the Adobe AI check\n\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Assume this is just a normal PDF\n\t\t\treturn {\n\t\t\t\text: 'pdf',\n\t\t\t\tmime: 'application/pdf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x61, 0x73, 0x6D])) {\n\t\t\treturn {\n\t\t\t\text: 'wasm',\n\t\t\t\tmime: 'application/wasm',\n\t\t\t};\n\t\t}\n\n\t\t// TIFF, little-endian type\n\t\tif (this.check([0x49, 0x49])) {\n\t\t\tconst fileType = await this.readTiffHeader(false);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\t// TIFF, big-endian type\n\t\tif (this.check([0x4D, 0x4D])) {\n\t\t\tconst fileType = await this.readTiffHeader(true);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('MAC ')) {\n\t\t\treturn {\n\t\t\t\text: 'ape',\n\t\t\t\tmime: 'audio/ape',\n\t\t\t};\n\t\t}\n\n\t\t// https://github.com/file/file/blob/master/magic/Magdir/matroska\n\t\tif (this.check([0x1A, 0x45, 0xDF, 0xA3])) { // Root element: EBML\n\t\t\tasync function readField() {\n\t\t\t\tconst msb = await tokenizer.peekNumber(Token.UINT8);\n\t\t\t\tlet mask = 0x80;\n\t\t\t\tlet ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n\t\t\t\twhile ((msb & mask) === 0 && mask !== 0) {\n\t\t\t\t\t++ic;\n\t\t\t\t\tmask >>= 1;\n\t\t\t\t}\n\n\t\t\t\tconst id = new Uint8Array(ic + 1);\n\t\t\t\tawait tokenizer.readBuffer(id);\n\t\t\t\treturn id;\n\t\t\t}\n\n\t\t\tasync function readElement() {\n\t\t\t\tconst idField = await readField();\n\t\t\t\tconst lengthField = await readField();\n\n\t\t\t\tlengthField[0] ^= 0x80 >> (lengthField.length - 1);\n\t\t\t\tconst nrLength = Math.min(6, lengthField.length); // JavaScript can max read 6 bytes integer\n\n\t\t\t\tconst idView = new DataView(idField.buffer);\n\t\t\t\tconst lengthView = new DataView(lengthField.buffer, lengthField.length - nrLength, nrLength);\n\n\t\t\t\treturn {\n\t\t\t\t\tid: getUintBE(idView),\n\t\t\t\t\tlen: getUintBE(lengthView),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tasync function readChildren(children) {\n\t\t\t\twhile (children > 0) {\n\t\t\t\t\tconst element = await readElement();\n\t\t\t\t\tif (element.id === 0x42_82) {\n\t\t\t\t\t\tconst rawValue = await tokenizer.readToken(new Token.StringType(element.len));\n\t\t\t\t\t\treturn rawValue.replaceAll(/\\00.*$/g, ''); // Return DocType\n\t\t\t\t\t}\n\n\t\t\t\t\tawait tokenizer.ignore(element.len); // ignore payload\n\t\t\t\t\t--children;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst re = await readElement();\n\t\t\tconst documentType = await readChildren(re.len);\n\n\t\t\tswitch (documentType) {\n\t\t\t\tcase 'webm':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'webm',\n\t\t\t\t\t\tmime: 'video/webm',\n\t\t\t\t\t};\n\n\t\t\t\tcase 'matroska':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mkv',\n\t\t\t\t\t\tmime: 'video/x-matroska',\n\t\t\t\t\t};\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('SQLi')) {\n\t\t\treturn {\n\t\t\t\text: 'sqlite',\n\t\t\t\tmime: 'application/x-sqlite3',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\t\treturn {\n\t\t\t\text: 'nes',\n\t\t\t\tmime: 'application/x-nintendo-nes-rom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Cr24')) {\n\t\t\treturn {\n\t\t\t\text: 'crx',\n\t\t\t\tmime: 'application/x-google-chrome-extension',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('MSCF')\n\t\t\t|| this.checkString('ISc(')\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'cab',\n\t\t\t\tmime: 'application/vnd.ms-cab-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\t\treturn {\n\t\t\t\text: 'rpm',\n\t\t\t\tmime: 'application/x-rpm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC5, 0xD0, 0xD3, 0xC6])) {\n\t\t\treturn {\n\t\t\t\text: 'eps',\n\t\t\t\tmime: 'application/eps',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x28, 0xB5, 0x2F, 0xFD])) {\n\t\t\treturn {\n\t\t\t\text: 'zst',\n\t\t\t\tmime: 'application/zstd',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x7F, 0x45, 0x4C, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'elf',\n\t\t\t\tmime: 'application/x-elf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x21, 0x42, 0x44, 0x4E])) {\n\t\t\treturn {\n\t\t\t\text: 'pst',\n\t\t\t\tmime: 'application/vnd.ms-outlook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('PAR1')) {\n\t\t\treturn {\n\t\t\t\text: 'parquet',\n\t\t\t\tmime: 'application/x-parquet',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ttcf')) {\n\t\t\treturn {\n\t\t\t\text: 'ttc',\n\t\t\t\tmime: 'font/collection',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCF, 0xFA, 0xED, 0xFE])) {\n\t\t\treturn {\n\t\t\t\text: 'macho',\n\t\t\t\tmime: 'application/x-mach-binary',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x22, 0x4D, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'lz4',\n\t\t\t\tmime: 'application/x-lz4', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'otf',\n\t\t\t\tmime: 'font/otf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('#!AMR')) {\n\t\t\treturn {\n\t\t\t\text: 'amr',\n\t\t\t\tmime: 'audio/amr',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('{\\\\rtf')) {\n\t\t\treturn {\n\t\t\t\text: 'rtf',\n\t\t\t\tmime: 'application/rtf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x46, 0x4C, 0x56, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'flv',\n\t\t\t\tmime: 'video/x-flv',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('IMPM')) {\n\t\t\treturn {\n\t\t\t\text: 'it',\n\t\t\t\tmime: 'audio/x-it',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('-lh0-', {offset: 2})\n\t\t\t|| this.checkString('-lh1-', {offset: 2})\n\t\t\t|| this.checkString('-lh2-', {offset: 2})\n\t\t\t|| this.checkString('-lh3-', {offset: 2})\n\t\t\t|| this.checkString('-lh4-', {offset: 2})\n\t\t\t|| this.checkString('-lh5-', {offset: 2})\n\t\t\t|| this.checkString('-lh6-', {offset: 2})\n\t\t\t|| this.checkString('-lh7-', {offset: 2})\n\t\t\t|| this.checkString('-lzs-', {offset: 2})\n\t\t\t|| this.checkString('-lz4-', {offset: 2})\n\t\t\t|| this.checkString('-lz5-', {offset: 2})\n\t\t\t|| this.checkString('-lhd-', {offset: 2})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'lzh',\n\t\t\t\tmime: 'application/x-lzh-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// MPEG program stream (PS or MPEG-PS)\n\t\tif (this.check([0x00, 0x00, 0x01, 0xBA])) {\n\t\t\t//  MPEG-PS, MPEG-1 Part 1\n\t\t\tif (this.check([0x21], {offset: 4, mask: [0xF1]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .ps, .mpeg\n\t\t\t\t\tmime: 'video/MP1S',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG-PS, MPEG-2 Part 1\n\t\t\tif (this.check([0x44], {offset: 4, mask: [0xC4]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .mpg, .m2p, .vob or .sub\n\t\t\t\t\tmime: 'video/MP2P',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('ITSF')) {\n\t\t\treturn {\n\t\t\t\text: 'chm',\n\t\t\t\tmime: 'application/vnd.ms-htmlhelp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCA, 0xFE, 0xBA, 0xBE])) {\n\t\t\treturn {\n\t\t\t\text: 'class',\n\t\t\t\tmime: 'application/java-vm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('.RMF')) {\n\t\t\treturn {\n\t\t\t\text: 'rm',\n\t\t\t\tmime: 'application/vnd.rn-realmedia',\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.checkString('DRACO')) {\n\t\t\treturn {\n\t\t\t\text: 'drc',\n\t\t\t\tmime: 'application/vnd.google.draco', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\t// -- 6-byte signatures --\n\n\t\tif (this.check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'xz',\n\t\t\t\tmime: 'application/x-xz',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('<?xml ')) {\n\t\t\treturn {\n\t\t\t\text: 'xml',\n\t\t\t\tmime: 'application/xml',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\t\treturn {\n\t\t\t\text: '7z',\n\t\t\t\tmime: 'application/x-7z-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7])\n\t\t\t&& (this.buffer[6] === 0x0 || this.buffer[6] === 0x1)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'rar',\n\t\t\t\tmime: 'application/x-rar-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('solid ')) {\n\t\t\treturn {\n\t\t\t\text: 'stl',\n\t\t\t\tmime: 'model/stl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('AC')) {\n\t\t\tconst version = new Token.StringType(4, 'latin1').get(this.buffer, 2);\n\t\t\tif (version.match('^d*') && version >= 1000 && version <= 1050) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'dwg',\n\t\t\t\t\tmime: 'image/vnd.dwg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('070707')) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\t// -- 7-byte signatures --\n\n\t\tif (this.checkString('BLENDER')) {\n\t\t\treturn {\n\t\t\t\text: 'blend',\n\t\t\t\tmime: 'application/x-blender',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('!<arch>')) {\n\t\t\tawait tokenizer.ignore(8);\n\t\t\tconst string = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n\t\t\tif (string === 'debian-binary') {\n\t\t\t\treturn {\n\t\t\t\t\text: 'deb',\n\t\t\t\t\tmime: 'application/x-deb',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ar',\n\t\t\t\tmime: 'application/x-unix-archive',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('WEBVTT')\n\t\t\t&&\t(\n\t\t\t\t// One of LF, CR, tab, space, or end of file must follow \"WEBVTT\" per the spec (see `fixture/fixture-vtt-*.vtt` for examples). Note that `\\0` is technically the null character (there is no such thing as an EOF character). However, checking for `\\0` gives us the same result as checking for the end of the stream.\n\t\t\t\t(['\\n', '\\r', '\\t', ' ', '\\0'].some(char7 => this.checkString(char7, {offset: 6}))))\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'vtt',\n\t\t\t\tmime: 'text/vtt',\n\t\t\t};\n\t\t}\n\n\t\t// -- 8-byte signatures --\n\n\t\tif (this.check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\t// APNG format (https://wiki.mozilla.org/APNG_Specification)\n\t\t\t// 1. Find the first IDAT (image data) chunk (49 44 41 54)\n\t\t\t// 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n\t\t\t// Offset calculated as follows:\n\t\t\t// - 8 bytes: PNG signature\n\t\t\t// - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n\t\t\tawait tokenizer.ignore(8); // ignore PNG signature\n\n\t\t\tasync function readChunkHeader() {\n\t\t\t\treturn {\n\t\t\t\t\tlength: await tokenizer.readToken(Token.INT32_BE),\n\t\t\t\t\ttype: await tokenizer.readToken(new Token.StringType(4, 'latin1')),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tconst chunk = await readChunkHeader();\n\t\t\t\tif (chunk.length < 0) {\n\t\t\t\t\treturn; // Invalid chunk length\n\t\t\t\t}\n\n\t\t\t\tswitch (chunk.type) {\n\t\t\t\t\tcase 'IDAT':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'png',\n\t\t\t\t\t\t\tmime: 'image/png',\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'acTL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'apng',\n\t\t\t\t\t\t\tmime: 'image/apng',\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tawait tokenizer.ignore(chunk.length + 4); // Ignore chunk-data + CRC\n\t\t\t\t}\n\t\t\t} while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n\n\t\t\treturn {\n\t\t\t\text: 'png',\n\t\t\t\tmime: 'image/png',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'arrow',\n\t\t\t\tmime: 'application/x-apache-arrow',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'glb',\n\t\t\t\tmime: 'model/gltf-binary',\n\t\t\t};\n\t\t}\n\n\t\t// `mov` format variants\n\t\tif (\n\t\t\tthis.check([0x66, 0x72, 0x65, 0x65], {offset: 4}) // `free`\n\t\t\t|| this.check([0x6D, 0x64, 0x61, 0x74], {offset: 4}) // `mdat` MJPEG\n\t\t\t|| this.check([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) // `moov`\n\t\t\t|| this.check([0x77, 0x69, 0x64, 0x65], {offset: 4}) // `wide`\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mov',\n\t\t\t\tmime: 'video/quicktime',\n\t\t\t};\n\t\t}\n\n\t\t// -- 9-byte signatures --\n\n\t\tif (this.check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'orf',\n\t\t\t\tmime: 'image/x-olympus-orf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('gimp xcf ')) {\n\t\t\treturn {\n\t\t\t\text: 'xcf',\n\t\t\t\tmime: 'image/x-xcf',\n\t\t\t};\n\t\t}\n\n\t\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\t\t// It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n\t\t// `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n\t\t// Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n\t\tif (\n\t\t\tthis.checkString('ftyp', {offset: 4})\n\t\t\t&& (this.buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n\t\t) {\n\t\t\t// They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n\t\t\t// For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n\t\t\tconst brandMajor = new Token.StringType(4, 'latin1').get(this.buffer, 8).replace('\\0', ' ').trim();\n\t\t\tswitch (brandMajor) {\n\t\t\t\tcase 'avif':\n\t\t\t\tcase 'avis':\n\t\t\t\t\treturn {ext: 'avif', mime: 'image/avif'};\n\t\t\t\tcase 'mif1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif'};\n\t\t\t\tcase 'msf1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif-sequence'};\n\t\t\t\tcase 'heic':\n\t\t\t\tcase 'heix':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic'};\n\t\t\t\tcase 'hevc':\n\t\t\t\tcase 'hevx':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic-sequence'};\n\t\t\t\tcase 'qt':\n\t\t\t\t\treturn {ext: 'mov', mime: 'video/quicktime'};\n\t\t\t\tcase 'M4V':\n\t\t\t\tcase 'M4VH':\n\t\t\t\tcase 'M4VP':\n\t\t\t\t\treturn {ext: 'm4v', mime: 'video/x-m4v'};\n\t\t\t\tcase 'M4P':\n\t\t\t\t\treturn {ext: 'm4p', mime: 'video/mp4'};\n\t\t\t\tcase 'M4B':\n\t\t\t\t\treturn {ext: 'm4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'M4A':\n\t\t\t\t\treturn {ext: 'm4a', mime: 'audio/x-m4a'};\n\t\t\t\tcase 'F4V':\n\t\t\t\t\treturn {ext: 'f4v', mime: 'video/mp4'};\n\t\t\t\tcase 'F4P':\n\t\t\t\t\treturn {ext: 'f4p', mime: 'video/mp4'};\n\t\t\t\tcase 'F4A':\n\t\t\t\t\treturn {ext: 'f4a', mime: 'audio/mp4'};\n\t\t\t\tcase 'F4B':\n\t\t\t\t\treturn {ext: 'f4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'crx':\n\t\t\t\t\treturn {ext: 'cr3', mime: 'image/x-canon-cr3'};\n\t\t\t\tdefault:\n\t\t\t\t\tif (brandMajor.startsWith('3g')) {\n\t\t\t\t\t\tif (brandMajor.startsWith('3g2')) {\n\t\t\t\t\t\t\treturn {ext: '3g2', mime: 'video/3gpp2'};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {ext: '3gp', mime: 'video/3gpp'};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {ext: 'mp4', mime: 'video/mp4'};\n\t\t\t}\n\t\t}\n\n\t\t// -- 12-byte signatures --\n\n\t\t// RIFF file format which might be AVI, WAV, QCP, etc\n\t\tif (this.check([0x52, 0x49, 0x46, 0x46])) {\n\t\t\tif (this.checkString('WEBP', {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'webp',\n\t\t\t\t\tmime: 'image/webp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'avi',\n\t\t\t\t\tmime: 'video/vnd.avi',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'wav',\n\t\t\t\t\tmime: 'audio/wav',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// QLCM, QCP file\n\t\t\tif (this.check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'qcp',\n\t\t\t\t\tmime: 'audio/qcelp',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n\t\t\treturn {\n\t\t\t\text: 'rw2',\n\t\t\t\tmime: 'image/x-panasonic-rw2',\n\t\t\t};\n\t\t}\n\n\t\t// ASF_Header_Object first 80 bytes\n\t\tif (this.check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t\tasync function readHeader() {\n\t\t\t\tconst guid = new Uint8Array(16);\n\t\t\t\tawait tokenizer.readBuffer(guid);\n\t\t\t\treturn {\n\t\t\t\t\tid: guid,\n\t\t\t\t\tsize: Number(await tokenizer.readToken(Token.UINT64_LE)),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(30);\n\t\t\t// Search for header should be in first 1KB of file.\n\t\t\twhile (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n\t\t\t\tconst header = await readHeader();\n\t\t\t\tlet payload = header.size - 24;\n\t\t\t\tif (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n\t\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\t\tconst typeId = new Uint8Array(16);\n\t\t\t\t\tpayload -= await tokenizer.readBuffer(typeId);\n\n\t\t\t\t\tif (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found audio:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'audio/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found video:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'video/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tawait tokenizer.ignore(payload);\n\t\t\t}\n\n\t\t\t// Default to ASF generic extension\n\t\t\treturn {\n\t\t\t\text: 'asf',\n\t\t\t\tmime: 'application/vnd.ms-asf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\treturn {\n\t\t\t\text: 'ktx',\n\t\t\t\tmime: 'image/ktx',\n\t\t\t};\n\t\t}\n\n\t\tif ((this.check([0x7E, 0x10, 0x04]) || this.check([0x7E, 0x18, 0x04])) && this.check([0x30, 0x4D, 0x49, 0x45], {offset: 4})) {\n\t\t\treturn {\n\t\t\t\text: 'mie',\n\t\t\t\tmime: 'application/x-mie',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {offset: 2})) {\n\t\t\treturn {\n\t\t\t\text: 'shp',\n\t\t\t\tmime: 'application/x-esri-shape',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0x4F, 0xFF, 0x51])) {\n\t\t\treturn {\n\t\t\t\text: 'j2c',\n\t\t\t\tmime: 'image/j2c',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t\t// JPEG-2000 family\n\n\t\t\tawait tokenizer.ignore(20);\n\t\t\tconst type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n\t\t\tswitch (type) {\n\t\t\t\tcase 'jp2 ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jp2',\n\t\t\t\t\t\tmime: 'image/jp2',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpx ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpx',\n\t\t\t\t\t\tmime: 'image/jpx',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpm ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpm',\n\t\t\t\t\t\tmime: 'image/jpm',\n\t\t\t\t\t};\n\t\t\t\tcase 'mjp2':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mj2',\n\t\t\t\t\t\tmime: 'image/mj2',\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0xFF, 0x0A])\n\t\t\t|| this.check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'jxl',\n\t\t\t\tmime: 'image/jxl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFE, 0xFF])) { // UTF-16-BOM-LE\n\t\t\tif (this.check([0, 60, 0, 63, 0, 120, 0, 109, 0, 108], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some unknown text based format\n\t\t}\n\n\t\tif (this.check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\t\t// Detected Microsoft Compound File Binary File (MS-CFB) Format.\n\t\t\treturn {\n\t\t\t\text: 'cfb',\n\t\t\t\tmime: 'application/x-cfb',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 12 to 256.\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(256, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (this.check([0x61, 0x63, 0x73, 0x70], {offset: 36})) {\n\t\t\treturn {\n\t\t\t\text: 'icc',\n\t\t\t\tmime: 'application/vnd.iccprofile',\n\t\t\t};\n\t\t}\n\n\t\t// ACE: requires 14 bytes in the buffer\n\t\tif (this.checkString('**ACE', {offset: 7}) && this.checkString('**', {offset: 12})) {\n\t\t\treturn {\n\t\t\t\text: 'ace',\n\t\t\t\tmime: 'application/x-ace-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// -- 15-byte signatures --\n\n\t\tif (this.checkString('BEGIN:')) {\n\t\t\tif (this.checkString('VCARD', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'vcf',\n\t\t\t\t\tmime: 'text/vcard',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.checkString('VCALENDAR', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ics',\n\t\t\t\t\tmime: 'text/calendar',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `raf` is here just to keep all the raw image detectors together.\n\t\tif (this.checkString('FUJIFILMCCD-RAW')) {\n\t\t\treturn {\n\t\t\t\text: 'raf',\n\t\t\t\tmime: 'image/x-fujifilm-raf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Extended Module:')) {\n\t\t\treturn {\n\t\t\t\text: 'xm',\n\t\t\t\tmime: 'audio/x-xm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Creative Voice File')) {\n\t\t\treturn {\n\t\t\t\text: 'voc',\n\t\t\t\tmime: 'audio/x-voc',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x00, 0x00, 0x00]) && this.buffer.length >= 16) { // Rough & quick check Pickle/ASAR\n\t\t\tconst jsonSize = new DataView(this.buffer.buffer).getUint32(12, true);\n\n\t\t\tif (jsonSize > 12 && this.buffer.length >= jsonSize + 16) {\n\t\t\t\ttry {\n\t\t\t\t\tconst header = new TextDecoder().decode(this.buffer.slice(16, jsonSize + 16));\n\t\t\t\t\tconst json = JSON.parse(header);\n\t\t\t\t\t// Check if Pickle is ASAR\n\t\t\t\t\tif (json.files) { // Final check, assuring Pickle/ASAR format\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asar',\n\t\t\t\t\t\t\tmime: 'application/x-asar',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch {}\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\t\treturn {\n\t\t\t\text: 'mxf',\n\t\t\t\tmime: 'application/mxf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('SCRM', {offset: 44})) {\n\t\t\treturn {\n\t\t\t\text: 's3m',\n\t\t\t\tmime: 'audio/x-s3m',\n\t\t\t};\n\t\t}\n\n\t\t// Raw MPEG-2 transport stream (188-byte packets)\n\t\tif (this.check([0x47]) && this.check([0x47], {offset: 188})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\t// Blu-ray Disc Audio-Video (BDAV) MPEG-2 transport stream has 4-byte TP_extra_header before each 188-byte packet\n\t\tif (this.check([0x47], {offset: 4}) && this.check([0x47], {offset: 196})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\t\treturn {\n\t\t\t\text: 'mobi',\n\t\t\t\tmime: 'application/x-mobipocket-ebook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\t\treturn {\n\t\t\t\text: 'dcm',\n\t\t\t\tmime: 'application/dicom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'lnk',\n\t\t\t\tmime: 'application/x.ms.shortcut', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'alias',\n\t\t\t\tmime: 'application/x.apple.alias', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Kaydara FBX Binary  \\u0000')) {\n\t\t\treturn {\n\t\t\t\text: 'fbx',\n\t\t\t\tmime: 'application/x.autodesk.fbx', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x4C, 0x50], {offset: 34})\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x00, 0x01], {offset: 8})\n\t\t\t\t|| this.check([0x01, 0x00, 0x02], {offset: 8})\n\t\t\t\t|| this.check([0x02, 0x00, 0x02], {offset: 8})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'eot',\n\t\t\t\tmime: 'application/vnd.ms-fontobject',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n\t\t\treturn {\n\t\t\t\text: 'indd',\n\t\t\t\tmime: 'application/x-indesign',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 256 to 512\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(512, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Requires a buffer size of 512 bytes\n\t\tif (tarHeaderChecksumMatches(this.buffer)) {\n\t\t\treturn {\n\t\t\t\text: 'tar',\n\t\t\t\tmime: 'application/x-tar',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0xFE])) { // UTF-16-BOM-BE\n\t\t\tif (this.check([60, 0, 63, 0, 120, 0, 109, 0, 108, 0], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'skp',\n\t\t\t\t\tmime: 'application/vnd.sketchup.skp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some text based format\n\t\t}\n\n\t\tif (this.checkString('-----BEGIN PGP MESSAGE-----')) {\n\t\t\treturn {\n\t\t\t\text: 'pgp',\n\t\t\t\tmime: 'application/pgp-encrypted',\n\t\t\t};\n\t\t}\n\t};\n\t// Detections with limited supporting data, resulting in a higher likelihood of false positives\n\tdetectImprecise = async tokenizer => {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Read initial sample size of 8 bytes\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(8, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (\n\t\t\tthis.check([0x0, 0x0, 0x1, 0xBA])\n\t\t\t|| this.check([0x0, 0x0, 0x1, 0xB3])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mpg',\n\t\t\t\tmime: 'video/mpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ttf',\n\t\t\t\tmime: 'font/ttf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x01, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ico',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x02, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'cur',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\t// Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n\t\tif (this.buffer.length >= 2 && this.check([0xFF, 0xE0], {offset: 0, mask: [0xFF, 0xE0]})) {\n\t\t\tif (this.check([0x10], {offset: 1, mask: [0x16]})) {\n\t\t\t\t// Check for (ADTS) MPEG-2\n\t\t\t\tif (this.check([0x08], {offset: 1, mask: [0x08]})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'aac',\n\t\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Must be (ADTS) MPEG-4\n\t\t\t\treturn {\n\t\t\t\t\text: 'aac',\n\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG 1 or 2 Layer 3 header\n\t\t\t// Check for MPEG layer 3\n\t\t\tif (this.check([0x02], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 2\n\t\t\tif (this.check([0x04], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp2',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 1\n\t\t\tif (this.check([0x06], {offset: 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp1',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t};\n\n\tasync readTiffTag(bigEndian) {\n\t\tconst tagId = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tthis.tokenizer.ignore(10);\n\t\tswitch (tagId) {\n\t\t\tcase 50_341:\n\t\t\t\treturn {\n\t\t\t\t\text: 'arw',\n\t\t\t\t\tmime: 'image/x-sony-arw',\n\t\t\t\t};\n\t\t\tcase 50_706:\n\t\t\t\treturn {\n\t\t\t\t\text: 'dng',\n\t\t\t\t\tmime: 'image/x-adobe-dng',\n\t\t\t\t};\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync readTiffIFD(bigEndian) {\n\t\tconst numberOfTags = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tfor (let n = 0; n < numberOfTags; ++n) {\n\t\t\tconst fileType = await this.readTiffTag(bigEndian);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync readTiffHeader(bigEndian) {\n\t\tconst version = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 2);\n\t\tconst ifdOffset = (bigEndian ? Token.UINT32_BE : Token.UINT32_LE).get(this.buffer, 4);\n\n\t\tif (version === 42) {\n\t\t\t// TIFF file header\n\t\t\tif (ifdOffset >= 6) {\n\t\t\t\tif (this.checkString('CR', {offset: 8})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'cr2',\n\t\t\t\t\t\tmime: 'image/x-canon-cr2',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (ifdOffset >= 8) {\n\t\t\t\t\tconst someId1 = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 8);\n\t\t\t\t\tconst someId2 = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 10);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(someId1 === 0x1C && someId2 === 0xFE)\n\t\t\t\t\t\t|| (someId1 === 0x1F && someId2 === 0x0B)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'nef',\n\t\t\t\t\t\t\tmime: 'image/x-nikon-nef',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.tokenizer.ignore(ifdOffset);\n\t\t\tconst fileType = await this.readTiffIFD(bigEndian);\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\n\t\tif (version === 43) {\t// Big TIFF file header\n\t\t\treturn {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport const supportedExtensions = new Set(extensions);\nexport const supportedMimeTypes = new Set(mimeTypes);\n","export const extensions = [\n\t'jpg',\n\t'png',\n\t'apng',\n\t'gif',\n\t'webp',\n\t'flif',\n\t'xcf',\n\t'cr2',\n\t'cr3',\n\t'orf',\n\t'arw',\n\t'dng',\n\t'nef',\n\t'rw2',\n\t'raf',\n\t'tif',\n\t'bmp',\n\t'icns',\n\t'jxr',\n\t'psd',\n\t'indd',\n\t'zip',\n\t'tar',\n\t'rar',\n\t'gz',\n\t'bz2',\n\t'7z',\n\t'dmg',\n\t'mp4',\n\t'mid',\n\t'mkv',\n\t'webm',\n\t'mov',\n\t'avi',\n\t'mpg',\n\t'mp2',\n\t'mp3',\n\t'm4a',\n\t'oga',\n\t'ogg',\n\t'ogv',\n\t'opus',\n\t'flac',\n\t'wav',\n\t'spx',\n\t'amr',\n\t'pdf',\n\t'epub',\n\t'elf',\n\t'macho',\n\t'exe',\n\t'swf',\n\t'rtf',\n\t'wasm',\n\t'woff',\n\t'woff2',\n\t'eot',\n\t'ttf',\n\t'otf',\n\t'ttc',\n\t'ico',\n\t'flv',\n\t'ps',\n\t'xz',\n\t'sqlite',\n\t'nes',\n\t'crx',\n\t'xpi',\n\t'cab',\n\t'deb',\n\t'ar',\n\t'rpm',\n\t'Z',\n\t'lz',\n\t'cfb',\n\t'mxf',\n\t'mts',\n\t'blend',\n\t'bpg',\n\t'docx',\n\t'pptx',\n\t'xlsx',\n\t'3gp',\n\t'3g2',\n\t'j2c',\n\t'jp2',\n\t'jpm',\n\t'jpx',\n\t'mj2',\n\t'aif',\n\t'qcp',\n\t'odt',\n\t'ods',\n\t'odp',\n\t'xml',\n\t'mobi',\n\t'heic',\n\t'cur',\n\t'ktx',\n\t'ape',\n\t'wv',\n\t'dcm',\n\t'ics',\n\t'glb',\n\t'pcap',\n\t'dsf',\n\t'lnk',\n\t'alias',\n\t'voc',\n\t'ac3',\n\t'm4v',\n\t'm4p',\n\t'm4b',\n\t'f4v',\n\t'f4p',\n\t'f4b',\n\t'f4a',\n\t'mie',\n\t'asf',\n\t'ogm',\n\t'ogx',\n\t'mpc',\n\t'arrow',\n\t'shp',\n\t'aac',\n\t'mp1',\n\t'it',\n\t's3m',\n\t'xm',\n\t'ai',\n\t'skp',\n\t'avif',\n\t'eps',\n\t'lzh',\n\t'pgp',\n\t'asar',\n\t'stl',\n\t'chm',\n\t'3mf',\n\t'zst',\n\t'jxl',\n\t'vcf',\n\t'jls',\n\t'pst',\n\t'dwg',\n\t'parquet',\n\t'class',\n\t'arj',\n\t'cpio',\n\t'ace',\n\t'avro',\n\t'icc',\n\t'fbx',\n\t'vsdx',\n\t'vtt',\n\t'apk',\n\t'drc',\n\t'lz4',\n\t'potx',\n\t'xltx',\n\t'dotx',\n\t'xltm',\n\t'ott',\n\t'ots',\n\t'otp',\n\t'odg',\n\t'otg',\n\t'xlsm',\n\t'docm',\n\t'dotm',\n\t'potm',\n\t'pptm',\n\t'jar',\n\t'rm',\n\t'ppsm',\n\t'ppsx',\n];\n\nexport const mimeTypes = [\n\t'image/jpeg',\n\t'image/png',\n\t'image/gif',\n\t'image/webp',\n\t'image/flif',\n\t'image/x-xcf',\n\t'image/x-canon-cr2',\n\t'image/x-canon-cr3',\n\t'image/tiff',\n\t'image/bmp',\n\t'image/vnd.ms-photo',\n\t'image/vnd.adobe.photoshop',\n\t'application/x-indesign',\n\t'application/epub+zip',\n\t'application/x-xpinstall',\n\t'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n\t'application/vnd.oasis.opendocument.text',\n\t'application/vnd.oasis.opendocument.spreadsheet',\n\t'application/vnd.oasis.opendocument.presentation',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n\t'application/zip',\n\t'application/x-tar',\n\t'application/x-rar-compressed',\n\t'application/gzip',\n\t'application/x-bzip2',\n\t'application/x-7z-compressed',\n\t'application/x-apple-diskimage',\n\t'application/x-apache-arrow',\n\t'video/mp4',\n\t'audio/midi',\n\t'video/x-matroska',\n\t'video/webm',\n\t'video/quicktime',\n\t'video/vnd.avi',\n\t'audio/wav',\n\t'audio/qcelp',\n\t'audio/x-ms-asf',\n\t'video/x-ms-asf',\n\t'application/vnd.ms-asf',\n\t'video/mpeg',\n\t'video/3gpp',\n\t'audio/mpeg',\n\t'audio/mp4', // RFC 4337\n\t'video/ogg',\n\t'audio/ogg',\n\t'audio/ogg; codecs=opus',\n\t'application/ogg',\n\t'audio/x-flac',\n\t'audio/ape',\n\t'audio/wavpack',\n\t'audio/amr',\n\t'application/pdf',\n\t'application/x-elf',\n\t'application/x-mach-binary',\n\t'application/x-msdownload',\n\t'application/x-shockwave-flash',\n\t'application/rtf',\n\t'application/wasm',\n\t'font/woff',\n\t'font/woff2',\n\t'application/vnd.ms-fontobject',\n\t'font/ttf',\n\t'font/otf',\n\t'font/collection',\n\t'image/x-icon',\n\t'video/x-flv',\n\t'application/postscript',\n\t'application/eps',\n\t'application/x-xz',\n\t'application/x-sqlite3',\n\t'application/x-nintendo-nes-rom',\n\t'application/x-google-chrome-extension',\n\t'application/vnd.ms-cab-compressed',\n\t'application/x-deb',\n\t'application/x-unix-archive',\n\t'application/x-rpm',\n\t'application/x-compress',\n\t'application/x-lzip',\n\t'application/x-cfb',\n\t'application/x-mie',\n\t'application/mxf',\n\t'video/mp2t',\n\t'application/x-blender',\n\t'image/bpg',\n\t'image/j2c',\n\t'image/jp2',\n\t'image/jpx',\n\t'image/jpm',\n\t'image/mj2',\n\t'audio/aiff',\n\t'application/xml',\n\t'application/x-mobipocket-ebook',\n\t'image/heif',\n\t'image/heif-sequence',\n\t'image/heic',\n\t'image/heic-sequence',\n\t'image/icns',\n\t'image/ktx',\n\t'application/dicom',\n\t'audio/x-musepack',\n\t'text/calendar',\n\t'text/vcard',\n\t'text/vtt',\n\t'model/gltf-binary',\n\t'application/vnd.tcpdump.pcap',\n\t'audio/x-dsf', // Non-standard\n\t'application/x.ms.shortcut', // Invented by us\n\t'application/x.apple.alias', // Invented by us\n\t'audio/x-voc',\n\t'audio/vnd.dolby.dd-raw',\n\t'audio/x-m4a',\n\t'image/apng',\n\t'image/x-olympus-orf',\n\t'image/x-sony-arw',\n\t'image/x-adobe-dng',\n\t'image/x-nikon-nef',\n\t'image/x-panasonic-rw2',\n\t'image/x-fujifilm-raf',\n\t'video/x-m4v',\n\t'video/3gpp2',\n\t'application/x-esri-shape',\n\t'audio/aac',\n\t'audio/x-it',\n\t'audio/x-s3m',\n\t'audio/x-xm',\n\t'video/MP1S',\n\t'video/MP2P',\n\t'application/vnd.sketchup.skp',\n\t'image/avif',\n\t'application/x-lzh-compressed',\n\t'application/pgp-encrypted',\n\t'application/x-asar',\n\t'model/stl',\n\t'application/vnd.ms-htmlhelp',\n\t'model/3mf',\n\t'image/jxl',\n\t'application/zstd',\n\t'image/jls',\n\t'application/vnd.ms-outlook',\n\t'image/vnd.dwg',\n\t'application/x-parquet',\n\t'application/java-vm',\n\t'application/x-arj',\n\t'application/x-cpio',\n\t'application/x-ace-compressed',\n\t'application/avro',\n\t'application/vnd.iccprofile',\n\t'application/x.autodesk.fbx', // Invented by us\n\t'application/vnd.visio',\n\t'application/vnd.android.package-archive',\n\t'application/vnd.google.draco', // Invented by us\n\t'application/x-lz4', // Invented by us\n\t'application/vnd.openxmlformats-officedocument.presentationml.template',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n\t'application/vnd.ms-excel.template.macroenabled.12',\n\t'application/vnd.oasis.opendocument.text-template',\n\t'application/vnd.oasis.opendocument.spreadsheet-template',\n\t'application/vnd.oasis.opendocument.presentation-template',\n\t'application/vnd.oasis.opendocument.graphics',\n\t'application/vnd.oasis.opendocument.graphics-template',\n\t'application/vnd.ms-excel.sheet.macroenabled.12',\n\t'application/vnd.ms-word.document.macroenabled.12',\n\t'application/vnd.ms-word.template.macroenabled.12',\n\t'application/vnd.ms-powerpoint.template.macroenabled.12',\n\t'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n\t'application/java-archive',\n\t'application/vnd.rn-realmedia',\n];\n","const defaultTagInfo = {\n    multiple: false,\n};\nconst commonTags = {\n    year: defaultTagInfo,\n    track: defaultTagInfo,\n    disk: defaultTagInfo,\n    title: defaultTagInfo,\n    artist: defaultTagInfo,\n    artists: { multiple: true, unique: true },\n    albumartist: defaultTagInfo,\n    album: defaultTagInfo,\n    date: defaultTagInfo,\n    originaldate: defaultTagInfo,\n    originalyear: defaultTagInfo,\n    releasedate: defaultTagInfo,\n    comment: { multiple: true, unique: false },\n    genre: { multiple: true, unique: true },\n    picture: { multiple: true, unique: true },\n    composer: { multiple: true, unique: true },\n    lyrics: { multiple: true, unique: false },\n    albumsort: { multiple: false, unique: true },\n    titlesort: { multiple: false, unique: true },\n    work: { multiple: false, unique: true },\n    artistsort: { multiple: false, unique: true },\n    albumartistsort: { multiple: false, unique: true },\n    composersort: { multiple: false, unique: true },\n    lyricist: { multiple: true, unique: true },\n    writer: { multiple: true, unique: true },\n    conductor: { multiple: true, unique: true },\n    remixer: { multiple: true, unique: true },\n    arranger: { multiple: true, unique: true },\n    engineer: { multiple: true, unique: true },\n    producer: { multiple: true, unique: true },\n    technician: { multiple: true, unique: true },\n    djmixer: { multiple: true, unique: true },\n    mixer: { multiple: true, unique: true },\n    label: { multiple: true, unique: true },\n    grouping: defaultTagInfo,\n    subtitle: { multiple: true },\n    discsubtitle: defaultTagInfo,\n    totaltracks: defaultTagInfo,\n    totaldiscs: defaultTagInfo,\n    compilation: defaultTagInfo,\n    rating: { multiple: true },\n    bpm: defaultTagInfo,\n    mood: defaultTagInfo,\n    media: defaultTagInfo,\n    catalognumber: { multiple: true, unique: true },\n    tvShow: defaultTagInfo,\n    tvShowSort: defaultTagInfo,\n    tvSeason: defaultTagInfo,\n    tvEpisode: defaultTagInfo,\n    tvEpisodeId: defaultTagInfo,\n    tvNetwork: defaultTagInfo,\n    podcast: defaultTagInfo,\n    podcasturl: defaultTagInfo,\n    releasestatus: defaultTagInfo,\n    releasetype: { multiple: true },\n    releasecountry: defaultTagInfo,\n    script: defaultTagInfo,\n    language: defaultTagInfo,\n    copyright: defaultTagInfo,\n    license: defaultTagInfo,\n    encodedby: defaultTagInfo,\n    encodersettings: defaultTagInfo,\n    gapless: defaultTagInfo,\n    barcode: defaultTagInfo,\n    isrc: { multiple: true },\n    asin: defaultTagInfo,\n    musicbrainz_recordingid: defaultTagInfo,\n    musicbrainz_trackid: defaultTagInfo,\n    musicbrainz_albumid: defaultTagInfo,\n    musicbrainz_artistid: { multiple: true },\n    musicbrainz_albumartistid: { multiple: true },\n    musicbrainz_releasegroupid: defaultTagInfo,\n    musicbrainz_workid: defaultTagInfo,\n    musicbrainz_trmid: defaultTagInfo,\n    musicbrainz_discid: defaultTagInfo,\n    acoustid_id: defaultTagInfo,\n    acoustid_fingerprint: defaultTagInfo,\n    musicip_puid: defaultTagInfo,\n    musicip_fingerprint: defaultTagInfo,\n    website: defaultTagInfo,\n    'performer:instrument': { multiple: true, unique: true },\n    averageLevel: defaultTagInfo,\n    peakLevel: defaultTagInfo,\n    notes: { multiple: true, unique: false },\n    key: defaultTagInfo,\n    originalalbum: defaultTagInfo,\n    originalartist: defaultTagInfo,\n    discogs_artist_id: { multiple: true, unique: true },\n    discogs_release_id: defaultTagInfo,\n    discogs_label_id: defaultTagInfo,\n    discogs_master_release_id: defaultTagInfo,\n    discogs_votes: defaultTagInfo,\n    discogs_rating: defaultTagInfo,\n    replaygain_track_peak: defaultTagInfo,\n    replaygain_track_gain: defaultTagInfo,\n    replaygain_album_peak: defaultTagInfo,\n    replaygain_album_gain: defaultTagInfo,\n    replaygain_track_minmax: defaultTagInfo,\n    replaygain_album_minmax: defaultTagInfo,\n    replaygain_undo: defaultTagInfo,\n    description: { multiple: true },\n    longDescription: defaultTagInfo,\n    category: { multiple: true },\n    hdVideo: defaultTagInfo,\n    keywords: { multiple: true },\n    movement: defaultTagInfo,\n    movementIndex: defaultTagInfo,\n    movementTotal: defaultTagInfo,\n    podcastId: defaultTagInfo,\n    showMovement: defaultTagInfo,\n    stik: defaultTagInfo\n};\nexport const commonTagsKeys = /* @__PURE__ */ Object.keys(commonTags);\n/**\n * @param alias Name of common tag\n * @returns {boolean|*} true if given alias is mapped as a singleton', otherwise false\n */\nexport function isSingleton(alias) {\n    return commonTags[alias] && !commonTags[alias].multiple;\n}\n/**\n * @param alias Common (generic) tag\n * @returns {boolean|*} true if given alias is a singleton or explicitly marked as unique\n */\nexport function isUnique(alias) {\n    return !commonTags[alias].multiple || commonTags[alias].unique || false;\n}\n//# sourceMappingURL=GenericTagTypes.js.map","export class CommonTagMapper {\n    static toIntOrNull(str) {\n        const cleaned = Number.parseInt(str, 10);\n        return Number.isNaN(cleaned) ? null : cleaned;\n    }\n    // TODO: a string of 1of1 would fail to be converted\n    // converts 1/10 to no : 1, of : 10\n    // or 1 to no : 1, of : 0\n    static normalizeTrack(origVal) {\n        const split = origVal.toString().split('/');\n        return {\n            no: Number.parseInt(split[0], 10) || null,\n            of: Number.parseInt(split[1], 10) || null\n        };\n    }\n    constructor(tagTypes, tagMap) {\n        this.tagTypes = tagTypes;\n        this.tagMap = tagMap;\n    }\n    /**\n     * Process and set common tags\n     * write common tags to\n     * @param tag Native tag\n     * @param warnings Register warnings\n     * @return common name\n     */\n    mapGenericTag(tag, warnings) {\n        tag = { id: tag.id, value: tag.value }; // clone object\n        this.postMap(tag, warnings);\n        // Convert native tag event to generic 'alias' tag\n        const id = this.getCommonName(tag.id);\n        return id ? { id, value: tag.value } : null;\n    }\n    /**\n     * Convert native tag key to common tag key\n     * @param tag Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag];\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag Tag e.g. {\"©alb\", \"Buena Vista Social Club\")\n     * @param warnings Used to register warnings\n     */\n    postMap(tag, warnings) {\n        return;\n    }\n}\nCommonTagMapper.maxRatingScore = 1;\n//# sourceMappingURL=GenericTagMapper.js.map","import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ID3v1 tag mappings\n */\nconst id3v1TagMap = {\n    title: 'title',\n    artist: 'artist',\n    album: 'album',\n    year: 'year',\n    comment: 'comment',\n    track: 'track',\n    genre: 'genre'\n};\nexport class ID3v1TagMapper extends CommonTagMapper {\n    constructor() {\n        super(['ID3v1'], id3v1TagMap);\n    }\n}\n//# sourceMappingURL=ID3v1TagMap.js.map","import { CommonTagMapper } from './GenericTagMapper.js';\nexport class CaseInsensitiveTagMap extends CommonTagMapper {\n    constructor(tagTypes, tagMap) {\n        const upperCaseMap = {};\n        for (const tag of Object.keys(tagMap)) {\n            upperCaseMap[tag.toUpperCase()] = tagMap[tag];\n        }\n        super(tagTypes, upperCaseMap);\n    }\n    /**\n     * @tag  Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag.toUpperCase()];\n    }\n}\n//# sourceMappingURL=CaseInsensitiveTagMap.js.map","import { UINT32_LE } from 'token-types';\nimport { CommonTagMapper } from '../common/GenericTagMapper.js';\nimport { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\nimport { decodeString } from '../common/Util.js';\n/**\n * ID3v2.3/ID3v2.4 tag mappings\n */\nconst id3v24TagMap = {\n    // id3v2.3\n    TIT2: 'title',\n    TPE1: 'artist',\n    'TXXX:Artists': 'artists',\n    TPE2: 'albumartist',\n    TALB: 'album',\n    TDRV: 'date', // [ 'date', 'year' ] ToDo: improve 'year' mapping\n    /**\n     * Original release year\n     */\n    TORY: 'originalyear',\n    TPOS: 'disk',\n    TCON: 'genre',\n    APIC: 'picture',\n    TCOM: 'composer',\n    USLT: 'lyrics',\n    TSOA: 'albumsort',\n    TSOT: 'titlesort',\n    TOAL: 'originalalbum',\n    TSOP: 'artistsort',\n    TSO2: 'albumartistsort',\n    TSOC: 'composersort',\n    TEXT: 'lyricist',\n    'TXXX:Writer': 'writer',\n    TPE3: 'conductor',\n    // 'IPLS:instrument': 'performer:instrument', // ToDo\n    TPE4: 'remixer',\n    'IPLS:arranger': 'arranger',\n    'IPLS:engineer': 'engineer',\n    'IPLS:producer': 'producer',\n    'IPLS:DJ-mix': 'djmixer',\n    'IPLS:mix': 'mixer',\n    TPUB: 'label',\n    TIT1: 'grouping',\n    TIT3: 'subtitle',\n    TRCK: 'track',\n    TCMP: 'compilation',\n    POPM: 'rating',\n    TBPM: 'bpm',\n    TMED: 'media',\n    'TXXX:CATALOGNUMBER': 'catalognumber',\n    'TXXX:MusicBrainz Album Status': 'releasestatus',\n    'TXXX:MusicBrainz Album Type': 'releasetype',\n    /**\n     * Release country as documented: https://picard.musicbrainz.org/docs/mappings/#cite_note-0\n     */\n    'TXXX:MusicBrainz Album Release Country': 'releasecountry',\n    /**\n     * Release country as implemented // ToDo: report\n     */\n    'TXXX:RELEASECOUNTRY': 'releasecountry',\n    'TXXX:SCRIPT': 'script',\n    TLAN: 'language',\n    TCOP: 'copyright',\n    WCOP: 'license',\n    TENC: 'encodedby',\n    TSSE: 'encodersettings',\n    'TXXX:BARCODE': 'barcode',\n    'TXXX:ISRC': 'isrc',\n    TSRC: 'isrc',\n    'TXXX:ASIN': 'asin',\n    'TXXX:originalyear': 'originalyear',\n    'UFID:http://musicbrainz.org': 'musicbrainz_recordingid',\n    'TXXX:MusicBrainz Release Track Id': 'musicbrainz_trackid',\n    'TXXX:MusicBrainz Album Id': 'musicbrainz_albumid',\n    'TXXX:MusicBrainz Artist Id': 'musicbrainz_artistid',\n    'TXXX:MusicBrainz Album Artist Id': 'musicbrainz_albumartistid',\n    'TXXX:MusicBrainz Release Group Id': 'musicbrainz_releasegroupid',\n    'TXXX:MusicBrainz Work Id': 'musicbrainz_workid',\n    'TXXX:MusicBrainz TRM Id': 'musicbrainz_trmid',\n    'TXXX:MusicBrainz Disc Id': 'musicbrainz_discid',\n    'TXXX:ACOUSTID_ID': 'acoustid_id',\n    'TXXX:Acoustid Id': 'acoustid_id',\n    'TXXX:Acoustid Fingerprint': 'acoustid_fingerprint',\n    'TXXX:MusicIP PUID': 'musicip_puid',\n    'TXXX:MusicMagic Fingerprint': 'musicip_fingerprint',\n    WOAR: 'website',\n    // id3v2.4\n    // ToDo: In same sequence as defined at http://id3.org/id3v2.4.0-frames\n    TDRC: 'date', // date YYYY-MM-DD\n    TYER: 'year',\n    TDOR: 'originaldate',\n    // 'TMCL:instrument': 'performer:instrument',\n    'TIPL:arranger': 'arranger',\n    'TIPL:engineer': 'engineer',\n    'TIPL:producer': 'producer',\n    'TIPL:DJ-mix': 'djmixer',\n    'TIPL:mix': 'mixer',\n    TMOO: 'mood',\n    // additional mappings:\n    SYLT: 'lyrics',\n    TSST: 'discsubtitle',\n    TKEY: 'key',\n    COMM: 'comment',\n    TOPE: 'originalartist',\n    // Windows Media Player\n    'PRIV:AverageLevel': 'averageLevel',\n    'PRIV:PeakLevel': 'peakLevel',\n    // Discogs\n    'TXXX:DISCOGS_ARTIST_ID': 'discogs_artist_id',\n    'TXXX:DISCOGS_ARTISTS': 'artists',\n    'TXXX:DISCOGS_ARTIST_NAME': 'artists',\n    'TXXX:DISCOGS_ALBUM_ARTISTS': 'albumartist',\n    'TXXX:DISCOGS_CATALOG': 'catalognumber',\n    'TXXX:DISCOGS_COUNTRY': 'releasecountry',\n    'TXXX:DISCOGS_DATE': 'originaldate',\n    'TXXX:DISCOGS_LABEL': 'label',\n    'TXXX:DISCOGS_LABEL_ID': 'discogs_label_id',\n    'TXXX:DISCOGS_MASTER_RELEASE_ID': 'discogs_master_release_id',\n    'TXXX:DISCOGS_RATING': 'discogs_rating',\n    'TXXX:DISCOGS_RELEASED': 'date',\n    'TXXX:DISCOGS_RELEASE_ID': 'discogs_release_id',\n    'TXXX:DISCOGS_VOTES': 'discogs_votes',\n    'TXXX:CATALOGID': 'catalognumber',\n    'TXXX:STYLE': 'genre',\n    'TXXX:REPLAYGAIN_TRACK_PEAK': 'replaygain_track_peak',\n    'TXXX:REPLAYGAIN_TRACK_GAIN': 'replaygain_track_gain',\n    'TXXX:REPLAYGAIN_ALBUM_PEAK': 'replaygain_album_peak',\n    'TXXX:REPLAYGAIN_ALBUM_GAIN': 'replaygain_album_gain',\n    'TXXX:MP3GAIN_MINMAX': 'replaygain_track_minmax',\n    'TXXX:MP3GAIN_ALBUM_MINMAX': 'replaygain_album_minmax',\n    'TXXX:MP3GAIN_UNDO': 'replaygain_undo',\n    MVNM: 'movement',\n    MVIN: 'movementIndex',\n    PCST: 'podcast',\n    TCAT: 'category',\n    TDES: 'description',\n    TDRL: 'releasedate',\n    TGID: 'podcastId',\n    TKWD: 'keywords',\n    WFED: 'podcasturl',\n    GRP1: 'grouping'\n};\nexport class ID3v24TagMapper extends CaseInsensitiveTagMap {\n    static toRating(popm) {\n        return {\n            source: popm.email,\n            rating: popm.rating > 0 ? (popm.rating - 1) / 254 * CommonTagMapper.maxRatingScore : undefined\n        };\n    }\n    constructor() {\n        super(['ID3v2.3', 'ID3v2.4'], id3v24TagMap);\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag to post map\n     * @param warnings Wil be used to register (collect) warnings\n     */\n    postMap(tag, warnings) {\n        switch (tag.id) {\n            case 'UFID':\n                {\n                    // decode MusicBrainz Recording Id\n                    const idTag = tag.value;\n                    if (idTag.owner_identifier === 'http://musicbrainz.org') {\n                        tag.id += `:${idTag.owner_identifier}`;\n                        tag.value = decodeString(idTag.identifier, 'latin1'); // latin1 == iso-8859-1\n                    }\n                }\n                break;\n            case 'PRIV':\n                {\n                    const customTag = tag.value;\n                    switch (customTag.owner_identifier) {\n                        // decode Windows Media Player\n                        case 'AverageLevel':\n                        case 'PeakValue':\n                            tag.id += `:${customTag.owner_identifier}`;\n                            tag.value = customTag.data.length === 4 ? UINT32_LE.get(customTag.data, 0) : null;\n                            if (tag.value === null) {\n                                warnings.addWarning('Failed to parse PRIV:PeakValue');\n                            }\n                            break;\n                        default:\n                            warnings.addWarning(`Unknown PRIV owner-identifier: ${customTag.data}`);\n                    }\n                }\n                break;\n            case 'POPM':\n                tag.value = ID3v24TagMapper.toRating(tag.value);\n                break;\n            default:\n                break;\n        }\n    }\n}\n//# sourceMappingURL=ID3v24TagMapper.js.map","import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ASF Metadata tag mappings.\n * See http://msdn.microsoft.com/en-us/library/ms867702.aspx\n */\nconst asfTagMap = {\n    Title: 'title',\n    Author: 'artist',\n    'WM/AlbumArtist': 'albumartist',\n    'WM/AlbumTitle': 'album',\n    'WM/Year': 'date', // changed to 'year' to 'date' based on Picard mappings; ToDo: check me\n    'WM/OriginalReleaseTime': 'originaldate',\n    'WM/OriginalReleaseYear': 'originalyear',\n    Description: 'comment',\n    'WM/TrackNumber': 'track',\n    'WM/PartOfSet': 'disk',\n    'WM/Genre': 'genre',\n    'WM/Composer': 'composer',\n    'WM/Lyrics': 'lyrics',\n    'WM/AlbumSortOrder': 'albumsort',\n    'WM/TitleSortOrder': 'titlesort',\n    'WM/ArtistSortOrder': 'artistsort',\n    'WM/AlbumArtistSortOrder': 'albumartistsort',\n    'WM/ComposerSortOrder': 'composersort',\n    'WM/Writer': 'lyricist',\n    'WM/Conductor': 'conductor',\n    'WM/ModifiedBy': 'remixer',\n    'WM/Engineer': 'engineer',\n    'WM/Producer': 'producer',\n    'WM/DJMixer': 'djmixer',\n    'WM/Mixer': 'mixer',\n    'WM/Publisher': 'label',\n    'WM/ContentGroupDescription': 'grouping',\n    'WM/SubTitle': 'subtitle',\n    'WM/SetSubTitle': 'discsubtitle',\n    // 'WM/PartOfSet': 'totaldiscs',\n    'WM/IsCompilation': 'compilation',\n    'WM/SharedUserRating': 'rating',\n    'WM/BeatsPerMinute': 'bpm',\n    'WM/Mood': 'mood',\n    'WM/Media': 'media',\n    'WM/CatalogNo': 'catalognumber',\n    'MusicBrainz/Album Status': 'releasestatus',\n    'MusicBrainz/Album Type': 'releasetype',\n    'MusicBrainz/Album Release Country': 'releasecountry',\n    'WM/Script': 'script',\n    'WM/Language': 'language',\n    Copyright: 'copyright',\n    LICENSE: 'license',\n    'WM/EncodedBy': 'encodedby',\n    'WM/EncodingSettings': 'encodersettings',\n    'WM/Barcode': 'barcode',\n    'WM/ISRC': 'isrc',\n    'MusicBrainz/Track Id': 'musicbrainz_recordingid',\n    'MusicBrainz/Release Track Id': 'musicbrainz_trackid',\n    'MusicBrainz/Album Id': 'musicbrainz_albumid',\n    'MusicBrainz/Artist Id': 'musicbrainz_artistid',\n    'MusicBrainz/Album Artist Id': 'musicbrainz_albumartistid',\n    'MusicBrainz/Release Group Id': 'musicbrainz_releasegroupid',\n    'MusicBrainz/Work Id': 'musicbrainz_workid',\n    'MusicBrainz/TRM Id': 'musicbrainz_trmid',\n    'MusicBrainz/Disc Id': 'musicbrainz_discid',\n    'Acoustid/Id': 'acoustid_id',\n    'Acoustid/Fingerprint': 'acoustid_fingerprint',\n    'MusicIP/PUID': 'musicip_puid',\n    'WM/ARTISTS': 'artists',\n    'WM/InitialKey': 'key',\n    ASIN: 'asin',\n    'WM/Work': 'work',\n    'WM/AuthorURL': 'website',\n    'WM/Picture': 'picture'\n};\nexport class AsfTagMapper extends CommonTagMapper {\n    static toRating(rating) {\n        return {\n            rating: Number.parseFloat(rating + 1) / 5\n        };\n    }\n    constructor() {\n        super(['asf'], asfTagMap);\n    }\n    postMap(tag) {\n        switch (tag.id) {\n            case 'WM/SharedUserRating': {\n                const keys = tag.id.split(':');\n                tag.value = AsfTagMapper.toRating(tag.value);\n                tag.id = keys[0];\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=AsfTagMapper.js.map","import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * ID3v2.2 tag mappings\n */\nexport const id3v22TagMap = {\n    TT2: 'title',\n    TP1: 'artist',\n    TP2: 'albumartist',\n    TAL: 'album',\n    TYE: 'year',\n    COM: 'comment',\n    TRK: 'track',\n    TPA: 'disk',\n    TCO: 'genre',\n    PIC: 'picture',\n    TCM: 'composer',\n    TOR: 'originaldate',\n    TOT: 'originalalbum',\n    TXT: 'lyricist',\n    TP3: 'conductor',\n    TPB: 'label',\n    TT1: 'grouping',\n    TT3: 'subtitle',\n    TLA: 'language',\n    TCR: 'copyright',\n    WCP: 'license',\n    TEN: 'encodedby',\n    TSS: 'encodersettings',\n    WAR: 'website',\n    PCS: 'podcast',\n    TCP: \"compilation\",\n    TDR: 'date',\n    TS2: 'albumartistsort',\n    TSA: 'albumsort',\n    TSC: 'composersort',\n    TSP: 'artistsort',\n    TST: 'titlesort',\n    WFD: 'podcasturl',\n    TBP: 'bpm'\n};\nexport class ID3v22TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['ID3v2.2'], id3v22TagMap);\n    }\n}\n//# sourceMappingURL=ID3v22TagMapper.js.map","import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * ID3v2.2 tag mappings\n */\nconst apev2TagMap = {\n    Title: 'title',\n    Artist: 'artist',\n    Artists: 'artists',\n    'Album Artist': 'albumartist',\n    Album: 'album',\n    Year: 'date',\n    Originalyear: 'originalyear',\n    Originaldate: 'originaldate',\n    Releasedate: 'releasedate',\n    Comment: 'comment',\n    Track: 'track',\n    Disc: 'disk',\n    DISCNUMBER: 'disk', // ToDo: backwards compatibility', valid tag?\n    Genre: 'genre',\n    'Cover Art (Front)': 'picture',\n    'Cover Art (Back)': 'picture',\n    Composer: 'composer',\n    Lyrics: 'lyrics',\n    ALBUMSORT: 'albumsort',\n    TITLESORT: 'titlesort',\n    WORK: 'work',\n    ARTISTSORT: 'artistsort',\n    ALBUMARTISTSORT: 'albumartistsort',\n    COMPOSERSORT: 'composersort',\n    Lyricist: 'lyricist',\n    Writer: 'writer',\n    Conductor: 'conductor',\n    // 'Performer=artist (instrument)': 'performer:instrument',\n    MixArtist: 'remixer',\n    Arranger: 'arranger',\n    Engineer: 'engineer',\n    Producer: 'producer',\n    DJMixer: 'djmixer',\n    Mixer: 'mixer',\n    Label: 'label',\n    Grouping: 'grouping',\n    Subtitle: 'subtitle',\n    DiscSubtitle: 'discsubtitle',\n    Compilation: 'compilation',\n    BPM: 'bpm',\n    Mood: 'mood',\n    Media: 'media',\n    CatalogNumber: 'catalognumber',\n    MUSICBRAINZ_ALBUMSTATUS: 'releasestatus',\n    MUSICBRAINZ_ALBUMTYPE: 'releasetype',\n    RELEASECOUNTRY: 'releasecountry',\n    Script: 'script',\n    Language: 'language',\n    Copyright: 'copyright',\n    LICENSE: 'license',\n    EncodedBy: 'encodedby',\n    EncoderSettings: 'encodersettings',\n    Barcode: 'barcode',\n    ISRC: 'isrc',\n    ASIN: 'asin',\n    musicbrainz_trackid: 'musicbrainz_recordingid',\n    musicbrainz_releasetrackid: 'musicbrainz_trackid',\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n    Acoustid_Id: 'acoustid_id',\n    ACOUSTID_FINGERPRINT: 'acoustid_fingerprint',\n    MUSICIP_PUID: 'musicip_puid',\n    Weblink: 'website',\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n    MP3GAIN_MINMAX: 'replaygain_track_minmax',\n    MP3GAIN_UNDO: 'replaygain_undo'\n};\nexport class APEv2TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['APEv2'], apev2TagMap);\n    }\n}\n//# sourceMappingURL=APEv2TagMapper.js.map","import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * Ref: https://github.com/sergiomb2/libmp4v2/wiki/iTunesMetadata\n */\nconst mp4TagMap = {\n    '©nam': 'title',\n    '©ART': 'artist',\n    aART: 'albumartist',\n    /**\n     * ToDo: Album artist seems to be stored here while Picard documentation says: aART\n     */\n    '----:com.apple.iTunes:Band': 'albumartist',\n    '©alb': 'album',\n    '©day': 'date',\n    '©cmt': 'comment',\n    '©com': 'comment',\n    trkn: 'track',\n    disk: 'disk',\n    '©gen': 'genre',\n    covr: 'picture',\n    '©wrt': 'composer',\n    '©lyr': 'lyrics',\n    soal: 'albumsort',\n    sonm: 'titlesort',\n    soar: 'artistsort',\n    soaa: 'albumartistsort',\n    soco: 'composersort',\n    '----:com.apple.iTunes:LYRICIST': 'lyricist',\n    '----:com.apple.iTunes:CONDUCTOR': 'conductor',\n    '----:com.apple.iTunes:REMIXER': 'remixer',\n    '----:com.apple.iTunes:ENGINEER': 'engineer',\n    '----:com.apple.iTunes:PRODUCER': 'producer',\n    '----:com.apple.iTunes:DJMIXER': 'djmixer',\n    '----:com.apple.iTunes:MIXER': 'mixer',\n    '----:com.apple.iTunes:LABEL': 'label',\n    '©grp': 'grouping',\n    '----:com.apple.iTunes:SUBTITLE': 'subtitle',\n    '----:com.apple.iTunes:DISCSUBTITLE': 'discsubtitle',\n    cpil: 'compilation',\n    tmpo: 'bpm',\n    '----:com.apple.iTunes:MOOD': 'mood',\n    '----:com.apple.iTunes:MEDIA': 'media',\n    '----:com.apple.iTunes:CATALOGNUMBER': 'catalognumber',\n    tvsh: 'tvShow',\n    tvsn: 'tvSeason',\n    tves: 'tvEpisode',\n    sosn: 'tvShowSort',\n    tven: 'tvEpisodeId',\n    tvnn: 'tvNetwork',\n    pcst: 'podcast',\n    purl: 'podcasturl',\n    '----:com.apple.iTunes:MusicBrainz Album Status': 'releasestatus',\n    '----:com.apple.iTunes:MusicBrainz Album Type': 'releasetype',\n    '----:com.apple.iTunes:MusicBrainz Album Release Country': 'releasecountry',\n    '----:com.apple.iTunes:SCRIPT': 'script',\n    '----:com.apple.iTunes:LANGUAGE': 'language',\n    cprt: 'copyright',\n    '©cpy': 'copyright',\n    '----:com.apple.iTunes:LICENSE': 'license',\n    '©too': 'encodedby',\n    pgap: 'gapless',\n    '----:com.apple.iTunes:BARCODE': 'barcode',\n    '----:com.apple.iTunes:ISRC': 'isrc',\n    '----:com.apple.iTunes:ASIN': 'asin',\n    '----:com.apple.iTunes:NOTES': 'comment',\n    '----:com.apple.iTunes:MusicBrainz Track Id': 'musicbrainz_recordingid',\n    '----:com.apple.iTunes:MusicBrainz Release Track Id': 'musicbrainz_trackid',\n    '----:com.apple.iTunes:MusicBrainz Album Id': 'musicbrainz_albumid',\n    '----:com.apple.iTunes:MusicBrainz Artist Id': 'musicbrainz_artistid',\n    '----:com.apple.iTunes:MusicBrainz Album Artist Id': 'musicbrainz_albumartistid',\n    '----:com.apple.iTunes:MusicBrainz Release Group Id': 'musicbrainz_releasegroupid',\n    '----:com.apple.iTunes:MusicBrainz Work Id': 'musicbrainz_workid',\n    '----:com.apple.iTunes:MusicBrainz TRM Id': 'musicbrainz_trmid',\n    '----:com.apple.iTunes:MusicBrainz Disc Id': 'musicbrainz_discid',\n    '----:com.apple.iTunes:Acoustid Id': 'acoustid_id',\n    '----:com.apple.iTunes:Acoustid Fingerprint': 'acoustid_fingerprint',\n    '----:com.apple.iTunes:MusicIP PUID': 'musicip_puid',\n    '----:com.apple.iTunes:fingerprint': 'musicip_fingerprint',\n    '----:com.apple.iTunes:replaygain_track_gain': 'replaygain_track_gain',\n    '----:com.apple.iTunes:replaygain_track_peak': 'replaygain_track_peak',\n    '----:com.apple.iTunes:replaygain_album_gain': 'replaygain_album_gain',\n    '----:com.apple.iTunes:replaygain_album_peak': 'replaygain_album_peak',\n    '----:com.apple.iTunes:replaygain_track_minmax': 'replaygain_track_minmax',\n    '----:com.apple.iTunes:replaygain_album_minmax': 'replaygain_album_minmax',\n    '----:com.apple.iTunes:replaygain_undo': 'replaygain_undo',\n    // Additional mappings:\n    gnre: 'genre', // ToDo: check mapping\n    '----:com.apple.iTunes:ALBUMARTISTSORT': 'albumartistsort',\n    '----:com.apple.iTunes:ARTISTS': 'artists',\n    '----:com.apple.iTunes:ORIGINALDATE': 'originaldate',\n    '----:com.apple.iTunes:ORIGINALYEAR': 'originalyear',\n    '----:com.apple.iTunes:RELEASEDATE': 'releasedate',\n    // '----:com.apple.iTunes:PERFORMER': 'performer'\n    desc: 'description',\n    ldes: 'longDescription',\n    '©mvn': 'movement',\n    '©mvi': 'movementIndex',\n    '©mvc': 'movementTotal',\n    '©wrk': 'work',\n    catg: 'category',\n    egid: 'podcastId',\n    hdvd: 'hdVideo',\n    keyw: 'keywords',\n    shwm: 'showMovement',\n    stik: 'stik',\n    rate: 'rating'\n};\nexport const tagType = 'iTunes';\nexport class MP4TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super([tagType], mp4TagMap);\n    }\n    postMap(tag, warnings) {\n        switch (tag.id) {\n            case 'rate':\n                tag.value = {\n                    source: undefined,\n                    rating: Number.parseFloat(tag.value) / 100\n                };\n                break;\n        }\n    }\n}\n//# sourceMappingURL=MP4TagMapper.js.map","import { CommonTagMapper } from '../../common/GenericTagMapper.js';\n/**\n * Vorbis tag mappings\n *\n * Mapping from native header format to one or possibly more 'common' entries\n * The common entries aim to read the same information from different media files\n * independent of the underlying format\n */\nconst vorbisTagMap = {\n    TITLE: 'title',\n    ARTIST: 'artist',\n    ARTISTS: 'artists',\n    ALBUMARTIST: 'albumartist',\n    'ALBUM ARTIST': 'albumartist',\n    ALBUM: 'album',\n    DATE: 'date',\n    ORIGINALDATE: 'originaldate',\n    ORIGINALYEAR: 'originalyear',\n    RELEASEDATE: 'releasedate',\n    COMMENT: 'comment',\n    TRACKNUMBER: 'track',\n    DISCNUMBER: 'disk',\n    GENRE: 'genre',\n    METADATA_BLOCK_PICTURE: 'picture',\n    COMPOSER: 'composer',\n    LYRICS: 'lyrics',\n    ALBUMSORT: 'albumsort',\n    TITLESORT: 'titlesort',\n    WORK: 'work',\n    ARTISTSORT: 'artistsort',\n    ALBUMARTISTSORT: 'albumartistsort',\n    COMPOSERSORT: 'composersort',\n    LYRICIST: 'lyricist',\n    WRITER: 'writer',\n    CONDUCTOR: 'conductor',\n    // 'PERFORMER=artist (instrument)': 'performer:instrument', // ToDo\n    REMIXER: 'remixer',\n    ARRANGER: 'arranger',\n    ENGINEER: 'engineer',\n    PRODUCER: 'producer',\n    DJMIXER: 'djmixer',\n    MIXER: 'mixer',\n    LABEL: 'label',\n    GROUPING: 'grouping',\n    SUBTITLE: 'subtitle',\n    DISCSUBTITLE: 'discsubtitle',\n    TRACKTOTAL: 'totaltracks',\n    DISCTOTAL: 'totaldiscs',\n    COMPILATION: 'compilation',\n    RATING: 'rating',\n    BPM: 'bpm',\n    KEY: 'key',\n    MOOD: 'mood',\n    MEDIA: 'media',\n    CATALOGNUMBER: 'catalognumber',\n    RELEASESTATUS: 'releasestatus',\n    RELEASETYPE: 'releasetype',\n    RELEASECOUNTRY: 'releasecountry',\n    SCRIPT: 'script',\n    LANGUAGE: 'language',\n    COPYRIGHT: 'copyright',\n    LICENSE: 'license',\n    ENCODEDBY: 'encodedby',\n    ENCODERSETTINGS: 'encodersettings',\n    BARCODE: 'barcode',\n    ISRC: 'isrc',\n    ASIN: 'asin',\n    MUSICBRAINZ_TRACKID: 'musicbrainz_recordingid',\n    MUSICBRAINZ_RELEASETRACKID: 'musicbrainz_trackid',\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n    ACOUSTID_ID: 'acoustid_id',\n    ACOUSTID_ID_FINGERPRINT: 'acoustid_fingerprint',\n    MUSICIP_PUID: 'musicip_puid',\n    // 'FINGERPRINT=MusicMagic Fingerprint {fingerprint}': 'musicip_fingerprint', // ToDo\n    WEBSITE: 'website',\n    NOTES: 'notes',\n    TOTALTRACKS: 'totaltracks',\n    TOTALDISCS: 'totaldiscs',\n    // Discogs\n    DISCOGS_ARTIST_ID: 'discogs_artist_id',\n    DISCOGS_ARTISTS: 'artists',\n    DISCOGS_ARTIST_NAME: 'artists',\n    DISCOGS_ALBUM_ARTISTS: 'albumartist',\n    DISCOGS_CATALOG: 'catalognumber',\n    DISCOGS_COUNTRY: 'releasecountry',\n    DISCOGS_DATE: 'originaldate',\n    DISCOGS_LABEL: 'label',\n    DISCOGS_LABEL_ID: 'discogs_label_id',\n    DISCOGS_MASTER_RELEASE_ID: 'discogs_master_release_id',\n    DISCOGS_RATING: 'discogs_rating',\n    DISCOGS_RELEASED: 'date',\n    DISCOGS_RELEASE_ID: 'discogs_release_id',\n    DISCOGS_VOTES: 'discogs_votes',\n    CATALOGID: 'catalognumber',\n    STYLE: 'genre',\n    //\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n    REPLAYGAIN_ALBUM_GAIN: 'replaygain_album_gain',\n    REPLAYGAIN_ALBUM_PEAK: 'replaygain_album_peak',\n    // To Sure if these (REPLAYGAIN_MINMAX, REPLAYGAIN_ALBUM_MINMAX & REPLAYGAIN_UNDO) are used for Vorbis:\n    REPLAYGAIN_MINMAX: 'replaygain_track_minmax',\n    REPLAYGAIN_ALBUM_MINMAX: 'replaygain_album_minmax',\n    REPLAYGAIN_UNDO: 'replaygain_undo'\n};\nexport class VorbisTagMapper extends CommonTagMapper {\n    static toRating(email, rating, maxScore) {\n        return {\n            source: email ? email.toLowerCase() : undefined,\n            rating: (Number.parseFloat(rating) / maxScore) * CommonTagMapper.maxRatingScore\n        };\n    }\n    constructor() {\n        super(['vorbis'], vorbisTagMap);\n    }\n    postMap(tag) {\n        if (tag.id === 'RATING') {\n            // The way Winamp 5.666 assigns rating\n            tag.value = VorbisTagMapper.toRating(undefined, tag.value, 100);\n        }\n        else if (tag.id.indexOf('RATING:') === 0) {\n            const keys = tag.id.split(':');\n            tag.value = VorbisTagMapper.toRating(keys[1], tag.value, 1);\n            tag.id = keys[0];\n        }\n    }\n}\n//# sourceMappingURL=VorbisTagMapper.js.map","import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * RIFF Info Tags; part of the EXIF 2.3\n * Ref: http://owl.phy.queensu.ca/~phil/exiftool/TagNames/RIFF.html#Info\n */\nexport const riffInfoTagMap = {\n    IART: 'artist', // Artist\n    ICRD: 'date', // DateCreated\n    INAM: 'title', // Title\n    TITL: 'title',\n    IPRD: 'album', // Product\n    ITRK: 'track',\n    IPRT: 'track', // Additional tag for track index\n    COMM: 'comment', // Comments\n    ICMT: 'comment', // Country\n    ICNT: 'releasecountry',\n    GNRE: 'genre', // Genre\n    IWRI: 'writer', // WrittenBy\n    RATE: 'rating',\n    YEAR: 'year',\n    ISFT: 'encodedby', // Software\n    CODE: 'encodedby', // EncodedBy\n    TURL: 'website', // URL,\n    IGNR: 'genre', // Genre\n    IENG: 'engineer', // Engineer\n    ITCH: 'technician', // Technician\n    IMED: 'media', // Original Media\n    IRPD: 'album' // Product, where the file was intended for\n};\nexport class RiffInfoTagMapper extends CommonTagMapper {\n    constructor() {\n        super(['exif'], riffInfoTagMap);\n    }\n}\n//# sourceMappingURL=RiffInfoTagMap.js.map","import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * EBML Tag map\n */\nconst ebmlTagMap = {\n    'segment:title': 'title',\n    'album:ARTIST': 'albumartist',\n    'album:ARTISTSORT': 'albumartistsort',\n    'album:TITLE': 'album',\n    'album:DATE_RECORDED': 'originaldate',\n    'album:DATE_RELEASED': 'releasedate',\n    'album:PART_NUMBER': 'disk',\n    'album:TOTAL_PARTS': 'totaltracks',\n    'track:ARTIST': 'artist',\n    'track:ARTISTSORT': 'artistsort',\n    'track:TITLE': 'title',\n    'track:PART_NUMBER': 'track',\n    'track:MUSICBRAINZ_TRACKID': 'musicbrainz_recordingid',\n    'track:MUSICBRAINZ_ALBUMID': 'musicbrainz_albumid',\n    'track:MUSICBRAINZ_ARTISTID': 'musicbrainz_artistid',\n    'track:PUBLISHER': 'label',\n    'track:GENRE': 'genre',\n    'track:ENCODER': 'encodedby',\n    'track:ENCODER_OPTIONS': 'encodersettings',\n    'edition:TOTAL_PARTS': 'totaldiscs',\n    picture: 'picture'\n};\nexport class MatroskaTagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['matroska'], ebmlTagMap);\n    }\n}\n//# sourceMappingURL=MatroskaTagMapper.js.map","import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ID3v1 tag mappings\n */\nconst tagMap = {\n    NAME: 'title',\n    AUTH: 'artist',\n    '(c) ': 'copyright',\n    ANNO: 'comment'\n};\nexport class AiffTagMapper extends CommonTagMapper {\n    constructor() {\n        super(['AIFF'], tagMap);\n    }\n}\n//# sourceMappingURL=AiffTagMap.js.map","import { ID3v1TagMapper } from '../id3v1/ID3v1TagMap.js';\nimport { ID3v24TagMapper } from '../id3v2/ID3v24TagMapper.js';\nimport { AsfTagMapper } from '../asf/AsfTagMapper.js';\nimport { ID3v22TagMapper } from '../id3v2/ID3v22TagMapper.js';\nimport { APEv2TagMapper } from '../apev2/APEv2TagMapper.js';\nimport { MP4TagMapper } from '../mp4/MP4TagMapper.js';\nimport { VorbisTagMapper } from '../ogg/vorbis/VorbisTagMapper.js';\nimport { RiffInfoTagMapper } from '../riff/RiffInfoTagMap.js';\nimport { MatroskaTagMapper } from '../matroska/MatroskaTagMapper.js';\nimport { AiffTagMapper } from '../aiff/AiffTagMap.js';\nimport { InternalParserError } from '../ParseError.js';\nexport class CombinedTagMapper {\n    constructor() {\n        this.tagMappers = {};\n        [\n            new ID3v1TagMapper(),\n            new ID3v22TagMapper(),\n            new ID3v24TagMapper(),\n            new MP4TagMapper(),\n            new MP4TagMapper(),\n            new VorbisTagMapper(),\n            new APEv2TagMapper(),\n            new AsfTagMapper(),\n            new RiffInfoTagMapper(),\n            new MatroskaTagMapper(),\n            new AiffTagMapper()\n        ].forEach(mapper => {\n            this.registerTagMapper(mapper);\n        });\n    }\n    /**\n     * Convert native to generic (common) tags\n     * @param tagType Originating tag format\n     * @param tag     Native tag to map to a generic tag id\n     * @param warnings\n     * @return Generic tag result (output of this function)\n     */\n    mapTag(tagType, tag, warnings) {\n        const tagMapper = this.tagMappers[tagType];\n        if (tagMapper) {\n            return this.tagMappers[tagType].mapGenericTag(tag, warnings);\n        }\n        throw new InternalParserError(`No generic tag mapper defined for tag-format: ${tagType}`);\n    }\n    registerTagMapper(genericTagMapper) {\n        for (const tagType of genericTagMapper.tagTypes) {\n            this.tagMappers[tagType] = genericTagMapper;\n        }\n    }\n}\n//# sourceMappingURL=CombinedTagMapper.js.map","import { TrackTypeValueToKeyMap } from '../type.js';\nimport initDebug from 'debug';\nimport { isSingleton, isUnique } from './GenericTagTypes.js';\nimport { CombinedTagMapper } from './CombinedTagMapper.js';\nimport { CommonTagMapper } from './GenericTagMapper.js';\nimport { toRatio } from './Util.js';\nimport { fileTypeFromBuffer } from 'file-type';\nimport { parseLrc } from '../lrc/LyricsParser.js';\nconst debug = initDebug('music-metadata:collector');\nconst TagPriority = ['matroska', 'APEv2', 'vorbis', 'ID3v2.4', 'ID3v2.3', 'ID3v2.2', 'exif', 'asf', 'iTunes', 'AIFF', 'ID3v1'];\n/**\n * Provided to the parser to uodate the metadata result.\n * Responsible for triggering async updates\n */\nexport class MetadataCollector {\n    constructor(opts) {\n        this.format = {\n            tagTypes: [],\n            trackInfo: []\n        };\n        this.native = {};\n        this.common = {\n            track: { no: null, of: null },\n            disk: { no: null, of: null },\n            movementIndex: { no: null, of: null }\n        };\n        this.quality = {\n            warnings: []\n        };\n        /**\n         * Keeps track of origin priority for each mapped id\n         */\n        this.commonOrigin = {};\n        /**\n         * Maps a tag type to a priority\n         */\n        this.originPriority = {};\n        this.tagMapper = new CombinedTagMapper();\n        this.opts = opts;\n        let priority = 1;\n        for (const tagType of TagPriority) {\n            this.originPriority[tagType] = priority++;\n        }\n        this.originPriority.artificial = 500; // Filled using alternative tags\n        this.originPriority.id3v1 = 600; // Consider as the worst because of the field length limit\n    }\n    /**\n     * @returns {boolean} true if one or more tags have been found\n     */\n    hasAny() {\n        return Object.keys(this.native).length > 0;\n    }\n    addStreamInfo(streamInfo) {\n        debug(`streamInfo: type=${streamInfo.type ? TrackTypeValueToKeyMap[streamInfo.type] : '?'}, codec=${streamInfo.codecName}`);\n        this.format.trackInfo.push(streamInfo);\n    }\n    setFormat(key, value) {\n        debug(`format: ${key} = ${value}`);\n        this.format[key] = value; // as any to override readonly\n        if (this.opts?.observer) {\n            this.opts.observer({ metadata: this, tag: { type: 'format', id: key, value } });\n        }\n    }\n    async addTag(tagType, tagId, value) {\n        debug(`tag ${tagType}.${tagId} = ${value}`);\n        if (!this.native[tagType]) {\n            this.format.tagTypes.push(tagType);\n            this.native[tagType] = [];\n        }\n        this.native[tagType].push({ id: tagId, value });\n        await this.toCommon(tagType, tagId, value);\n    }\n    addWarning(warning) {\n        this.quality.warnings.push({ message: warning });\n    }\n    async postMap(tagType, tag) {\n        // Common tag (alias) found\n        // check if we need to do something special with common tag\n        // if the event has been aliased then we need to clean it before\n        // it is emitted to the user. e.g. genre (20) -> Electronic\n        switch (tag.id) {\n            case 'artist':\n                if (this.commonOrigin.artist === this.originPriority[tagType]) {\n                    // Assume the artist field is used as artists\n                    return this.postMap('artificial', { id: 'artists', value: tag.value });\n                }\n                if (!this.common.artists) {\n                    // Fill artists using artist source\n                    this.setGenericTag('artificial', { id: 'artists', value: tag.value });\n                }\n                break;\n            case 'artists':\n                if (!this.common.artist || this.commonOrigin.artist === this.originPriority.artificial) {\n                    if (!this.common.artists || this.common.artists.indexOf(tag.value) === -1) {\n                        // Fill artist using artists source\n                        const artists = (this.common.artists || []).concat([tag.value]);\n                        const value = joinArtists(artists);\n                        const artistTag = { id: 'artist', value };\n                        this.setGenericTag('artificial', artistTag);\n                    }\n                }\n                break;\n            case 'picture':\n                return this.postFixPicture(tag.value).then(picture => {\n                    if (picture !== null) {\n                        tag.value = picture;\n                        this.setGenericTag(tagType, tag);\n                    }\n                });\n            case 'totaltracks':\n                this.common.track.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'totaldiscs':\n                this.common.disk.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'movementTotal':\n                this.common.movementIndex.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'track':\n            case 'disk':\n            case 'movementIndex': {\n                const of = this.common[tag.id].of; // store of value, maybe maybe overwritten\n                this.common[tag.id] = CommonTagMapper.normalizeTrack(tag.value);\n                this.common[tag.id].of = of != null ? of : this.common[tag.id].of;\n                return;\n            }\n            case 'bpm':\n            case 'year':\n            case 'originalyear':\n                tag.value = Number.parseInt(tag.value, 10);\n                break;\n            case 'date': {\n                // ToDo: be more strict on 'YYYY...'\n                const year = Number.parseInt(tag.value.substr(0, 4), 10);\n                if (!Number.isNaN(year)) {\n                    this.common.year = year;\n                }\n                break;\n            }\n            case 'discogs_label_id':\n            case 'discogs_release_id':\n            case 'discogs_master_release_id':\n            case 'discogs_artist_id':\n            case 'discogs_votes':\n                tag.value = typeof tag.value === 'string' ? Number.parseInt(tag.value, 10) : tag.value;\n                break;\n            case 'replaygain_track_gain':\n            case 'replaygain_track_peak':\n            case 'replaygain_album_gain':\n            case 'replaygain_album_peak':\n                tag.value = toRatio(tag.value);\n                break;\n            case 'replaygain_track_minmax':\n                tag.value = tag.value.split(',').map(v => Number.parseInt(v, 10));\n                break;\n            case 'replaygain_undo': {\n                const minMix = tag.value.split(',').map(v => Number.parseInt(v, 10));\n                tag.value = {\n                    leftChannel: minMix[0],\n                    rightChannel: minMix[1]\n                };\n                break;\n            }\n            case 'gapless': // iTunes gap-less flag\n            case 'compilation':\n            case 'podcast':\n            case 'showMovement':\n                tag.value = tag.value === '1' || tag.value === 1; // boolean\n                break;\n            case 'isrc': { // Only keep unique values\n                const commonTag = this.common[tag.id];\n                if (commonTag && commonTag.indexOf(tag.value) !== -1)\n                    return;\n                break;\n            }\n            case 'comment':\n                if (typeof tag.value === 'string') {\n                    tag.value = { text: tag.value };\n                }\n                if (tag.value.descriptor === 'iTunPGAP') {\n                    this.setGenericTag(tagType, { id: 'gapless', value: tag.value.text === '1' });\n                }\n                break;\n            case 'lyrics':\n                if (typeof tag.value === 'string') {\n                    tag.value = parseLrc(tag.value);\n                }\n                break;\n            default:\n            // nothing to do\n        }\n        if (tag.value !== null) {\n            this.setGenericTag(tagType, tag);\n        }\n    }\n    /**\n     * Convert native tags to common tags\n     * @returns {IAudioMetadata} Native + common tags\n     */\n    toCommonMetadata() {\n        return {\n            format: this.format,\n            native: this.native,\n            quality: this.quality,\n            common: this.common\n        };\n    }\n    /**\n     * Fix some common issues with picture object\n     * @param picture Picture\n     */\n    async postFixPicture(picture) {\n        if (picture.data && picture.data.length > 0) {\n            if (!picture.format) {\n                const fileType = await fileTypeFromBuffer(Uint8Array.from(picture.data)); // ToDO: remove Buffer\n                if (fileType) {\n                    picture.format = fileType.mime;\n                }\n                else {\n                    return null;\n                }\n            }\n            picture.format = picture.format.toLocaleLowerCase();\n            switch (picture.format) {\n                case 'image/jpg':\n                    picture.format = 'image/jpeg'; // ToDo: register warning\n            }\n            return picture;\n        }\n        this.addWarning(\"Empty picture tag found\");\n        return null;\n    }\n    /**\n     * Convert native tag to common tags\n     */\n    async toCommon(tagType, tagId, value) {\n        const tag = { id: tagId, value };\n        const genericTag = this.tagMapper.mapTag(tagType, tag, this);\n        if (genericTag) {\n            await this.postMap(tagType, genericTag);\n        }\n    }\n    /**\n     * Set generic tag\n     */\n    setGenericTag(tagType, tag) {\n        debug(`common.${tag.id} = ${tag.value}`);\n        const prio0 = this.commonOrigin[tag.id] || 1000;\n        const prio1 = this.originPriority[tagType];\n        if (isSingleton(tag.id)) {\n            if (prio1 <= prio0) {\n                this.common[tag.id] = tag.value;\n                this.commonOrigin[tag.id] = prio1;\n            }\n            else {\n                return debug(`Ignore native tag (singleton): ${tagType}.${tag.id} = ${tag.value}`);\n            }\n        }\n        else {\n            if (prio1 === prio0) {\n                if (!isUnique(tag.id) || this.common[tag.id].indexOf(tag.value) === -1) {\n                    this.common[tag.id].push(tag.value);\n                }\n                else {\n                    debug(`Ignore duplicate value: ${tagType}.${tag.id} = ${tag.value}`);\n                }\n                // no effect? this.commonOrigin[tag.id] = prio1;\n            }\n            else if (prio1 < prio0) {\n                this.common[tag.id] = [tag.value];\n                this.commonOrigin[tag.id] = prio1;\n            }\n            else {\n                return debug(`Ignore native tag (list): ${tagType}.${tag.id} = ${tag.value}`);\n            }\n        }\n        if (this.opts?.observer) {\n            this.opts.observer({ metadata: this, tag: { type: 'common', id: tag.id, value: tag.value } });\n        }\n        // ToDo: trigger metadata event\n    }\n}\nexport function joinArtists(artists) {\n    if (artists.length > 2) {\n        return `${artists.slice(0, artists.length - 1).join(', ')} & ${artists[artists.length - 1]}`;\n    }\n    return artists.join(' & ');\n}\n//# sourceMappingURL=MetadataCollector.js.map","import { LyricsContentType, TimestampFormat } from '../type.js';\n/**\n * Parse LRC (Lyrics) formatted text\n * Ref: https://en.wikipedia.org/wiki/LRC_(file_format)\n * @param lrcString\n */\nexport function parseLrc(lrcString) {\n    const lines = lrcString.split('\\n');\n    const syncText = [];\n    // Regular expression to match LRC timestamps (e.g., [00:45.52])\n    const timestampRegex = /\\[(\\d{2}):(\\d{2})\\.(\\d{2})\\]/;\n    for (const line of lines) {\n        const match = line.match(timestampRegex);\n        if (match) {\n            const minutes = Number.parseInt(match[1], 10);\n            const seconds = Number.parseInt(match[2], 10);\n            const hundredths = Number.parseInt(match[3], 10);\n            // Convert the timestamp to milliseconds, as per TimestampFormat.milliseconds\n            const timestamp = (minutes * 60 + seconds) * 1000 + hundredths * 10;\n            // Get the text portion of the line (e.g., \"あの蝶は自由になれたかな\")\n            const text = line.replace(timestampRegex, '').trim();\n            syncText.push({ timestamp, text });\n        }\n    }\n    // Creating the ILyricsTag object\n    return {\n        contentType: LyricsContentType.lyrics,\n        timeStampFormat: TimestampFormat.milliseconds,\n        syncText,\n    };\n}\n//# sourceMappingURL=LyricsParser.js.map","export const mpegParserLoader = {\n    parserType: 'mpeg',\n    extensions: ['.mp2', '.mp3', '.m2a', '.aac', 'aacp'],\n    mimeTypes: ['audio/mpeg', 'audio/mp3', 'audio/aacs', 'audio/aacp'],\n    async load() {\n        return (await import('./MpegParser.js')).MpegParser;\n    }\n};\n//# sourceMappingURL=MpegLoader.js.map","export const apeParserLoader = {\n    parserType: 'apev2',\n    extensions: ['.ape'],\n    mimeTypes: ['audio/ape', 'audio/monkeys-audio'],\n    async load() {\n        return (await import('./APEv2Parser.js')).APEv2Parser;\n    }\n};\n//# sourceMappingURL=Apev2Loader.js.map","export const asfParserLoader = {\n    parserType: 'asf',\n    extensions: ['.asf'],\n    mimeTypes: ['audio/ms-wma', 'video/ms-wmv', 'audio/ms-asf', 'video/ms-asf', 'application/vnd.ms-asf'],\n    async load() {\n        return (await import('./AsfParser.js')).AsfParser;\n    }\n};\n//# sourceMappingURL=AsfLoader.js.map","export const dsdiffParserLoader = {\n    parserType: 'dsdiff',\n    extensions: ['.dff'],\n    mimeTypes: ['audio/dsf', 'audio/dsd'],\n    async load() {\n        return (await import('./DsdiffParser.js')).DsdiffParser;\n    }\n};\n//# sourceMappingURL=DsdiffLoader.js.map","export const aiffParserLoader = {\n    parserType: 'aiff',\n    extensions: ['.aif', 'aiff', 'aifc'],\n    mimeTypes: ['audio/aiff', 'audio/aif', 'audio/aifc', 'application/aiff'],\n    async load() {\n        return (await import('./AiffParser.js')).AIFFParser;\n    }\n};\n//# sourceMappingURL=AiffLoader.js.map","export const dsfParserLoader = {\n    parserType: 'dsf',\n    extensions: ['.dsf'],\n    mimeTypes: ['audio/dsf'],\n    async load() {\n        return (await import('./DsfParser.js')).DsfParser;\n    }\n};\n//# sourceMappingURL=DsfLoader.js.map","export const flacParserLoader = {\n    parserType: 'flac',\n    extensions: ['.flac'],\n    mimeTypes: ['audio/flac'],\n    async load() {\n        return (await import('./FlacParser.js')).FlacParser;\n    }\n};\n//# sourceMappingURL=FlacLoader.js.map","export const matroskaParserLoader = {\n    parserType: 'matroska',\n    extensions: ['.mka', '.mkv', '.mk3d', '.mks', 'webm'],\n    mimeTypes: ['audio/matroska', 'video/matroska', 'audio/webm', 'video/webm'],\n    async load() {\n        return (await import('./MatroskaParser.js')).MatroskaParser;\n    }\n};\n//# sourceMappingURL=MatroskaLoader.js.map","export const mp4ParserLoader = {\n    parserType: 'mp4',\n    extensions: ['.mp4', '.m4a', '.m4b', '.m4pa', 'm4v', 'm4r', '3gp'],\n    mimeTypes: ['audio/mp4', 'audio/m4a', 'video/m4v', 'video/mp4'],\n    async load() {\n        return (await import('./MP4Parser.js')).MP4Parser;\n    }\n};\n//# sourceMappingURL=Mp4Loader.js.map","export const musepackParserLoader = {\n    parserType: 'musepack',\n    extensions: ['.mpc'],\n    mimeTypes: ['audio/musepack'],\n    async load() {\n        return (await import('./MusepackParser.js')).MusepackParser;\n    }\n};\n//# sourceMappingURL=MusepackLoader.js.map","export const oggParserLoader = {\n    parserType: 'ogg',\n    extensions: ['.ogg', '.ogv', '.oga', '.ogm', '.ogx', '.opus', '.spx'],\n    mimeTypes: ['audio/ogg', 'audio/opus', 'audio/speex', 'video/ogg'], // RFC 7845, RFC 6716, RFC 5574\n    async load() {\n        return (await import('./OggParser.js')).OggParser;\n    }\n};\n//# sourceMappingURL=OggLoader.js.map","export const wavpackParserLoader = {\n    parserType: 'wavpack',\n    extensions: ['.wv', '.wvp'],\n    mimeTypes: ['audio/wavpack'],\n    async load() {\n        return (await import('./WavPackParser.js')).WavPackParser;\n    }\n};\n//# sourceMappingURL=WavPackLoader.js.map","export const riffParserLoader = {\n    parserType: 'riff',\n    extensions: ['.wav', 'wave', '.bwf'],\n    mimeTypes: ['audio/vnd.wave', 'audio/wav', 'audio/wave'],\n    async load() {\n        return (await import('./WaveParser.js')).WaveParser;\n    }\n};\n//# sourceMappingURL=WaveLoader.js.map","import { fileTypeFromBuffer } from 'file-type';\nimport ContentType from 'content-type';\nimport { parse as mimeTypeParse } from 'media-typer';\nimport initDebug from 'debug';\nimport { MetadataCollector } from './common/MetadataCollector.js';\nimport { mpegParserLoader } from './mpeg/MpegLoader.js';\nimport { CouldNotDetermineFileTypeError, UnsupportedFileTypeError } from './ParseError.js';\nimport { apeParserLoader } from './apev2/Apev2Loader.js';\nimport { asfParserLoader } from './asf/AsfLoader.js';\nimport { dsdiffParserLoader } from './dsdiff/DsdiffLoader.js';\nimport { aiffParserLoader } from './aiff/AiffLoader.js';\nimport { dsfParserLoader } from './dsf/DsfLoader.js';\nimport { flacParserLoader } from './flac/FlacLoader.js';\nimport { matroskaParserLoader } from './matroska/MatroskaLoader.js';\nimport { mp4ParserLoader } from './mp4/Mp4Loader.js';\nimport { musepackParserLoader } from './musepack/MusepackLoader.js';\nimport { oggParserLoader } from './ogg/OggLoader.js';\nimport { wavpackParserLoader } from './wavpack/WavPackLoader.js';\nimport { riffParserLoader } from './wav/WaveLoader.js';\nimport { scanAppendingHeaders } from './core.js';\nconst debug = initDebug('music-metadata:parser:factory');\nexport function parseHttpContentType(contentType) {\n    const type = ContentType.parse(contentType);\n    const mime = mimeTypeParse(type.type);\n    return {\n        type: mime.type,\n        subtype: mime.subtype,\n        suffix: mime.suffix,\n        parameters: type.parameters\n    };\n}\nexport class ParserFactory {\n    constructor() {\n        this.parsers = [];\n        [\n            flacParserLoader,\n            mpegParserLoader,\n            apeParserLoader,\n            mp4ParserLoader,\n            matroskaParserLoader,\n            riffParserLoader,\n            oggParserLoader,\n            asfParserLoader,\n            aiffParserLoader,\n            wavpackParserLoader,\n            musepackParserLoader,\n            dsfParserLoader,\n            dsdiffParserLoader\n        ].forEach(parser => this.registerParser(parser));\n    }\n    registerParser(parser) {\n        this.parsers.push(parser);\n    }\n    async parse(tokenizer, parserLoader, opts) {\n        if (tokenizer.supportsRandomAccess()) {\n            debug('tokenizer supports random-access, scanning for appending headers');\n            await scanAppendingHeaders(tokenizer, opts);\n        }\n        else {\n            debug('tokenizer does not support random-access, cannot scan for appending headers');\n        }\n        if (!parserLoader) {\n            const buf = new Uint8Array(4100);\n            if (tokenizer.fileInfo.mimeType) {\n                parserLoader = this.findLoaderForContentType(tokenizer.fileInfo.mimeType);\n            }\n            if (!parserLoader && tokenizer.fileInfo.path) {\n                parserLoader = this.findLoaderForExtension(tokenizer.fileInfo.path);\n            }\n            if (!parserLoader) {\n                // Parser could not be determined on MIME-type or extension\n                debug('Guess parser on content...');\n                await tokenizer.peekBuffer(buf, { mayBeLess: true });\n                const guessedType = await fileTypeFromBuffer(buf);\n                if (!guessedType || !guessedType.mime) {\n                    throw new CouldNotDetermineFileTypeError('Failed to determine audio format');\n                }\n                debug(`Guessed file type is mime=${guessedType.mime}, extension=${guessedType.ext}`);\n                parserLoader = this.findLoaderForContentType(guessedType.mime);\n                if (!parserLoader) {\n                    throw new UnsupportedFileTypeError(`Guessed MIME-type not supported: ${guessedType.mime}`);\n                }\n            }\n        }\n        // Parser found, execute parser\n        debug(`Loading ${parserLoader.parserType} parser...`);\n        const metadata = new MetadataCollector(opts);\n        const ParserImpl = await parserLoader.load();\n        const parser = new ParserImpl(metadata, tokenizer, opts ?? {});\n        debug(`Parser ${parserLoader.parserType} loaded`);\n        await parser.parse();\n        return metadata.toCommonMetadata();\n    }\n    /**\n     * @param filePath - Path, filename or extension to audio file\n     * @return Parser submodule name\n     */\n    findLoaderForExtension(filePath) {\n        if (!filePath)\n            return;\n        const extension = getExtension(filePath).toLocaleLowerCase() || filePath;\n        return this.parsers.find(parser => parser.extensions.indexOf(extension) !== -1);\n    }\n    findLoaderForContentType(httpContentType) {\n        let mime;\n        if (!httpContentType)\n            return;\n        try {\n            mime = parseHttpContentType(httpContentType);\n        }\n        catch (err) {\n            debug(`Invalid HTTP Content-Type header value: ${httpContentType}`);\n            return;\n        }\n        const subType = mime.subtype.indexOf('x-') === 0 ? mime.subtype.substring(2) : mime.subtype;\n        return this.parsers.find(parser => parser.mimeTypes.find(loader => loader.indexOf(`${mime.type}/${subType}`) !== -1));\n    }\n    getSupportedMimeTypes() {\n        const mimeTypeSet = new Set();\n        this.parsers.forEach(loader => {\n            loader.mimeTypes.forEach(mimeType => {\n                mimeTypeSet.add(mimeType);\n                mimeTypeSet.add(mimeType.replace('/', '/x-'));\n            });\n        });\n        return Array.from(mimeTypeSet);\n    }\n}\nfunction getExtension(fname) {\n    const i = fname.lastIndexOf('.');\n    return i === -1 ? '' : fname.slice(i);\n}\n//# sourceMappingURL=ParserFactory.js.map","export const endTag2 = 'LYRICS200';\nexport async function getLyricsHeaderLength(tokenizer) {\n    const fileSize = tokenizer.fileInfo.size;\n    if (fileSize >= 143) {\n        const buf = new Uint8Array(15);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(buf, { position: fileSize - 143 });\n        tokenizer.setPosition(position); // Restore position\n        const txt = new TextDecoder('latin1').decode(buf);\n        const tag = txt.slice(6);\n        if (tag === endTag2) {\n            return Number.parseInt(txt.slice(0, 6), 10) + 15;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=Lyrics3.js.map","/**\n * Primary entry point, Node.js specific entry point is MusepackParser.ts\n */\nimport { fromWebStream, fromBuffer } from 'strtok3';\nimport { ParserFactory } from './ParserFactory.js';\nimport { APEv2Parser } from './apev2/APEv2Parser.js';\nimport { hasID3v1Header } from './id3v1/ID3v1Parser.js';\nimport { getLyricsHeaderLength } from './lyrics3/Lyrics3.js';\nexport { LyricsContentType, TimestampFormat } from './type.js';\nexport { CouldNotDetermineFileTypeError, UnsupportedFileTypeError } from './ParseError.js';\nexport * from './ParseError.js';\n/**\n * Parse Web API File\n * Requires Blob to be able to stream using a ReadableStreamBYOBReader, only available since Node.js ≥ 20\n * @param blob - Blob to parse\n * @param options - Parsing options\n * @returns Metadata\n */\nexport async function parseBlob(blob, options = {}) {\n    const fileInfo = { mimeType: blob.type, size: blob.size };\n    if (blob instanceof File) {\n        fileInfo.path = blob.name;\n    }\n    return parseWebStream(blob.stream(), fileInfo, options);\n}\n/**\n * Parse audio from Web Stream.Readable\n * @param webStream - WebStream to read the audio track from\n * @param options - Parsing options\n * @param fileInfo - File information object or MIME-type string\n * @returns Metadata\n */\nexport async function parseWebStream(webStream, fileInfo, options = {}) {\n    const tokenizer = fromWebStream(webStream, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    try {\n        return await parseFromTokenizer(tokenizer, options);\n    }\n    finally {\n        await tokenizer.close();\n    }\n}\n/**\n * Parse audio from memory\n * @param uint8Array - Uint8Array holding audio data\n * @param fileInfo - File information object or MIME-type string\n * @param options - Parsing options\n * @returns Metadata\n * Ref: https://github.com/Borewit/strtok3/blob/e6938c81ff685074d5eb3064a11c0b03ca934c1d/src/index.ts#L15\n */\nexport async function parseBuffer(uint8Array, fileInfo, options = {}) {\n    const tokenizer = fromBuffer(uint8Array, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    return parseFromTokenizer(tokenizer, options);\n}\n/**\n * Parse audio from ITokenizer source\n * @param tokenizer - Audio source implementing the tokenizer interface\n * @param options - Parsing options\n * @returns Metadata\n */\nexport function parseFromTokenizer(tokenizer, options) {\n    const parserFactory = new ParserFactory();\n    return parserFactory.parse(tokenizer, undefined, options);\n}\n/**\n * Create a dictionary ordered by their tag id (key)\n * @param nativeTags list of tags\n * @returns tags indexed by id\n */\nexport function orderTags(nativeTags) {\n    const tags = {};\n    for (const { id, value } of nativeTags) {\n        if (!tags[id]) {\n            tags[id] = [];\n        }\n        tags[id].push(value);\n    }\n    return tags;\n}\n/**\n * Convert rating to 1-5 star rating\n * @param rating Normalized rating [0..1] (common.rating[n].rating)\n * @returns Number of stars: 1, 2, 3, 4 or 5 stars\n */\nexport function ratingToStars(rating) {\n    return rating === undefined ? 0 : 1 + Math.round(rating * 4);\n}\n/**\n * Select most likely cover image.\n * @param pictures Usually metadata.common.picture\n * @return Cover image, if any, otherwise null\n */\nexport function selectCover(pictures) {\n    return pictures ? pictures.reduce((acc, cur) => {\n        if (cur.name && cur.name.toLowerCase() in ['front', 'cover', 'cover (front)'])\n            return cur;\n        return acc;\n    }) : null;\n}\nexport async function scanAppendingHeaders(tokenizer, options = {}) {\n    let apeOffset = tokenizer.fileInfo.size;\n    if (await hasID3v1Header(tokenizer)) {\n        apeOffset -= 128;\n        const lyricsLen = await getLyricsHeaderLength(tokenizer);\n        apeOffset -= lyricsLen;\n    }\n    options.apeHeader = await APEv2Parser.findApeFooterOffset(tokenizer, apeOffset);\n}\n/**\n * Implementation only available when loaded as Node.js\n * This method will throw an Error, always.\n */\nexport async function parseFile(filePath, options = {}) {\n    throw new Error('This function require a Node engine. To load Web API File objects use parseBlob instead.');\n}\n/**\n * Implementation only available when loaded as Node.js\n * This method will throw an Error, always.\n */\nexport async function parseStream(stream, fileInfo, options = {}) {\n    throw new Error('This function require a Node engine.');\n}\n/**\n * Return a list of supported mime-types\n */\nexport function getSupportedMimeTypes() {\n    return new ParserFactory().getSupportedMimeTypes();\n}\n//# sourceMappingURL=core.js.map","import * as ieee754 from 'ieee754';\n// Primitive types\nfunction dv(array) {\n    return new DataView(array.buffer, array.byteOffset);\n}\n/**\n * 8-bit unsigned integer\n */\nexport const UINT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getUint8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit unsigned integer, Little Endian byte order\n */\nexport const UINT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit unsigned integer, Big Endian byte order\n */\nexport const UINT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit unsigned integer, Little Endian byte order\n */\nexport const UINT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return dataView.getUint8(offset) + (dataView.getUint16(offset + 1, true) << 8);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit unsigned integer, Big Endian byte order\n */\nexport const UINT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return (dataView.getUint16(offset) << 8) + dataView.getUint8(offset + 2);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit unsigned integer, Little Endian byte order\n */\nexport const UINT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit unsigned integer, Big Endian byte order\n */\nexport const UINT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 8-bit signed integer\n */\nexport const INT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getInt8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit signed integer, Big Endian byte order\n */\nexport const INT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit signed integer, Little Endian byte order\n */\nexport const INT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit signed integer, Little Endian byte order\n */\nexport const INT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_LE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit signed integer, Big Endian byte order\n */\nexport const INT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_BE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 64-bit unsigned integer, Little Endian byte order\n */\nexport const UINT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Little Endian byte order\n */\nexport const INT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit unsigned integer, Big Endian byte order\n */\nexport const UINT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Big Endian byte order\n */\nexport const INT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, big endian\n */\nexport const Float16_BE = {\n    len: 2,\n    get(dataView, offset) {\n        return ieee754.read(dataView, offset, false, 10, this.len);\n    },\n    put(dataView, offset, value) {\n        ieee754.write(dataView, value, offset, false, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, little endian\n */\nexport const Float16_LE = {\n    len: 2,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 10, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, big endian\n */\nexport const Float32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, little endian\n */\nexport const Float32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, big endian\n */\nexport const Float64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, little endian\n */\nexport const Float64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, big endian\n */\nexport const Float80_BE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, false, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, false, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, little endian\n */\nexport const Float80_LE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * Ignore a given number of bytes\n */\nexport class IgnoreType {\n    /**\n     * @param len number of bytes to ignore\n     */\n    constructor(len) {\n        this.len = len;\n    }\n    // ToDo: don't read, but skip data\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    get(array, off) {\n    }\n}\nexport class Uint8ArrayType {\n    constructor(len) {\n        this.len = len;\n    }\n    get(array, offset) {\n        return array.subarray(offset, offset + this.len);\n    }\n}\n/**\n * Consume a fixed number of bytes from the stream and return a string with a specified encoding.\n */\nexport class StringType {\n    constructor(len, encoding) {\n        this.len = len;\n        this.encoding = encoding;\n        this.textDecoder = new TextDecoder(encoding);\n    }\n    get(uint8Array, offset) {\n        return this.textDecoder.decode(uint8Array.subarray(offset, offset + this.len));\n    }\n}\n/**\n * ANSI Latin 1 String\n * Using windows-1252 / ISO 8859-1 decoding\n */\nexport class AnsiStringType {\n    constructor(len) {\n        this.len = len;\n        this.textDecoder = new TextDecoder('windows-1252');\n    }\n    get(uint8Array, offset = 0) {\n        return this.textDecoder.decode(uint8Array.subarray(offset, offset + this.len));\n    }\n}\n","import { stringToUint8Array, uint8ArrayToString } from 'uint8array-extras';\nimport * as util from './Util.js';\nimport { InternalParserError, FieldDecodingError } from '../ParseError.js';\nconst validFourCC = /^[\\x21-\\x7e©][\\x20-\\x7e\\x00()]{3}/;\n/**\n * Token for read FourCC\n * Ref: https://en.wikipedia.org/wiki/FourCC\n */\nexport const FourCcToken = {\n    len: 4,\n    get: (buf, off) => {\n        const id = uint8ArrayToString(buf.slice(off, off + FourCcToken.len), 'latin1');\n        if (!id.match(validFourCC)) {\n            throw new FieldDecodingError(`FourCC contains invalid characters: ${util.a2hex(id)} \"${id}\"`);\n        }\n        return id;\n    },\n    put: (buffer, offset, id) => {\n        const str = stringToUint8Array(id);\n        if (str.length !== 4)\n            throw new InternalParserError('Invalid length');\n        buffer.set(str, offset);\n        return offset + 4;\n    }\n};\n//# sourceMappingURL=FourCC.js.map","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","import * as Token from 'token-types';\nimport { FourCcToken } from '../common/FourCC.js';\nexport const DataType = {\n    text_utf8: 0,\n    binary: 1,\n    external_info: 2,\n    reserved: 3\n};\n/**\n * APE_DESCRIPTOR: defines the sizes (and offsets) of all the pieces, as well as the MD5 checksum\n */\nexport const DescriptorParser = {\n    len: 52,\n    get: (buf, off) => {\n        return {\n            // should equal 'MAC '\n            ID: FourCcToken.get(buf, off),\n            // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n            version: Token.UINT32_LE.get(buf, off + 4) / 1000,\n            // the number of descriptor bytes (allows later expansion of this header)\n            descriptorBytes: Token.UINT32_LE.get(buf, off + 8),\n            // the number of header APE_HEADER bytes\n            headerBytes: Token.UINT32_LE.get(buf, off + 12),\n            // the number of header APE_HEADER bytes\n            seekTableBytes: Token.UINT32_LE.get(buf, off + 16),\n            // the number of header data bytes (from original file)\n            headerDataBytes: Token.UINT32_LE.get(buf, off + 20),\n            // the number of bytes of APE frame data\n            apeFrameDataBytes: Token.UINT32_LE.get(buf, off + 24),\n            // the high order number of APE frame data bytes\n            apeFrameDataBytesHigh: Token.UINT32_LE.get(buf, off + 28),\n            // the terminating data of the file (not including tag data)\n            terminatingDataBytes: Token.UINT32_LE.get(buf, off + 32),\n            // the MD5 hash of the file (see notes for usage... it's a little tricky)\n            fileMD5: new Token.Uint8ArrayType(16).get(buf, off + 36)\n        };\n    }\n};\n/**\n * APE_HEADER: describes all of the necessary information about the APE file\n */\nexport const Header = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            // the compression level (see defines I.E. COMPRESSION_LEVEL_FAST)\n            compressionLevel: Token.UINT16_LE.get(buf, off),\n            // any format flags (for future use)\n            formatFlags: Token.UINT16_LE.get(buf, off + 2),\n            // the number of audio blocks in one frame\n            blocksPerFrame: Token.UINT32_LE.get(buf, off + 4),\n            // the number of audio blocks in the final frame\n            finalFrameBlocks: Token.UINT32_LE.get(buf, off + 8),\n            // the total number of frames\n            totalFrames: Token.UINT32_LE.get(buf, off + 12),\n            // the bits per sample (typically 16)\n            bitsPerSample: Token.UINT16_LE.get(buf, off + 16),\n            // the number of channels (1 or 2)\n            channel: Token.UINT16_LE.get(buf, off + 18),\n            // the sample rate (typically 44100)\n            sampleRate: Token.UINT32_LE.get(buf, off + 20)\n        };\n    }\n};\n/**\n * APE Tag Header/Footer Version 2.0\n * TAG: describes all the properties of the file [optional]\n */\nexport const TagFooter = {\n    len: 32,\n    get: (buf, off) => {\n        return {\n            // should equal 'APETAGEX'\n            ID: new Token.StringType(8, 'ascii').get(buf, off),\n            // equals CURRENT_APE_TAG_VERSION\n            version: Token.UINT32_LE.get(buf, off + 8),\n            // the complete size of the tag, including this footer (excludes header)\n            size: Token.UINT32_LE.get(buf, off + 12),\n            // the number of fields in the tag\n            fields: Token.UINT32_LE.get(buf, off + 16),\n            // reserved for later use (must be zero),\n            flags: parseTagFlags(Token.UINT32_LE.get(buf, off + 20))\n        };\n    }\n};\n/**\n * APE Tag v2.0 Item Header\n */\nexport const TagItemHeader = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Length of assigned value in bytes\n            size: Token.UINT32_LE.get(buf, off),\n            // reserved for later use (must be zero),\n            flags: parseTagFlags(Token.UINT32_LE.get(buf, off + 4))\n        };\n    }\n};\nexport function parseTagFlags(flags) {\n    return {\n        containsHeader: isBitSet(flags, 31),\n        containsFooter: isBitSet(flags, 30),\n        isHeader: isBitSet(flags, 29),\n        readOnly: isBitSet(flags, 0),\n        dataType: (flags & 6) >> 1\n    };\n}\n/**\n * @param num {number}\n * @param bit 0 is least significant bit (LSB)\n * @return {boolean} true if bit is 1; otherwise false\n */\nexport function isBitSet(num, bit) {\n    return (num & 1 << bit) !== 0;\n}\n//# sourceMappingURL=APEv2Token.js.map","import initDebug from 'debug';\nimport * as strtok3 from 'strtok3';\nimport { StringType } from 'token-types';\nimport { uint8ArrayToString } from 'uint8array-extras';\nimport * as util from '../common/Util.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { DataType, DescriptorParser, Header, TagFooter, TagItemHeader } from './APEv2Token.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nconst debug = initDebug('music-metadata:parser:APEv2');\nconst tagFormat = 'APEv2';\nconst preamble = 'APETAGEX';\nexport class ApeContentError extends makeUnexpectedFileContentError('APEv2') {\n}\nexport class APEv2Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.ape = {};\n    }\n    static tryParseApeHeader(metadata, tokenizer, options) {\n        const apeParser = new APEv2Parser(metadata, tokenizer, options);\n        return apeParser.tryParseApeHeader();\n    }\n    /**\n     * Calculate the media file duration\n     * @param ah ApeHeader\n     * @return {number} duration in seconds\n     */\n    static calculateDuration(ah) {\n        let duration = ah.totalFrames > 1 ? ah.blocksPerFrame * (ah.totalFrames - 1) : 0;\n        duration += ah.finalFrameBlocks;\n        return duration / ah.sampleRate;\n    }\n    /**\n     * Calculates the APEv1 / APEv2 first field offset\n     * @param tokenizer\n     * @param offset\n     */\n    static async findApeFooterOffset(tokenizer, offset) {\n        // Search for APE footer header at the end of the file\n        const apeBuf = new Uint8Array(TagFooter.len);\n        const position = tokenizer.position;\n        if (offset <= TagFooter.len) {\n            debug(`Offset is too small to read APE footer: offset=${offset}`);\n            return undefined;\n        }\n        if (offset > TagFooter.len) {\n            await tokenizer.readBuffer(apeBuf, { position: offset - TagFooter.len });\n            tokenizer.setPosition(position);\n            const tagFooter = TagFooter.get(apeBuf, 0);\n            if (tagFooter.ID === 'APETAGEX') {\n                if (tagFooter.flags.isHeader) {\n                    debug(`APE Header found at offset=${offset - TagFooter.len}`);\n                }\n                else {\n                    debug(`APE Footer found at offset=${offset - TagFooter.len}`);\n                    offset -= tagFooter.size;\n                }\n                return { footer: tagFooter, offset };\n            }\n        }\n    }\n    static parseTagFooter(metadata, buffer, options) {\n        const footer = TagFooter.get(buffer, buffer.length - TagFooter.len);\n        if (footer.ID !== preamble)\n            throw new ApeContentError('Unexpected APEv2 Footer ID preamble value');\n        strtok3.fromBuffer(buffer);\n        const apeParser = new APEv2Parser(metadata, strtok3.fromBuffer(buffer), options);\n        return apeParser.parseTags(footer);\n    }\n    /**\n     * Parse APEv1 / APEv2 header if header signature found\n     */\n    async tryParseApeHeader() {\n        if (this.tokenizer.fileInfo.size && this.tokenizer.fileInfo.size - this.tokenizer.position < TagFooter.len) {\n            debug(\"No APEv2 header found, end-of-file reached\");\n            return;\n        }\n        const footer = await this.tokenizer.peekToken(TagFooter);\n        if (footer.ID === preamble) {\n            await this.tokenizer.ignore(TagFooter.len);\n            return this.parseTags(footer);\n        }\n        debug(`APEv2 header not found at offset=${this.tokenizer.position}`);\n        if (this.tokenizer.fileInfo.size) {\n            // Try to read the APEv2 header using just the footer-header\n            const remaining = this.tokenizer.fileInfo.size - this.tokenizer.position; // ToDo: take ID3v1 into account\n            const buffer = new Uint8Array(remaining);\n            await this.tokenizer.readBuffer(buffer);\n            return APEv2Parser.parseTagFooter(this.metadata, buffer, this.options);\n        }\n    }\n    async parse() {\n        const descriptor = await this.tokenizer.readToken(DescriptorParser);\n        if (descriptor.ID !== 'MAC ')\n            throw new ApeContentError('Unexpected descriptor ID');\n        this.ape.descriptor = descriptor;\n        const lenExp = descriptor.descriptorBytes - DescriptorParser.len;\n        const header = await (lenExp > 0 ? this.parseDescriptorExpansion(lenExp) : this.parseHeader());\n        await this.tokenizer.ignore(header.forwardBytes);\n        return this.tryParseApeHeader();\n    }\n    async parseTags(footer) {\n        const keyBuffer = new Uint8Array(256); // maximum tag key length\n        let bytesRemaining = footer.size - TagFooter.len;\n        debug(`Parse APE tags at offset=${this.tokenizer.position}, size=${bytesRemaining}`);\n        for (let i = 0; i < footer.fields; i++) {\n            if (bytesRemaining < TagItemHeader.len) {\n                this.metadata.addWarning(`APEv2 Tag-header: ${footer.fields - i} items remaining, but no more tag data to read.`);\n                break;\n            }\n            // Only APEv2 tag has tag item headers\n            const tagItemHeader = await this.tokenizer.readToken(TagItemHeader);\n            bytesRemaining -= TagItemHeader.len + tagItemHeader.size;\n            await this.tokenizer.peekBuffer(keyBuffer, { length: Math.min(keyBuffer.length, bytesRemaining) });\n            let zero = util.findZero(keyBuffer, 0, keyBuffer.length);\n            const key = await this.tokenizer.readToken(new StringType(zero, 'ascii'));\n            await this.tokenizer.ignore(1);\n            bytesRemaining -= key.length + 1;\n            switch (tagItemHeader.flags.dataType) {\n                case DataType.text_utf8: { // utf-8 text-string\n                    const value = await this.tokenizer.readToken(new StringType(tagItemHeader.size, 'utf8'));\n                    const values = value.split(/\\x00/g);\n                    await Promise.all(values.map(val => this.metadata.addTag(tagFormat, key, val)));\n                    break;\n                }\n                case DataType.binary: // binary (probably artwork)\n                    if (this.options.skipCovers) {\n                        await this.tokenizer.ignore(tagItemHeader.size);\n                    }\n                    else {\n                        const picData = new Uint8Array(tagItemHeader.size);\n                        await this.tokenizer.readBuffer(picData);\n                        zero = util.findZero(picData, 0, picData.length);\n                        const description = uint8ArrayToString(picData.slice(0, zero));\n                        const data = picData.slice(zero + 1);\n                        await this.metadata.addTag(tagFormat, key, {\n                            description,\n                            data\n                        });\n                    }\n                    break;\n                case DataType.external_info:\n                    debug(`Ignore external info ${key}`);\n                    await this.tokenizer.ignore(tagItemHeader.size);\n                    break;\n                case DataType.reserved:\n                    debug(`Ignore external info ${key}`);\n                    this.metadata.addWarning(`APEv2 header declares a reserved datatype for \"${key}\"`);\n                    await this.tokenizer.ignore(tagItemHeader.size);\n                    break;\n            }\n        }\n    }\n    async parseDescriptorExpansion(lenExp) {\n        await this.tokenizer.ignore(lenExp);\n        return this.parseHeader();\n    }\n    async parseHeader() {\n        const header = await this.tokenizer.readToken(Header);\n        // ToDo before\n        this.metadata.setFormat('lossless', true);\n        this.metadata.setFormat('container', 'Monkey\\'s Audio');\n        this.metadata.setFormat('bitsPerSample', header.bitsPerSample);\n        this.metadata.setFormat('sampleRate', header.sampleRate);\n        this.metadata.setFormat('numberOfChannels', header.channel);\n        this.metadata.setFormat('duration', APEv2Parser.calculateDuration(header));\n        if (!this.ape.descriptor) {\n            throw new ApeContentError('Missing APE descriptor');\n        }\n        return {\n            forwardBytes: this.ape.descriptor.seekTableBytes + this.ape.descriptor.headerDataBytes +\n                this.ape.descriptor.apeFrameDataBytes + this.ape.descriptor.terminatingDataBytes\n        };\n    }\n}\n//# sourceMappingURL=APEv2Parser.js.map","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","export const TargetType = {\n    10: 'shot',\n    20: 'scene',\n    30: 'track',\n    40: 'part',\n    50: 'album',\n    60: 'edition',\n    70: 'collection'\n};\nexport const TrackType = {\n    video: 0x01,\n    audio: 0x02,\n    complex: 0x03,\n    logo: 0x04,\n    subtitle: 0x11,\n    button: 0x12,\n    control: 0x20\n};\nexport const TrackTypeValueToKeyMap = {\n    [TrackType.video]: 'video',\n    [TrackType.audio]: 'audio',\n    [TrackType.complex]: 'complex',\n    [TrackType.logo]: 'logo',\n    [TrackType.subtitle]: 'subtitle',\n    [TrackType.button]: 'button',\n    [TrackType.control]: 'control'\n};\n//# sourceMappingURL=types.js.map","import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\n/**\n * The picture type according to the ID3v2 APIC frame\n * Ref: http://id3.org/id3v2.3.0#Attached_picture\n */\nexport const AttachedPictureType = {\n    0: 'Other',\n    1: \"32x32 pixels 'file icon' (PNG only)\",\n    2: 'Other file icon',\n    3: 'Cover (front)',\n    4: 'Cover (back)',\n    5: 'Leaflet page',\n    6: 'Media (e.g. label side of CD)',\n    7: 'Lead artist/lead performer/soloist',\n    8: 'Artist/performer',\n    9: 'Conductor',\n    10: 'Band/Orchestra',\n    11: 'Composer',\n    12: 'Lyricist/text writer',\n    13: 'Recording Location',\n    14: 'During recording',\n    15: 'During performance',\n    16: 'Movie/video screen capture',\n    17: 'A bright coloured fish',\n    18: 'Illustration',\n    19: 'Band/artist logotype',\n    20: 'Publisher/Studio logotype'\n};\n/**\n * https://id3.org/id3v2.3.0#Synchronised_lyrics.2Ftext\n */\nexport const LyricsContentType = {\n    other: 0,\n    lyrics: 1,\n    text: 2,\n    movement_part: 3,\n    events: 4,\n    chord: 5,\n    trivia_pop: 6,\n};\nexport const TimestampFormat = {\n    notSynchronized0: 0,\n    mpegFrameNumber: 1,\n    milliseconds: 2\n};\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexport const UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | ((buf[off + 2]) << 7) |\n            ((buf[off + 1]) << 14) | ((buf[off]) << 21);\n    },\n    len: 4\n};\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n * ToDo\n */\nexport const ID3v2Header = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // ID3v2/file identifier   \"ID3\"\n            fileIdentifier: new Token.StringType(3, 'ascii').get(buf, off),\n            // ID3v2 versionIndex\n            version: {\n                major: Token.INT8.get(buf, off + 3),\n                revision: Token.INT8.get(buf, off + 4)\n            },\n            // ID3v2 flags\n            flags: {\n                // Unsynchronisation\n                unsynchronisation: util.getBit(buf, off + 5, 7),\n                // Extended header\n                isExtendedHeader: util.getBit(buf, off + 5, 6),\n                // Experimental indicator\n                expIndicator: util.getBit(buf, off + 5, 5),\n                footer: util.getBit(buf, off + 5, 4)\n            },\n            size: UINT32SYNCSAFE.get(buf, off + 6)\n        };\n    }\n};\nexport const ExtendedHeader = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // Extended header size\n            size: Token.UINT32_BE.get(buf, off),\n            // Extended Flags\n            extendedFlags: Token.UINT16_BE.get(buf, off + 4),\n            // Size of padding\n            sizeOfPadding: Token.UINT32_BE.get(buf, off + 6),\n            // CRC data present\n            crcDataPresent: util.getBit(buf, off + 4, 31)\n        };\n    }\n};\nexport const TextEncodingToken = {\n    len: 1,\n    get: (uint8Array, off) => {\n        switch (uint8Array[off]) {\n            case 0x00:\n                return { encoding: 'latin1' }; // binary\n            case 0x01:\n                return { encoding: 'utf-16le', bom: true };\n            case 0x02:\n                return { encoding: 'utf-16le', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n        }\n    }\n};\n/**\n * Used to read first portion of `SYLT` frame\n */\nexport const TextHeader = {\n    len: 4,\n    get: (uint8Array, off) => {\n        return {\n            encoding: TextEncodingToken.get(uint8Array, off),\n            language: new Token.StringType(3, 'latin1').get(uint8Array, off + 1)\n        };\n    }\n};\n/**\n * Used to read first portion of `SYLT` frame\n */\nexport const SyncTextHeader = {\n    len: 6,\n    get: (uint8Array, off) => {\n        const text = TextHeader.get(uint8Array, off);\n        return {\n            encoding: text.encoding,\n            language: text.language,\n            timeStampFormat: Token.UINT8.get(uint8Array, off + 4),\n            contentType: Token.UINT8.get(uint8Array, off + 5)\n        };\n    }\n};\n//# sourceMappingURL=ID3v2Token.js.map","/*!\n * media-typer\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar SUBTYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar TYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar TYPE_REGEXP = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\nexports.test = test\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !TYPE_NAME_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !SUBTYPE_NAME_REGEXP.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!TYPE_NAME_REGEXP.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  return string\n}\n\n/**\n * Test media type.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction test (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  return TYPE_REGEXP.test(string.toLowerCase())\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var match = TYPE_REGEXP.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  return new MediaType(type, subtype, suffix)\n}\n\n/**\n * Class for MediaType object.\n * @public\n */\n\nfunction MediaType (type, subtype, suffix) {\n  this.type = type\n  this.subtype = subtype\n  this.suffix = suffix\n}\n","import { StringType } from 'token-types';\nimport { FieldDecodingError } from '../ParseError.js';\nexport function getBit(buf, off, bit) {\n    return (buf[off] & (1 << bit)) !== 0;\n}\n/**\n * Found delimiting zero in uint8Array\n * @param uint8Array Uint8Array to find the zero delimiter in\n * @param start Offset in uint8Array\n * @param end Last position to parse in uint8Array\n * @param encoding The string encoding used\n * @return Absolute position on uint8Array where zero found\n */\nexport function findZero(uint8Array, start, end, encoding) {\n    let i = start;\n    if (encoding === 'utf-16le') {\n        while (uint8Array[i] !== 0 || uint8Array[i + 1] !== 0) {\n            if (i >= end)\n                return end;\n            i += 2;\n        }\n        return i;\n    }\n    while (uint8Array[i] !== 0) {\n        if (i >= end)\n            return end;\n        i++;\n    }\n    return i;\n}\nexport function trimRightNull(x) {\n    const pos0 = x.indexOf('\\0');\n    return pos0 === -1 ? x : x.substr(0, pos0);\n}\nfunction swapBytes(uint8Array) {\n    const l = uint8Array.length;\n    if ((l & 1) !== 0)\n        throw new FieldDecodingError('Buffer length must be even');\n    for (let i = 0; i < l; i += 2) {\n        const a = uint8Array[i];\n        uint8Array[i] = uint8Array[i + 1];\n        uint8Array[i + 1] = a;\n    }\n    return uint8Array;\n}\n/**\n * Decode string\n */\nexport function decodeString(uint8Array, encoding) {\n    // annoying workaround for a double BOM issue\n    // https://github.com/leetreveil/musicmetadata/issues/84\n    if (uint8Array[0] === 0xFF && uint8Array[1] === 0xFE) { // little endian\n        return decodeString(uint8Array.subarray(2), encoding);\n    }\n    if (encoding === 'utf-16le' && uint8Array[0] === 0xFE && uint8Array[1] === 0xFF) {\n        // BOM, indicating big endian decoding\n        if ((uint8Array.length & 1) !== 0)\n            throw new FieldDecodingError('Expected even number of octets for 16-bit unicode string');\n        return decodeString(swapBytes(uint8Array), encoding);\n    }\n    return new StringType(uint8Array.length, encoding).get(uint8Array, 0);\n}\nexport function stripNulls(str) {\n    str = str.replace(/^\\x00+/g, '');\n    str = str.replace(/\\x00+$/g, '');\n    return str;\n}\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param source Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = lsb\n * @param len Length of number in bits\n * @return Decoded bit aligned number\n */\nexport function getBitAllignedNumber(source, byteOffset, bitOffset, len) {\n    const byteOff = byteOffset + ~~(bitOffset / 8);\n    const bitOff = bitOffset % 8;\n    let value = source[byteOff];\n    value &= 0xff >> bitOff;\n    const bitsRead = 8 - bitOff;\n    const bitsLeft = len - bitsRead;\n    if (bitsLeft < 0) {\n        value >>= (8 - bitOff - len);\n    }\n    else if (bitsLeft > 0) {\n        value <<= bitsLeft;\n        value |= getBitAllignedNumber(source, byteOffset, bitOffset + bitsRead, bitsLeft);\n    }\n    return value;\n}\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param source Byte Uint8Array\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = most significant bit, 7 is the least significant bit\n * @return True if bit is set\n */\nexport function isBitSet(source, byteOffset, bitOffset) {\n    return getBitAllignedNumber(source, byteOffset, bitOffset, 1) === 1;\n}\nexport function a2hex(str) {\n    const arr = [];\n    for (let i = 0, l = str.length; i < l; i++) {\n        const hex = Number(str.charCodeAt(i)).toString(16);\n        arr.push(hex.length === 1 ? `0${hex}` : hex);\n    }\n    return arr.join(' ');\n}\n/**\n * Convert power ratio to DB\n * ratio: [0..1]\n */\nexport function ratioToDb(ratio) {\n    return 10 * Math.log10(ratio);\n}\n/**\n * Convert dB to ratio\n * db Decibels\n */\nexport function dbToRatio(dB) {\n    return 10 ** (dB / 10);\n}\n/**\n * Convert replay gain to ratio and Decibel\n * @param value string holding a ratio like '0.034' or '-7.54 dB'\n */\nexport function toRatio(value) {\n    const ps = value.split(' ').map(p => p.trim().toLowerCase());\n    // @ts-ignore\n    if (ps.length >= 1) {\n        const v = Number.parseFloat(ps[0]);\n        return ps.length === 2 && ps[1] === 'db' ? {\n            dB: v,\n            ratio: dbToRatio(v)\n        } : {\n            dB: ratioToDb(v),\n            ratio: v\n        };\n    }\n}\n//# sourceMappingURL=Util.js.map","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/ // eslint-disable-line no-control-regex\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value.charCodeAt(0) === 0x22 /* \" */) {\n        // remove quotes\n        value = value.slice(1, -1)\n\n        // remove escapes\n        if (value.indexOf('\\\\') !== -1) {\n          value = value.replace(QESC_REGEXP, '$1')\n        }\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","export const makeParseError = (name) => {\n    return class ParseError extends Error {\n        constructor(message) {\n            super(message);\n            this.name = name;\n        }\n    };\n};\n// Concrete error class representing a file type determination failure.\nexport class CouldNotDetermineFileTypeError extends makeParseError('CouldNotDetermineFileTypeError') {\n}\n// Concrete error class representing an unsupported file type.\nexport class UnsupportedFileTypeError extends makeParseError('UnsupportedFileTypeError') {\n}\n// Concrete error class representing unexpected file content.\nclass UnexpectedFileContentError extends makeParseError('UnexpectedFileContentError') {\n    constructor(fileType, message) {\n        super(message);\n        this.fileType = fileType;\n    }\n    // Override toString to include file type information.\n    toString() {\n        return `${this.name} (FileType: ${this.fileType}): ${this.message}`;\n    }\n}\n// Concrete error class representing a field decoding error.\nexport class FieldDecodingError extends makeParseError('FieldDecodingError') {\n}\nexport class InternalParserError extends makeParseError('InternalParserError') {\n}\n// Factory function to create a specific type of UnexpectedFileContentError.\nexport const makeUnexpectedFileContentError = (fileType) => {\n    return class extends UnexpectedFileContentError {\n        constructor(message) {\n            super(fileType, message);\n        }\n    };\n};\n//# sourceMappingURL=ParseError.js.map","import initDebug from 'debug';\nimport { StringType, UINT8 } from 'token-types';\nimport * as util from '../common/Util.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { APEv2Parser } from '../apev2/APEv2Parser.js';\nconst debug = initDebug('music-metadata:parser:ID3v1');\n/**\n * ID3v1 Genre mappings\n * Ref: https://de.wikipedia.org/wiki/Liste_der_ID3v1-Genres\n */\nexport const Genres = [\n    'Blues', 'Classic Rock', 'Country', 'Dance', 'Disco', 'Funk', 'Grunge', 'Hip-Hop',\n    'Jazz', 'Metal', 'New Age', 'Oldies', 'Other', 'Pop', 'R&B', 'Rap', 'Reggae', 'Rock',\n    'Techno', 'Industrial', 'Alternative', 'Ska', 'Death Metal', 'Pranks', 'Soundtrack',\n    'Euro-Techno', 'Ambient', 'Trip-Hop', 'Vocal', 'Jazz+Funk', 'Fusion', 'Trance',\n    'Classical', 'Instrumental', 'Acid', 'House', 'Game', 'Sound Clip', 'Gospel', 'Noise',\n    'Alt. Rock', 'Bass', 'Soul', 'Punk', 'Space', 'Meditative', 'Instrumental Pop',\n    'Instrumental Rock', 'Ethnic', 'Gothic', 'Darkwave', 'Techno-Industrial',\n    'Electronic', 'Pop-Folk', 'Eurodance', 'Dream', 'Southern Rock', 'Comedy', 'Cult',\n    'Gangsta Rap', 'Top 40', 'Christian Rap', 'Pop/Funk', 'Jungle', 'Native American',\n    'Cabaret', 'New Wave', 'Psychedelic', 'Rave', 'Showtunes', 'Trailer', 'Lo-Fi', 'Tribal',\n    'Acid Punk', 'Acid Jazz', 'Polka', 'Retro', 'Musical', 'Rock & Roll', 'Hard Rock',\n    'Folk', 'Folk/Rock', 'National Folk', 'Swing', 'Fast-Fusion', 'Bebob', 'Latin', 'Revival',\n    'Celtic', 'Bluegrass', 'Avantgarde', 'Gothic Rock', 'Progressive Rock', 'Psychedelic Rock',\n    'Symphonic Rock', 'Slow Rock', 'Big Band', 'Chorus', 'Easy Listening', 'Acoustic', 'Humour',\n    'Speech', 'Chanson', 'Opera', 'Chamber Music', 'Sonata', 'Symphony', 'Booty Bass', 'Primus',\n    'Porn Groove', 'Satire', 'Slow Jam', 'Club', 'Tango', 'Samba', 'Folklore',\n    'Ballad', 'Power Ballad', 'Rhythmic Soul', 'Freestyle', 'Duet', 'Punk Rock', 'Drum Solo',\n    'A Cappella', 'Euro-House', 'Dance Hall', 'Goa', 'Drum & Bass', 'Club-House',\n    'Hardcore', 'Terror', 'Indie', 'BritPop', 'Negerpunk', 'Polsk Punk', 'Beat',\n    'Christian Gangsta Rap', 'Heavy Metal', 'Black Metal', 'Crossover', 'Contemporary Christian',\n    'Christian Rock', 'Merengue', 'Salsa', 'Thrash Metal', 'Anime', 'JPop', 'Synthpop',\n    'Abstract', 'Art Rock', 'Baroque', 'Bhangra', 'Big Beat', 'Breakbeat', 'Chillout',\n    'Downtempo', 'Dub', 'EBM', 'Eclectic', 'Electro', 'Electroclash', 'Emo', 'Experimental',\n    'Garage', 'Global', 'IDM', 'Illbient', 'Industro-Goth', 'Jam Band', 'Krautrock',\n    'Leftfield', 'Lounge', 'Math Rock', 'New Romantic', 'Nu-Breakz', 'Post-Punk', 'Post-Rock',\n    'Psytrance', 'Shoegaze', 'Space Rock', 'Trop Rock', 'World Music', 'Neoclassical', 'Audiobook',\n    'Audio Theatre', 'Neue Deutsche Welle', 'Podcast', 'Indie Rock', 'G-Funk', 'Dubstep',\n    'Garage Rock', 'Psybient'\n];\n/**\n * Spec: http://id3.org/ID3v1\n * Wiki: https://en.wikipedia.org/wiki/ID3\n */\nconst Iid3v1Token = {\n    len: 128,\n    /**\n     * @param buf Buffer possibly holding the 128 bytes ID3v1.1 metadata header\n     * @param off Offset in buffer in bytes\n     * @returns ID3v1.1 header if first 3 bytes equals 'TAG', otherwise null is returned\n     */\n    get: (buf, off) => {\n        const header = new Id3v1StringType(3).get(buf, off);\n        return header === 'TAG' ? {\n            header,\n            title: new Id3v1StringType(30).get(buf, off + 3),\n            artist: new Id3v1StringType(30).get(buf, off + 33),\n            album: new Id3v1StringType(30).get(buf, off + 63),\n            year: new Id3v1StringType(4).get(buf, off + 93),\n            comment: new Id3v1StringType(28).get(buf, off + 97),\n            // ID3v1.1 separator for track\n            zeroByte: UINT8.get(buf, off + 127),\n            // track: ID3v1.1 field added by Michael Mutschler\n            track: UINT8.get(buf, off + 126),\n            genre: UINT8.get(buf, off + 127)\n        } : null;\n    }\n};\nclass Id3v1StringType {\n    constructor(len) {\n        this.len = len;\n        this.stringType = new StringType(len, 'latin1');\n    }\n    get(buf, off) {\n        let value = this.stringType.get(buf, off);\n        value = util.trimRightNull(value);\n        value = value.trim();\n        return value.length > 0 ? value : undefined;\n    }\n}\nexport class ID3v1Parser extends BasicParser {\n    constructor(metadata, tokenizer, options) {\n        super(metadata, tokenizer, options);\n        this.apeHeader = options.apeHeader;\n    }\n    static getGenre(genreIndex) {\n        if (genreIndex < Genres.length) {\n            return Genres[genreIndex];\n        }\n        return undefined; // ToDO: generate warning\n    }\n    async parse() {\n        if (!this.tokenizer.fileInfo.size) {\n            debug('Skip checking for ID3v1 because the file-size is unknown');\n            return;\n        }\n        if (this.apeHeader) {\n            this.tokenizer.ignore(this.apeHeader.offset - this.tokenizer.position);\n            const apeParser = new APEv2Parser(this.metadata, this.tokenizer, this.options);\n            await apeParser.parseTags(this.apeHeader.footer);\n        }\n        const offset = this.tokenizer.fileInfo.size - Iid3v1Token.len;\n        if (this.tokenizer.position > offset) {\n            debug('Already consumed the last 128 bytes');\n            return;\n        }\n        const header = await this.tokenizer.readToken(Iid3v1Token, offset);\n        if (header) {\n            debug('ID3v1 header found at: pos=%s', this.tokenizer.fileInfo.size - Iid3v1Token.len);\n            const props = ['title', 'artist', 'album', 'comment', 'track', 'year'];\n            for (const id of props) {\n                if (header[id] && header[id] !== '')\n                    await this.addTag(id, header[id]);\n            }\n            const genre = ID3v1Parser.getGenre(header.genre);\n            if (genre)\n                await this.addTag('genre', genre);\n        }\n        else {\n            debug('ID3v1 header not found at: pos=%s', this.tokenizer.fileInfo.size - Iid3v1Token.len);\n        }\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag('ID3v1', id, value);\n    }\n}\nexport async function hasID3v1Header(tokenizer) {\n    if (tokenizer.fileInfo.size >= 128) {\n        const tag = new Uint8Array(3);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(tag, { position: tokenizer.fileInfo.size - 128 });\n        tokenizer.setPosition(position); // Restore tokenizer position\n        return new TextDecoder('latin1').decode(tag) === 'TAG';\n    }\n    return false;\n}\n//# sourceMappingURL=ID3v1Parser.js.map","export class BasicParser {\n    /**\n     * Initialize parser with output (metadata), input (tokenizer) & parsing options (options).\n     * @param {INativeMetadataCollector} metadata Output\n     * @param {ITokenizer} tokenizer Input\n     * @param {IOptions} options Parsing options\n     */\n    constructor(metadata, tokenizer, options) {\n        this.metadata = metadata;\n        this.tokenizer = tokenizer;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=BasicParser.js.map","const objectToString = Object.prototype.toString;\nconst uint8ArrayStringified = '[object Uint8Array]';\nconst arrayBufferStringified = '[object ArrayBuffer]';\n\nfunction isType(value, typeConstructor, typeStringified) {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\tif (value.constructor === typeConstructor) {\n\t\treturn true;\n\t}\n\n\treturn objectToString.call(value) === typeStringified;\n}\n\nexport function isUint8Array(value) {\n\treturn isType(value, Uint8Array, uint8ArrayStringified);\n}\n\nfunction isArrayBuffer(value) {\n\treturn isType(value, ArrayBuffer, arrayBufferStringified);\n}\n\nfunction isUint8ArrayOrArrayBuffer(value) {\n\treturn isUint8Array(value) || isArrayBuffer(value);\n}\n\nexport function assertUint8Array(value) {\n\tif (!isUint8Array(value)) {\n\t\tthrow new TypeError(`Expected \\`Uint8Array\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nexport function assertUint8ArrayOrArrayBuffer(value) {\n\tif (!isUint8ArrayOrArrayBuffer(value)) {\n\t\tthrow new TypeError(`Expected \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nexport function toUint8Array(value) {\n\tif (value instanceof ArrayBuffer) {\n\t\treturn new Uint8Array(value);\n\t}\n\n\tif (ArrayBuffer.isView(value)) {\n\t\treturn new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t}\n\n\tthrow new TypeError(`Unsupported value, got \\`${typeof value}\\`.`);\n}\n\nexport function concatUint8Arrays(arrays, totalLength) {\n\tif (arrays.length === 0) {\n\t\treturn new Uint8Array(0);\n\t}\n\n\ttotalLength ??= arrays.reduce((accumulator, currentValue) => accumulator + currentValue.length, 0);\n\n\tconst returnValue = new Uint8Array(totalLength);\n\n\tlet offset = 0;\n\tfor (const array of arrays) {\n\t\tassertUint8Array(array);\n\t\treturnValue.set(array, offset);\n\t\toffset += array.length;\n\t}\n\n\treturn returnValue;\n}\n\nexport function areUint8ArraysEqual(a, b) {\n\tassertUint8Array(a);\n\tassertUint8Array(b);\n\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line unicorn/no-for-loop\n\tfor (let index = 0; index < a.length; index++) {\n\t\tif (a[index] !== b[index]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function compareUint8Arrays(a, b) {\n\tassertUint8Array(a);\n\tassertUint8Array(b);\n\n\tconst length = Math.min(a.length, b.length);\n\n\tfor (let index = 0; index < length; index++) {\n\t\tconst diff = a[index] - b[index];\n\t\tif (diff !== 0) {\n\t\t\treturn Math.sign(diff);\n\t\t}\n\t}\n\n\t// At this point, all the compared elements are equal.\n\t// The shorter array should come first if the arrays are of different lengths.\n\treturn Math.sign(a.length - b.length);\n}\n\nconst cachedDecoders = {\n\tutf8: new globalThis.TextDecoder('utf8'),\n};\n\nexport function uint8ArrayToString(array, encoding = 'utf8') {\n\tassertUint8ArrayOrArrayBuffer(array);\n\tcachedDecoders[encoding] ??= new globalThis.TextDecoder(encoding);\n\treturn cachedDecoders[encoding].decode(array);\n}\n\nfunction assertString(value) {\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError(`Expected \\`string\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nconst cachedEncoder = new globalThis.TextEncoder();\n\nexport function stringToUint8Array(string) {\n\tassertString(string);\n\treturn cachedEncoder.encode(string);\n}\n\nfunction base64ToBase64Url(base64) {\n\treturn base64.replaceAll('+', '-').replaceAll('/', '_').replace(/=+$/, '');\n}\n\nfunction base64UrlToBase64(base64url) {\n\treturn base64url.replaceAll('-', '+').replaceAll('_', '/');\n}\n\n// Reference: https://phuoc.ng/collection/this-vs-that/concat-vs-push/\nconst MAX_BLOCK_SIZE = 65_535;\n\nexport function uint8ArrayToBase64(array, {urlSafe = false} = {}) {\n\tassertUint8Array(array);\n\n\tlet base64;\n\n\tif (array.length < MAX_BLOCK_SIZE) {\n\t// Required as `btoa` and `atob` don't properly support Unicode: https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n\t\tbase64 = globalThis.btoa(String.fromCodePoint.apply(this, array));\n\t} else {\n\t\tbase64 = '';\n\t\tfor (const value of array) {\n\t\t\tbase64 += String.fromCodePoint(value);\n\t\t}\n\n\t\tbase64 = globalThis.btoa(base64);\n\t}\n\n\treturn urlSafe ? base64ToBase64Url(base64) : base64;\n}\n\nexport function base64ToUint8Array(base64String) {\n\tassertString(base64String);\n\treturn Uint8Array.from(globalThis.atob(base64UrlToBase64(base64String)), x => x.codePointAt(0));\n}\n\nexport function stringToBase64(string, {urlSafe = false} = {}) {\n\tassertString(string);\n\treturn uint8ArrayToBase64(stringToUint8Array(string), {urlSafe});\n}\n\nexport function base64ToString(base64String) {\n\tassertString(base64String);\n\treturn uint8ArrayToString(base64ToUint8Array(base64String));\n}\n\nconst byteToHexLookupTable = Array.from({length: 256}, (_, index) => index.toString(16).padStart(2, '0'));\n\nexport function uint8ArrayToHex(array) {\n\tassertUint8Array(array);\n\n\t// Concatenating a string is faster than using an array.\n\tlet hexString = '';\n\n\t// eslint-disable-next-line unicorn/no-for-loop -- Max performance is critical.\n\tfor (let index = 0; index < array.length; index++) {\n\t\thexString += byteToHexLookupTable[array[index]];\n\t}\n\n\treturn hexString;\n}\n\nconst hexToDecimalLookupTable = {\n\t0: 0,\n\t1: 1,\n\t2: 2,\n\t3: 3,\n\t4: 4,\n\t5: 5,\n\t6: 6,\n\t7: 7,\n\t8: 8,\n\t9: 9,\n\ta: 10,\n\tb: 11,\n\tc: 12,\n\td: 13,\n\te: 14,\n\tf: 15,\n\tA: 10,\n\tB: 11,\n\tC: 12,\n\tD: 13,\n\tE: 14,\n\tF: 15,\n};\n\nexport function hexToUint8Array(hexString) {\n\tassertString(hexString);\n\n\tif (hexString.length % 2 !== 0) {\n\t\tthrow new Error('Invalid Hex string length.');\n\t}\n\n\tconst resultLength = hexString.length / 2;\n\tconst bytes = new Uint8Array(resultLength);\n\n\tfor (let index = 0; index < resultLength; index++) {\n\t\tconst highNibble = hexToDecimalLookupTable[hexString[index * 2]];\n\t\tconst lowNibble = hexToDecimalLookupTable[hexString[(index * 2) + 1]];\n\n\t\tif (highNibble === undefined || lowNibble === undefined) {\n\t\t\tthrow new Error(`Invalid Hex character encountered at position ${index * 2}`);\n\t\t}\n\n\t\tbytes[index] = (highNibble << 4) | lowNibble; // eslint-disable-line no-bitwise\n\t}\n\n\treturn bytes;\n}\n\n/**\n@param {DataView} view\n@returns {number}\n*/\nexport function getUintBE(view) {\n\tconst {byteLength} = view;\n\n\tif (byteLength === 6) {\n\t\treturn (view.getUint16(0) * (2 ** 32)) + view.getUint32(2);\n\t}\n\n\tif (byteLength === 5) {\n\t\treturn (view.getUint8(0) * (2 ** 32)) + view.getUint32(1);\n\t}\n\n\tif (byteLength === 4) {\n\t\treturn view.getUint32(0);\n\t}\n\n\tif (byteLength === 3) {\n\t\treturn (view.getUint8(0) * (2 ** 16)) + view.getUint16(1);\n\t}\n\n\tif (byteLength === 2) {\n\t\treturn view.getUint16(0);\n\t}\n\n\tif (byteLength === 1) {\n\t\treturn view.getUint8(0);\n\t}\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {number}\n*/\nexport function indexOf(array, value) {\n\tconst arrayLength = array.length;\n\tconst valueLength = value.length;\n\n\tif (valueLength === 0) {\n\t\treturn -1;\n\t}\n\n\tif (valueLength > arrayLength) {\n\t\treturn -1;\n\t}\n\n\tconst validOffsetLength = arrayLength - valueLength;\n\n\tfor (let index = 0; index <= validOffsetLength; index++) {\n\t\tlet isMatch = true;\n\t\tfor (let index2 = 0; index2 < valueLength; index2++) {\n\t\t\tif (array[index + index2] !== value[index2]) {\n\t\t\t\tisMatch = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isMatch) {\n\t\t\treturn index;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {boolean}\n*/\nexport function includes(array, value) {\n\treturn indexOf(array, value) !== -1;\n}\n","export const defaultMessages = 'End-Of-Stream';\n/**\n * Thrown on read operation of the end of file or stream has been reached\n */\nexport class EndOfStreamError extends Error {\n    constructor() {\n        super(defaultMessages);\n        this.name = \"EndOfStreamError\";\n    }\n}\nexport class AbortError extends Error {\n    constructor(message = \"The operation was aborted\") {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n","import { EndOfStreamError, AbortError } from \"./Errors.js\";\nexport class AbstractStreamReader {\n    constructor() {\n        this.endOfStream = false;\n        this.interrupted = false;\n        /**\n         * Store peeked data\n         * @type {Array}\n         */\n        this.peekQueue = [];\n    }\n    async peek(uint8Array, mayBeLess = false) {\n        const bytesRead = await this.read(uint8Array, mayBeLess);\n        this.peekQueue.push(uint8Array.subarray(0, bytesRead)); // Put read data back to peek buffer\n        return bytesRead;\n    }\n    async read(buffer, mayBeLess = false) {\n        if (buffer.length === 0) {\n            return 0;\n        }\n        let bytesRead = this.readFromPeekBuffer(buffer);\n        if (!this.endOfStream) {\n            bytesRead += await this.readRemainderFromStream(buffer.subarray(bytesRead), mayBeLess);\n        }\n        if (bytesRead === 0) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Read chunk from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @returns Number of bytes read\n     */\n    readFromPeekBuffer(buffer) {\n        let remaining = buffer.length;\n        let bytesRead = 0;\n        // consume peeked data first\n        while (this.peekQueue.length > 0 && remaining > 0) {\n            const peekData = this.peekQueue.pop(); // Front of queue\n            if (!peekData)\n                throw new Error('peekData should be defined');\n            const lenCopy = Math.min(peekData.length, remaining);\n            buffer.set(peekData.subarray(0, lenCopy), bytesRead);\n            bytesRead += lenCopy;\n            remaining -= lenCopy;\n            if (lenCopy < peekData.length) {\n                // remainder back to queue\n                this.peekQueue.push(peekData.subarray(lenCopy));\n            }\n        }\n        return bytesRead;\n    }\n    async readRemainderFromStream(buffer, mayBeLess) {\n        let bytesRead = 0;\n        // Continue reading from stream if required\n        while (bytesRead < buffer.length && !this.endOfStream) {\n            if (this.interrupted) {\n                throw new AbortError();\n            }\n            const chunkLen = await this.readFromStream(buffer.subarray(bytesRead), mayBeLess);\n            if (chunkLen === 0)\n                break;\n            bytesRead += chunkLen;\n        }\n        if (!mayBeLess && bytesRead < buffer.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n}\n","import { AbstractStreamReader } from \"./AbstractStreamReader.js\";\nexport class WebStreamReader extends AbstractStreamReader {\n    constructor(reader) {\n        super();\n        this.reader = reader;\n    }\n    async abort() {\n        return this.close();\n    }\n    async close() {\n        this.reader.releaseLock();\n    }\n}\n","import { WebStreamReader } from './WebStreamReader.js';\n/**\n * Read from a WebStream using a BYOB reader\n * Reference: https://nodejs.org/api/webstreams.html#class-readablestreambyobreader\n */\nexport class WebStreamByobReader extends WebStreamReader {\n    /**\n     * Read from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @protected Bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        // @ts-ignore\n        const result = await this.reader.read(new Uint8Array(buffer.length), { min: mayBeLess ? undefined : buffer.length });\n        if (result.done) {\n            this.endOfStream = result.done;\n        }\n        if (result.value) {\n            buffer.set(result.value);\n            return result.value.length;\n        }\n        return 0;\n    }\n}\n","import { EndOfStreamError } from './Errors.js';\nimport { AbstractStreamReader } from \"./AbstractStreamReader.js\";\nexport class WebStreamDefaultReader extends AbstractStreamReader {\n    constructor(reader) {\n        super();\n        this.reader = reader;\n        this.buffer = null; // Internal buffer to store excess data\n    }\n    /**\n     * Copy chunk to target, and store the remainder in this.buffer\n     */\n    writeChunk(target, chunk) {\n        const written = Math.min(chunk.length, target.length);\n        target.set(chunk.subarray(0, written));\n        // Adjust the remainder of the buffer\n        if (written < chunk.length) {\n            this.buffer = chunk.subarray(written);\n        }\n        else {\n            this.buffer = null;\n        }\n        return written;\n    }\n    /**\n     * Read from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @protected Bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        let totalBytesRead = 0;\n        // Serve from the internal buffer first\n        if (this.buffer) {\n            totalBytesRead += this.writeChunk(buffer, this.buffer);\n        }\n        // Continue reading from the stream if more data is needed\n        while (totalBytesRead < buffer.length && !this.endOfStream) {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.endOfStream = true;\n                break;\n            }\n            if (result.value) {\n                totalBytesRead += this.writeChunk(buffer.subarray(totalBytesRead), result.value);\n            }\n        }\n        if (totalBytesRead === 0 && this.endOfStream) {\n            throw new EndOfStreamError();\n        }\n        return totalBytesRead;\n    }\n    abort() {\n        this.interrupted = true;\n        return this.reader.cancel();\n    }\n    async close() {\n        await this.abort();\n        this.reader.releaseLock();\n    }\n}\n","import { EndOfStreamError } from 'peek-readable';\n/**\n * Core tokenizer\n */\nexport class AbstractTokenizer {\n    /**\n     * Constructor\n     * @param options Tokenizer options\n     * @protected\n     */\n    constructor(options) {\n        this.numBuffer = new Uint8Array(8);\n        /**\n         * Tokenizer-stream position\n         */\n        this.position = 0;\n        this.onClose = options?.onClose;\n        if (options?.abortSignal) {\n            options.abortSignal.addEventListener('abort', () => {\n                this.abort();\n            });\n        }\n    }\n    /**\n     * Read a token from the tokenizer-stream\n     * @param token - The token to read\n     * @param position - If provided, the desired position in the tokenizer-stream\n     * @returns Promise with token data\n     */\n    async readToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.readBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Peek a token from the tokenizer-stream.\n     * @param token - Token to peek from the tokenizer-stream.\n     * @param position - Offset where to begin reading within the file. If position is null, data will be read from the current file position.\n     * @returns Promise with token data\n     */\n    async peekToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.peekBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async readNumber(token) {\n        const len = await this.readBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async peekNumber(token) {\n        const len = await this.peekBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Ignore number of bytes, advances the pointer in under tokenizer-stream.\n     * @param length - Number of bytes to ignore\n     * @return resolves the number of bytes ignored, equals length if this available, otherwise the number of bytes available\n     */\n    async ignore(length) {\n        if (this.fileInfo.size !== undefined) {\n            const bytesLeft = this.fileInfo.size - this.position;\n            if (length > bytesLeft) {\n                this.position += bytesLeft;\n                return bytesLeft;\n            }\n        }\n        this.position += length;\n        return length;\n    }\n    async close() {\n        await this.abort();\n        await this.onClose?.();\n    }\n    normalizeOptions(uint8Array, options) {\n        if (!this.supportsRandomAccess() && options && options.position !== undefined && options.position < this.position) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        return {\n            ...{\n                mayBeLess: false,\n                offset: 0,\n                length: uint8Array.length,\n                position: this.position\n            }, ...options\n        };\n    }\n    abort() {\n        return Promise.resolve(); // Ignore abort signal\n    }\n}\n","import { AbstractTokenizer } from './AbstractTokenizer.js';\nimport { EndOfStreamError } from 'peek-readable';\nconst maxBufferSize = 256000;\nexport class ReadStreamTokenizer extends AbstractTokenizer {\n    /**\n     * Constructor\n     * @param streamReader stream-reader to read from\n     * @param options Tokenizer options\n     */\n    constructor(streamReader, options) {\n        super(options);\n        this.streamReader = streamReader;\n        this.fileInfo = options?.fileInfo ?? {};\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Target Uint8Array to fill with data read from the tokenizer-stream\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes read\n     */\n    async readBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const skipBytes = normOptions.position - this.position;\n        if (skipBytes > 0) {\n            await this.ignore(skipBytes);\n            return this.readBuffer(uint8Array, options);\n        }\n        if (skipBytes < 0) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        if (normOptions.length === 0) {\n            return 0;\n        }\n        const bytesRead = await this.streamReader.read(uint8Array.subarray(0, normOptions.length), normOptions.mayBeLess);\n        this.position += bytesRead;\n        if ((!options || !options.mayBeLess) && bytesRead < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array - Uint8Array (or Buffer) to write data to\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes peeked\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        let bytesRead = 0;\n        if (normOptions.position) {\n            const skipBytes = normOptions.position - this.position;\n            if (skipBytes > 0) {\n                const skipBuffer = new Uint8Array(normOptions.length + skipBytes);\n                bytesRead = await this.peekBuffer(skipBuffer, { mayBeLess: normOptions.mayBeLess });\n                uint8Array.set(skipBuffer.subarray(skipBytes));\n                return bytesRead - skipBytes;\n            }\n            if (skipBytes < 0) {\n                throw new Error('Cannot peek from a negative offset in a stream');\n            }\n        }\n        if (normOptions.length > 0) {\n            try {\n                bytesRead = await this.streamReader.peek(uint8Array.subarray(0, normOptions.length), normOptions.mayBeLess);\n            }\n            catch (err) {\n                if (options?.mayBeLess && err instanceof EndOfStreamError) {\n                    return 0;\n                }\n                throw err;\n            }\n            if ((!normOptions.mayBeLess) && bytesRead < normOptions.length) {\n                throw new EndOfStreamError();\n            }\n        }\n        return bytesRead;\n    }\n    async ignore(length) {\n        // debug(`ignore ${this.position}...${this.position + length - 1}`);\n        const bufSize = Math.min(maxBufferSize, length);\n        const buf = new Uint8Array(bufSize);\n        let totBytesRead = 0;\n        while (totBytesRead < length) {\n            const remaining = length - totBytesRead;\n            const bytesRead = await this.readBuffer(buf, { length: Math.min(bufSize, remaining) });\n            if (bytesRead < 0) {\n                return bytesRead;\n            }\n            totBytesRead += bytesRead;\n        }\n        return totBytesRead;\n    }\n    abort() {\n        return this.streamReader.abort();\n    }\n    async close() {\n        return this.streamReader.close();\n    }\n    supportsRandomAccess() {\n        return false;\n    }\n}\n","import { EndOfStreamError } from 'peek-readable';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BufferTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options Tokenizer options\n     */\n    constructor(uint8Array, options) {\n        super(options);\n        this.uint8Array = uint8Array;\n        this.fileInfo = { ...options?.fileInfo ?? {}, ...{ size: uint8Array.length } };\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options?.position) {\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const bytes2read = Math.min(this.uint8Array.length - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        uint8Array.set(this.uint8Array.subarray(normOptions.position, normOptions.position + bytes2read));\n        return bytes2read;\n    }\n    close() {\n        return super.close();\n    }\n    supportsRandomAccess() {\n        return true;\n    }\n    setPosition(position) {\n        this.position = position;\n    }\n}\n","import { StreamReader, makeWebStreamReader } from 'peek-readable';\nimport { ReadStreamTokenizer } from './ReadStreamTokenizer.js';\nimport { BufferTokenizer } from './BufferTokenizer.js';\nexport { EndOfStreamError, AbortError } from 'peek-readable';\nexport { AbstractTokenizer } from './AbstractTokenizer.js';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param stream - Read from Node.js Stream.Readable\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromStream(stream, options) {\n    const streamReader = new StreamReader(stream);\n    const _options = options ?? {};\n    const chainedClose = _options.onClose;\n    _options.onClose = async () => {\n        await streamReader.close();\n        if (chainedClose) {\n            return chainedClose();\n        }\n    };\n    return new ReadStreamTokenizer(streamReader, _options);\n}\n/**\n * Construct ReadStreamTokenizer from given ReadableStream (WebStream API).\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param webStream - Read from Node.js Stream.Readable (must be a byte stream)\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromWebStream(webStream, options) {\n    const webStreamReader = makeWebStreamReader(webStream);\n    const _options = options ?? {};\n    const chainedClose = _options.onClose;\n    _options.onClose = async () => {\n        await webStreamReader.close();\n        if (chainedClose) {\n            return chainedClose();\n        }\n    };\n    return new ReadStreamTokenizer(webStreamReader, _options);\n}\n/**\n * Construct ReadStreamTokenizer from given Buffer.\n * @param uint8Array - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBuffer(uint8Array, options) {\n    return new BufferTokenizer(uint8Array, options);\n}\n","import { WebStreamByobReader } from './WebStreamByobReader.js';\nimport { WebStreamDefaultReader } from './WebStreamDefaultReader.js';\nexport function makeWebStreamReader(stream) {\n    try {\n        const reader = stream.getReader({ mode: \"byob\" });\n        if (reader instanceof ReadableStreamDefaultReader) {\n            // Fallback to default reader in case `mode: byob` is ignored\n            return new WebStreamDefaultReader(reader);\n        }\n        return new WebStreamByobReader(reader);\n    }\n    catch (error) {\n        if (error instanceof TypeError) {\n            // Fallback to default reader in case `mode: byob` rejected by a `TypeError`\n            return new WebStreamDefaultReader(stream.getReader());\n        }\n        throw error;\n    }\n}\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","u8","Uint8Array","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","start","b","r","j","_a","fl","revfl","_b","fd","rev","x","hMap","cd","mb","length","l","co","le","rvb","sv","r_1","v","flt","fdt","max","a","bits","p","o","bits16","ec","err","ind","msg","nt","Error","code","captureStackTrace","inflt","dat","st","buf","dict","sl","dl","f","noBuf","resize","noSt","cbuf","bl","nbuf","set","final","pos","bt","lm","dm","lbt","dbt","n","tbts","type","t","subarray","flrm","fdrm","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","sym","add","dsym","end","shift","dend","min","slc","et","gunzipSync","data","opts","flg","zs","gzs","out","dictionary","unzlibSync","td","TextDecoder","decode","stream","queueMicrotask","setTimeout","Signature","DataDescriptor","get","array","UINT16_LE","signature","UINT32_LE","compressedSize","uncompressedSize","len","LocalFileHeaderToken","flags","minVersion","dataDescriptor","compressedMethod","filenameLength","extraFieldLength","filename","EndOfCentralDirectoryRecordToken","nrOfThisDisk","nrOfThisDiskWithTheStart","nrOfEntriesOnThisDisk","nrOfEntriesOfSize","sizeOfCd","offsetOfStartOfCd","zipFileCommentLength","FileHeader","fileCommentLength","relativeOffsetOfLocalHeader","signatureToArray","signatureBytes","put","debug","syncBufferSize","ddSignatureArray","eocdSignatureBytes","ZipHandler","constructor","tokenizer","this","syncBuffer","isZip","peekSignature","peekToken","findEndOfCentralDirectoryLocator","randomReadTokenizer","chunkLength","fileInfo","size","readBuffer","position","readCentralDirectory","supportsRandomAccess","eocdHeader","readToken","files","setPosition","entry","StringType","ignore","push","unzip","fileCb","entries","iterateOverCentralDirectory","stop","zipHeader","readLocalFileHeader","next","fileData","chunks","nextHeaderIndex","peekBuffer","mayBeLess","indexOf","handler","inflate","mergeArrays","fileHeader","cb","inflateSync","header","portion","bufferLength","portionLength","found","totalLength","reduce","acc","curr","mergedArray","chunk","uint32SyncSafeToken","reasonableDetectionSizeInBytes","async","fileTypeFromBuffer","input","FileTypeParser","fromBuffer","getFileTypeFromMimeType","mimeType","toLowerCase","ext","mime","_check","headers","options","index","mask","detectors","customDetectors","id","detect","detectConfident","detectImprecise","tokenizerOptions","abortSignal","signal","fromTokenizer","initialPosition","detector","fileType","ArrayBuffer","TypeError","fromBlob","blob","fromStream","close","toDetectionStream","sampleSize","detectedFileType","firstChunk","reader","getReader","mode","done","slice","error","undefined","releaseLock","transformStream","TransformStream","controller","enqueue","transform","newStream","pipeThrough","check","checkString","string","map","character","charCodeAt","Number","MAX_SAFE_INTEGER","id3HeaderLength","trim","xmlContent","endPos","includes","firstPos","lastIndexOf","test","skipBytes","maxBufferSize","TextEncoder","encode","readTiffHeader","readField","msb","peekNumber","ic","readElement","idField","lengthField","nrLength","idView","DataView","lengthView","readChildren","children","element","replaceAll","re","version","match","some","char7","readChunkHeader","brandMajor","replace","startsWith","readHeader","guid","payload","typeId","jsonSize","getUint32","JSON","parse","arrayBuffer","readSum","parseInt","sum","tarHeaderChecksumMatches","readTiffTag","bigEndian","tagId","readTiffIFD","numberOfTags","ifdOffset","someId1","someId2","Set","defaultTagInfo","multiple","commonTags","year","track","disk","title","artist","artists","unique","albumartist","album","date","originaldate","originalyear","releasedate","comment","genre","picture","composer","lyrics","albumsort","titlesort","work","artistsort","albumartistsort","composersort","lyricist","writer","conductor","remixer","arranger","engineer","producer","technician","djmixer","mixer","label","grouping","subtitle","discsubtitle","totaltracks","totaldiscs","compilation","rating","bpm","mood","media","catalognumber","tvShow","tvShowSort","tvSeason","tvEpisode","tvEpisodeId","tvNetwork","podcast","podcasturl","releasestatus","releasetype","releasecountry","script","language","copyright","license","encodedby","encodersettings","gapless","barcode","isrc","asin","musicbrainz_recordingid","musicbrainz_trackid","musicbrainz_albumid","musicbrainz_artistid","musicbrainz_albumartistid","musicbrainz_releasegroupid","musicbrainz_workid","musicbrainz_trmid","musicbrainz_discid","acoustid_id","acoustid_fingerprint","musicip_puid","musicip_fingerprint","website","averageLevel","peakLevel","notes","key","originalalbum","originalartist","discogs_artist_id","discogs_release_id","discogs_label_id","discogs_master_release_id","discogs_votes","discogs_rating","replaygain_track_peak","replaygain_track_gain","replaygain_album_peak","replaygain_album_gain","replaygain_track_minmax","replaygain_album_minmax","replaygain_undo","description","longDescription","category","hdVideo","keywords","movement","movementIndex","movementTotal","podcastId","showMovement","stik","CommonTagMapper","toIntOrNull","str","cleaned","normalizeTrack","origVal","split","toString","no","of","tagTypes","tagMap","mapGenericTag","tag","warnings","postMap","getCommonName","maxRatingScore","id3v1TagMap","ID3v1TagMapper","super","CaseInsensitiveTagMap","upperCaseMap","Object","keys","toUpperCase","id3v24TagMap","TIT2","TPE1","TPE2","TALB","TDRV","TORY","TPOS","TCON","APIC","TCOM","USLT","TSOA","TSOT","TOAL","TSOP","TSO2","TSOC","TEXT","TPE3","TPE4","TPUB","TIT1","TIT3","TRCK","TCMP","POPM","TBPM","TMED","TLAN","TCOP","WCOP","TENC","TSSE","TSRC","WOAR","TDRC","TYER","TDOR","TMOO","SYLT","TSST","TKEY","COMM","TOPE","MVNM","MVIN","PCST","TCAT","TDES","TDRL","TGID","TKWD","WFED","GRP1","ID3v24TagMapper","toRating","popm","source","email","idTag","owner_identifier","identifier","customTag","addWarning","asfTagMap","Title","Author","Description","Copyright","LICENSE","ASIN","AsfTagMapper","parseFloat","id3v22TagMap","TT2","TP1","TP2","TAL","TYE","COM","TRK","TPA","TCO","PIC","TCM","TOR","TOT","TXT","TP3","TPB","TT1","TT3","TLA","TCR","WCP","TEN","TSS","WAR","PCS","TCP","TDR","TS2","TSA","TSC","TSP","TST","WFD","TBP","ID3v22TagMapper","apev2TagMap","Artist","Artists","Album","Year","Originalyear","Originaldate","Releasedate","Comment","Track","Disc","DISCNUMBER","Genre","Composer","Lyrics","ALBUMSORT","TITLESORT","WORK","ARTISTSORT","ALBUMARTISTSORT","COMPOSERSORT","Lyricist","Writer","Conductor","MixArtist","Arranger","Engineer","Producer","DJMixer","Mixer","Label","Grouping","Subtitle","DiscSubtitle","Compilation","BPM","Mood","Media","CatalogNumber","MUSICBRAINZ_ALBUMSTATUS","MUSICBRAINZ_ALBUMTYPE","RELEASECOUNTRY","Script","Language","EncodedBy","EncoderSettings","Barcode","ISRC","musicbrainz_releasetrackid","MUSICBRAINZ_ALBUMID","MUSICBRAINZ_ARTISTID","MUSICBRAINZ_ALBUMARTISTID","MUSICBRAINZ_RELEASEGROUPID","MUSICBRAINZ_WORKID","MUSICBRAINZ_TRMID","MUSICBRAINZ_DISCID","Acoustid_Id","ACOUSTID_FINGERPRINT","MUSICIP_PUID","Weblink","REPLAYGAIN_TRACK_GAIN","REPLAYGAIN_TRACK_PEAK","MP3GAIN_MINMAX","MP3GAIN_UNDO","APEv2TagMapper","mp4TagMap","aART","trkn","covr","soal","sonm","soar","soaa","soco","cpil","tmpo","tvsh","tvsn","tves","sosn","tven","tvnn","pcst","purl","cprt","pgap","gnre","desc","ldes","catg","egid","hdvd","keyw","shwm","rate","MP4TagMapper","vorbisTagMap","TITLE","ARTIST","ARTISTS","ALBUMARTIST","ALBUM","DATE","ORIGINALDATE","ORIGINALYEAR","RELEASEDATE","COMMENT","TRACKNUMBER","GENRE","METADATA_BLOCK_PICTURE","COMPOSER","LYRICS","LYRICIST","WRITER","CONDUCTOR","REMIXER","ARRANGER","ENGINEER","PRODUCER","DJMIXER","MIXER","LABEL","GROUPING","SUBTITLE","DISCSUBTITLE","TRACKTOTAL","DISCTOTAL","COMPILATION","RATING","KEY","MOOD","MEDIA","CATALOGNUMBER","RELEASESTATUS","RELEASETYPE","SCRIPT","LANGUAGE","COPYRIGHT","ENCODEDBY","ENCODERSETTINGS","BARCODE","MUSICBRAINZ_TRACKID","MUSICBRAINZ_RELEASETRACKID","ACOUSTID_ID","ACOUSTID_ID_FINGERPRINT","WEBSITE","NOTES","TOTALTRACKS","TOTALDISCS","DISCOGS_ARTIST_ID","DISCOGS_ARTISTS","DISCOGS_ARTIST_NAME","DISCOGS_ALBUM_ARTISTS","DISCOGS_CATALOG","DISCOGS_COUNTRY","DISCOGS_DATE","DISCOGS_LABEL","DISCOGS_LABEL_ID","DISCOGS_MASTER_RELEASE_ID","DISCOGS_RATING","DISCOGS_RELEASED","DISCOGS_RELEASE_ID","DISCOGS_VOTES","CATALOGID","STYLE","REPLAYGAIN_ALBUM_GAIN","REPLAYGAIN_ALBUM_PEAK","REPLAYGAIN_MINMAX","REPLAYGAIN_ALBUM_MINMAX","REPLAYGAIN_UNDO","VorbisTagMapper","maxScore","riffInfoTagMap","IART","ICRD","INAM","TITL","IPRD","ITRK","IPRT","ICMT","ICNT","GNRE","IWRI","RATE","YEAR","ISFT","CODE","TURL","IGNR","IENG","ITCH","IMED","IRPD","RiffInfoTagMapper","ebmlTagMap","MatroskaTagMapper","NAME","AUTH","ANNO","AiffTagMapper","CombinedTagMapper","tagMappers","forEach","mapper","registerTagMapper","mapTag","tagType","genericTagMapper","TagPriority","MetadataCollector","format","trackInfo","native","common","quality","commonOrigin","originPriority","tagMapper","priority","artificial","id3v1","hasAny","addStreamInfo","streamInfo","codecName","setFormat","observer","metadata","addTag","toCommon","warning","message","setGenericTag","artistTag","concat","join","postFixPicture","then","substr","minMix","leftChannel","rightChannel","commonTag","text","descriptor","lrcString","lines","syncText","timestampRegex","line","timestamp","contentType","timeStampFormat","milliseconds","parseLrc","toCommonMetadata","from","toLocaleLowerCase","genericTag","prio0","prio1","alias","isUnique","mpegParserLoader","parserType","extensions","mimeTypes","MpegParser","apeParserLoader","APEv2Parser","asfParserLoader","AsfParser","dsdiffParserLoader","DsdiffParser","aiffParserLoader","AIFFParser","dsfParserLoader","DsfParser","flacParserLoader","FlacParser","matroskaParserLoader","MatroskaParser","mp4ParserLoader","MP4Parser","musepackParserLoader","MusepackParser","oggParserLoader","OggParser","wavpackParserLoader","WavPackParser","riffParserLoader","WaveParser","parsers","parser","registerParser","parserLoader","scanAppendingHeaders","findLoaderForContentType","path","findLoaderForExtension","guessedType","load","filePath","extension","fname","getExtension","find","httpContentType","subtype","suffix","parameters","parseHttpContentType","subType","substring","loader","getSupportedMimeTypes","mimeTypeSet","Array","endTag2","parseBlob","File","name","webStream","parseFromTokenizer","parseWebStream","selectCover","pictures","cur","apeOffset","lyricsLen","fileSize","txt","getLyricsHeaderLength","apeHeader","findApeFooterOffset","dv","byteOffset","UINT8","getUint8","setUint8","getUint16","setUint16","UINT16_BE","UINT24_LE","dataView","UINT24_BE","setUint32","UINT32_BE","INT8","getInt8","setInt8","INT16_BE","getInt16","setInt16","INT16_LE","INT24_LE","unsigned","INT24_BE","INT32_BE","getInt32","setInt32","INT32_LE","UINT64_LE","getBigUint64","setBigUint64","INT64_LE","getBigInt64","setBigInt64","UINT64_BE","INT64_BE","Float16_BE","Float16_LE","Float32_BE","getFloat32","setFloat32","Float32_LE","Float64_BE","getFloat64","setFloat64","Float64_LE","Float80_BE","Float80_LE","IgnoreType","off","Uint8ArrayType","encoding","textDecoder","uint8Array","AnsiStringType","validFourCC","FourCcToken","h","w","plural","ms","msAbs","isPlural","round","module","val","String","exec","isFinite","long","fmtShort","stringify","DescriptorParser","ID","descriptorBytes","headerBytes","seekTableBytes","headerDataBytes","apeFrameDataBytes","apeFrameDataBytesHigh","terminatingDataBytes","fileMD5","Header","compressionLevel","formatFlags","blocksPerFrame","finalFrameBlocks","totalFrames","bitsPerSample","channel","sampleRate","TagFooter","fields","parseTagFlags","TagItemHeader","containsHeader","isBitSet","containsFooter","isHeader","readOnly","dataType","num","bit","tagFormat","preamble","ApeContentError","BasicParser","arguments","ape","tryParseApeHeader","calculateDuration","ah","duration","apeBuf","tagFooter","footer","parseTagFooter","parseTags","remaining","lenExp","parseDescriptorExpansion","parseHeader","forwardBytes","keyBuffer","bytesRemaining","tagItemHeader","zero","values","Promise","all","skipCovers","picData","formatArgs","args","useColors","namespace","humanize","diff","color","splice","lastC","save","namespaces","storage","setItem","removeItem","getItem","process","env","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","localStorage","localstorage","destroy","warned","warn","colors","formatters","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","Date","prev","coerce","unshift","formatter","call","apply","selectColor","extend","defineProperty","enumerable","configurable","init","delimiter","newDebug","matchesTemplate","search","template","searchIndex","templateIndex","starIndex","matchIndex","default","stack","disable","names","skips","enable","filter","Boolean","ns","skip","hash","TargetType","TrackType","video","audio","complex","logo","button","control","TrackTypeValueToKeyMap","AttachedPictureType","LyricsContentType","other","movement_part","events","chord","trivia_pop","TimestampFormat","notSynchronized0","mpegFrameNumber","UINT32SYNCSAFE","ID3v2Header","fileIdentifier","major","revision","unsynchronisation","isExtendedHeader","expIndicator","ExtendedHeader","extendedFlags","sizeOfPadding","crcDataPresent","TextEncodingToken","bom","TextHeader","SyncTextHeader","TYPE_REGEXP","MediaType","getBit","findZero","trimRightNull","pos0","decodeString","swapBytes","stripNulls","getBitAllignedNumber","bitOffset","bitOff","bitsRead","bitsLeft","a2hex","arr","hex","toRatio","ps","dB","ratio","log10","PARAM_REGEXP","TEXT_REGEXP","TOKEN_REGEXP","QESC_REGEXP","QUOTE_REGEXP","qstring","ContentType","create","obj","param","params","sort","getHeader","getcontenttype","lastIndex","makeParseError","CouldNotDetermineFileTypeError","UnsupportedFileTypeError","UnexpectedFileContentError","FieldDecodingError","InternalParserError","makeUnexpectedFileContentError","Genres","Iid3v1Token","Id3v1StringType","zeroByte","stringType","ID3v1Parser","getGenre","genreIndex","apeParser","props","hasID3v1Header","objectToString","prototype","uint8ArrayStringified","arrayBufferStringified","isType","typeConstructor","typeStringified","isUint8Array","cachedDecoders","utf8","globalThis","uint8ArrayToString","isArrayBuffer","isUint8ArrayOrArrayBuffer","assertUint8ArrayOrArrayBuffer","assertString","cachedEncoder","stringToUint8Array","byteToHexLookupTable","_","padStart","uint8ArrayToHex","assertUint8Array","hexString","hexToDecimalLookupTable","A","B","C","D","E","F","hexToUint8Array","resultLength","bytes","highNibble","lowNibble","getUintBE","view","byteLength","arrayLength","valueLength","validOffsetLength","isMatch","index2","EndOfStreamError","AbortError","AbstractStreamReader","endOfStream","interrupted","peekQueue","peek","bytesRead","readFromPeekBuffer","readRemainderFromStream","peekData","pop","lenCopy","chunkLen","readFromStream","WebStreamReader","abort","WebStreamByobReader","result","WebStreamDefaultReader","writeChunk","target","written","totalBytesRead","cancel","AbstractTokenizer","numBuffer","onClose","addEventListener","token","readNumber","bytesLeft","normalizeOptions","resolve","streamReader","normOptions","skipBuffer","bufSize","totBytesRead","BufferTokenizer","bytes2read","fromWebStream","webStreamReader","ReadableStreamDefaultReader","makeWebStreamReader","_options","chainedClose"],"sourceRoot":""}