{"version":3,"file":"1241.3dc7ae01a5b7d6c372e2.js","mappings":"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AyBxH,GAAcwH,wBACvCvE,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAzT,oBACAvN,+BACAmgB,mBACAiF,kCAAmClL,EAASkL,kCAC5CrlB,gBACAyhB,2BACA6D,yBAA0B1H,GAAc0H,yBACxCC,gBAAiB3H,GAAc2H,gBAC/BptB,mBACAwpB,qBACAC,0BACA4D,eAAgB16B,EAAU06B,kBAtLZpuC,EA7kEwBquC,EAC1CnlC,OACAyhC,gBACA2D,gBACAxF,oBACA+B,yBACA0D,UACAvxB,WACAmZ,iBACAh1B,SACA2e,YACAmK,WACAie,sBACAloB,mBACAuB,SACAphB,QACAwmC,gBACAkC,gBACAV,2BACA1J,wBACA2J,yBACA9B,iBACA5I,kBACAqN,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAc,4BACAtR,gBACAoN,cACAC,oBACAzL,0BACAgN,aACAC,iBACAlE,wBACA+D,0BACAkD,oBACApD,uBACAM,oBACAG,uBACAx/B,mBACAC,iBACAm7B,eACA0F,gBACAnB,wBACAjF,yBACAC,4BACAI,qBACAC,iBACA4E,gBACAE,cACAE,sBACAE,eACA5E,cACAD,YACAa,gBACAX,kBACAE,uBACA4E,iBACA7W,cACAgX,sBACA3J,sBACAlN,SACAsS,YACArB,+BACAwH,4BACAC,mBACAl8B,WACA9S,aACA+qC,sBACAC,gBACA4C,iBACAE,yBACAvX,0BACAyS,qBACAiF,eACAD,uBACAG,sBACAC,gBACA/E,uBACA5F,kBACAH,aACAgL,2BACA5X,qBACAqT,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAb,mBACAiF,qCACArlB,gBACAyhB,2BACA8D,mBACAptB,mBACAwpB,qBACAC,0BACA4D,kBACAO,cACAC,WACAC,UACAC,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,kBACdC,GAAiB,mBACjBC,GAAkB,qBAClBC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/ChatTags.module.scss?bf8a","webpack://telegram-t/./src/components/left/main/ChatTags.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/media/useMessageMediaHash.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useScrollNotch.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/right/statistics/helpers/isGraph.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"cgAMX02q\",\"tag\":\"oIgI9O0L\",\"tagColorMore\":\"hZDqIz3W\"};","import { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getApiPeerColorClass } from '../../common/helpers/peerColor';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport styles from './ChatTags.module.scss';\n\nconst MAX_VISIBLE_TAGS = 3;\n\ntype OwnProps = {\n  folderIds?: number[];\n  orderedIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  activeChatFolder?: number;\n};\n\nconst ChatTags = ({\n  folderIds,\n  orderedIds,\n  chatFoldersById,\n  activeChatFolder,\n}: OwnProps) => {\n  const activeFolderId = activeChatFolder !== undefined && orderedIds ? orderedIds[activeChatFolder] : undefined;\n\n  const orderedFolderIds = useMemo(() => orderedIds?.filter((id) => {\n    const isFolder = folderIds?.includes(id);\n    const isActive = id === activeFolderId;\n    const isAll = id === ALL_FOLDER_ID;\n\n    const folder = chatFoldersById?.[id];\n    const hasColor = folder?.color !== undefined && folder.color !== -1;\n\n    return isFolder && !isActive && !isAll && hasColor;\n  }) || [], [orderedIds, folderIds, activeFolderId, chatFoldersById]);\n\n  const visibleFolderIds = orderedFolderIds.slice(0, MAX_VISIBLE_TAGS);\n  const remainingCount = orderedFolderIds.length - visibleFolderIds.length;\n\n  return (\n    <div className={styles.wrapper}>\n      {visibleFolderIds.map((folderId) => {\n        const folder = chatFoldersById?.[folderId];\n        return folder && (\n          <div\n            key={folder.id}\n            className={buildClassName(\n              'ChatTags',\n              styles.tag,\n              getApiPeerColorClass({ color: folder.color }),\n            )}\n          >\n            {renderTextWithEntities({\n              text: folder.title.text,\n              entities: folder.title.entities,\n              noCustomEmojiPlayback: folder.noTitleAnimations,\n              emojiSize: 12,\n            })}\n          </div>\n        );\n      })}\n      {remainingCount > 0 && (\n        <div className={`ChatTags ${styles.tag} ${styles.tagColorMore}`}>\n          +\n          {remainingCount}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChatTags);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiChatFolder,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getChatFolderIds } from '../../../util/folderManager';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatTags from './ChatTags';\n\nimport './Chat.scss';\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n  withTags?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n  folderIds?: number[];\n  orderedIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  activeChatFolder?: number;\n  areTagsEnabled?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n  folderIds,\n  orderedIds,\n  chatFoldersById,\n  activeChatFolder,\n  areTagsEnabled,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const shouldRenderTags = areTagsEnabled && withTags && folderIds && folderIds.length > 1;\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n    noForumTitle: shouldRenderTags,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    shouldRenderTags && 'chat-item-with-tags',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className={buildClassName('info', shouldRenderTags && 'has-tags')}>\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n        {shouldRenderTags && (\n          <ChatTags\n            folderIds={folderIds}\n            orderedIds={orderedIds}\n            chatFoldersById={chatFoldersById}\n            activeChatFolder={activeChatFolder}\n          />\n        )}\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const folderIds = getChatFolderIds(chatId);\n    const { areTagsEnabled } = global.chatFolders;\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    const activeChatFolder = selectTabState(global).activeChatFolder;\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n      folderIds,\n      orderedIds: global.chatFolders.orderedIds,\n      activeChatFolder,\n      chatFoldersById: global.chatFolders.byId,\n      areTagsEnabled: areTagsEnabled && isPremium,\n    };\n  },\n)(Chat));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm || switchWebview) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  threadId?: ThreadId;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, threadId, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({\n                  chatId: message.chatId, messageId: message.id, threadId, button,\n                })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo, useRef, useSignal, useState } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type { GlobalState, TabState } from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { DEFAULT_MAX_MESSAGE_LENGTH } from '../../limits';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(\n      chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList,\n    ),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((\n    newHtml: string, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount && !shouldPrepend) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(!shouldPrepend ? `${getHtml()}${newHtml}` : `${newHtml}${getHtml()}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId, shouldPrepend);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft, undefined, true);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        },\n      );\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = selectCustomEmoji(getGlobal(), reaction.documentId);\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({});\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#000\"\n                filter=\"url(#composerAppendix)\"\n              />\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#FFF\"\n                className=\"corner\"\n              />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              threadId={threadId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_WINDOW_BUTTONS_POSITION = 'set-window-buttons-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type WindowButtonsPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setWindowButtonsPosition: (position: WindowButtonsPosition) => Promise<void>;\n  /**\n   * @deprecated Use `setWindowButtonsPosition` instead\n   */\n  setTrafficLightPosition: (position: WindowButtonsPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setColor'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'setColor':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          color: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage,\n  getMessageTextWithFallback,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageTextWithFallback(lang, message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(oldLang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): StateProps => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useEffect, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport { ELECTRON_WINDOW_DRAG_EVENT_START } from '../config';\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  useEffect(() => {\n    document.body.addEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n\n    return () => {\n      document.body.removeEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n  withTags?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n          withTags={withTags}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: ElementRef<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  const overscrollTriggerRef = useRef<HTMLDivElement>();\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">{lang('FileDropZoneTitle')}</div>\n        {!isGeneric && (\n          <div className=\"description\">\n            {isQuick ? lang('FileDropZoneQuick') : lang('FileDropZoneNoCompression')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { isIpRevealingMedia } from '../../util/media/ipRevealingMedia';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutFiles,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isFileIpDialogOpen, openFileIpDialog, closeFileIpDialog] = useFlag();\n  const [shouldNotWarnAboutFiles, setShouldNotWarnAboutFiles] = useState(false);\n\n  const { fileName, size, timestamp, mimeType } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const shouldForceDownload = document.innerMediaType === 'photo' && !document.mediaSize?.fromDocumentAttribute;\n\n  const withMediaViewer = onMediaClick && document.innerMediaType && !shouldForceDownload;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (isIpRevealingMedia({ mimeType, extension }) && shouldWarnAboutFiles) {\n      openFileIpDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleFileIpConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutFiles: !shouldNotWarnAboutFiles });\n    closeFileIpDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isFileIpDialogOpen}\n        onClose={closeFileIpDialog}\n        confirmHandler={handleFileIpConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutFiles}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutFiles}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const value = useMemo(() => {\n    if (age) {\n      return lang(\n        `ProfileBirthday${isToday ? 'Today' : ''}ValueYear`,\n        { date: formattedDate, age },\n        { pluralValue: age },\n      );\n    }\n\n    return lang(`ProfileBirthday${isToday ? 'Today' : ''}Value`, { date: formattedDate });\n  }, [age, formattedDate, isToday, lang]);\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(value)}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n  noForumTitle?: boolean;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n  noForumTitle,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {\n        !noForumTitle && (\n          <>\n            {lastActiveTopic && (\n              <div className={styles.titleRow}>\n                <div\n                  className={buildClassName(\n                    styles.mainColumn,\n                    lastActiveTopic.unreadCount && styles.unread,\n                  )}\n                  ref={mainColumnRef}\n                  onClick={handleOpenTopicClick}\n                  onMouseDown={handleOpenTopicMouseDown}\n                >\n                  <TopicIcon\n                    topic={lastActiveTopic}\n                    observeIntersection={observeIntersection}\n                  />\n                  <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n                  {!overwrittenWidth && isReversedCorner && (\n                    <div className={styles.afterWrapper}>\n                      <div className={styles.after} />\n                    </div>\n                  )}\n                </div>\n\n                <div className={styles.otherColumns}>\n                  {otherTopics.map((topic) => (\n                    <div\n                      className={buildClassName(\n                        styles.otherColumn, topic.unreadCount && styles.unread,\n                      )}\n                      key={topic.id}\n                    >\n                      <TopicIcon\n                        topic={topic}\n                        className={styles.otherColumnIcon}\n                        observeIntersection={observeIntersection}\n                      />\n                      <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className={styles.ellipsis} />\n              </div>\n            )}\n            {!lastActiveTopic && (\n              <div className={buildClassName(styles.titleRow, styles.loading)}>\n                {lang('Loading')}\n              </div>\n            )}\n          </>\n        )\n      }\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && !noForumTitle && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n  noForumTitle,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n  noForumTitle?: boolean;\n}) {\n  const lang = useLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('ChatDraftPrefix')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(lang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n          noForumTitle={noForumTitle}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): StateProps => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"userRatingNegativeWrapper\":\"_1NuEm_bF\",\"userRatingWrapper\":\"Ura8xDvW\",\"ratingNegativeIcon\":\"MwbjmAph\",\"ratingIcon\":\"lks6uKRt\",\"ratingLevel\":\"dco9YF7C\",\"userStatus\":\"jwNQ18lU\",\"getStatus\":\"xzCgzBx8\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserFullInfo, ApiUserStatus,\n} from '../../api/types';\nimport type { AnimationLevel } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState.ts';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { resolveTransitionName } from '../../util/resolveTransitionName.ts';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\nconst MAX_LEVEL_ICON = 90;\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userFullInfo?: ApiUserFullInfo;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    animationLevel: AnimationLevel;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userFullInfo,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n    openProfileRatingModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  const handleRatingClick = useLastCallback((level: number) => {\n    if (user) {\n      openProfileRatingModal({ userId: user.id, level });\n    }\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={oldLang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderUserRating() {\n    if (!userFullInfo?.starsRating) return undefined;\n\n    const level = userFullInfo.starsRating.level;\n    const isNegative = level < 0;\n\n    const onRatingClick = () => handleRatingClick(level);\n\n    if (isNegative) {\n      return (\n        <span className={styles.userRatingNegativeWrapper} onClick={onRatingClick}>\n          <Icon\n            name=\"rating-icons-negative\"\n            className={styles.ratingNegativeIcon}\n          />\n          <span className={styles.ratingLevel}>!</span>\n        </span>\n      );\n    }\n\n    const safeLevel = Math.max(level, 1);\n    const iconLevel = Math.min(safeLevel, MAX_LEVEL_ICON);\n    const iconName = (iconLevel < 10\n      ? `rating-icons-level${iconLevel}`\n      : `rating-icons-level${Math.floor(iconLevel / 10) * 10}`) as IconName;\n\n    return (\n      <span className={styles.userRatingWrapper} onClick={onRatingClick}>\n        <Icon\n          name={iconName}\n          className={styles.ratingIcon}\n        />\n        <span className={styles.ratingLevel}>{level}</span>\n      </span>\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          {renderUserRating()}\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition\n          activeKey={currentPhotoIndex}\n          name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, oldLang.isRtl)}\n        >\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={oldLang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={oldLang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={oldLang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userFullInfo = user ? selectUserFullInfo(global, peerId) : undefined;\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? selectCustomEmoji(global, emojiStatus.documentId) : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userFullInfo,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectCustomEmoji, selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = selectCustomEmoji(global, documentId);\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n  selectCustomEmoji,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = selectCustomEmoji(global, customEmojiId);\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  threadId,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutFiles?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutFiles,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutFiles,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            threadId={threadId}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutFiles={shouldWarnAboutFiles}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={oldLang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('FocusMessage')}\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutFiles } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig.starsSuggestedPostFutureMin;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutFiles,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser, ApiWebPage } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMainUsername, getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, openChatWithDraft, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChatWithDraft({\n      chatId,\n      threadId,\n      text: {\n        text: `@${getMainUsername(botSender)} `,\n      },\n    });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","props","CustomSend","useModuleLoader","Bundles","Extra","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","reduce","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","isDisabled","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","window","innerWidth","requestMutation","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","passive","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","useRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","verifyAgeMin","appConfig","VERIFY_AGE_MIN_DEFAULT","SensitiveContentConfirmModal","shouldAlwaysShow","onAlwaysShowChanged","_jsxs","years","Checkbox","label","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","width","innerHeight","seed","Math","floor","Date","now","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","Array","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","fill","in2","operator","scale","xChannelSelector","yChannelSelector","forceShowSelf","isSynced","userStatus","selectUserStatus","isSavedMessages","isSelf","self","areMessagesLoaded","selectChatMessages","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","isSavedDialog","adminMember","ripple","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","openMediaViewer","loadMoreProfilePhotos","hasAvatarMediaViewer","peerId","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","stopPropagation","isAvatarView","mediaIndex","origin","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","buildClassName","dir","isRtl","Avatar","size","storyViewerMode","onClick","FullNameTitle","withEmojiStatus","DotAnimation","content","subtitleKey","TypingStatus","isSystemBot","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","ChatCallStatus","isSelected","isMobile","ChatTags","folderIds","chatFoldersById","activeChatFolder","activeFolderId","orderedFolderIds","isFolder","isAll","ALL_FOLDER_ID","folder","hasColor","color","visibleFolderIds","slice","remainingCount","folderId","getApiPeerColorClass","renderTextWithEntities","text","entities","noCustomEmojiPlayback","noTitleAnimations","emojiSize","isPreview","previewMessageId","selectChat","getChatFolderIds","areTagsEnabled","chatFolders","isPremium","selectIsCurrentUserPremium","lastMessageId","selectChatLastMessageId","lastMessage","selectChatMessage","selectChatLastMessage","isOutgoing","forwardInfo","savedDialogSender","fromId","selectPeer","messageSender","selectSender","lastMessageSender","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","isSelectedForum","isForum","selectTabState","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","storyData","lastMessageStory","selectPeerStory","isAccountFrozen","selectIsCurrentUserFrozen","monoforumChannel","selectMonoforumChannel","isMuted","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topics","topicsById","Chat","orderDiff","animationType","isPinned","observeIntersection","offsetTop","onDragEnter","withTags","openChat","openSavedDialog","toggleChatInfo","focusLastMessage","focusMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","useAppLayout","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","useEnsureMessage","shouldRenderTags","renderSubtitle","ref","useChatListEntry","statefulMediaContent","groupStatefulContent","story","noForumTitle","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","handleClick","noForumTopicPanel","value","forceOnHeavyAnimation","force","shouldReplaceHistory","handleDragEnter","preventDefault","handleDelete","handleMute","handleChatFolderChange","handleReport","messageIds","contextActions","useChatContextActions","isIntersecting","useIsIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","href","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","isUserId","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","isCallActive","isCallNotEmpty","monoforumBadgeClassName","LastMessageMeta","outgoingStatus","draftDate","date","hasMiniApp","hasMainMiniApp","DeleteChatModal","onCloseAnimationEnd","MuteChatModal","ChatFolderModal","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","settings","byKey","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","loadPeerStoriesByIds","loadStoryThrottled","throttled","throttle","storyIds","resetInput","applyIosAutoCapitalizationFix","focus","IS_IOS","createElement","classList","add","body","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","handlePaste","async","clipboardData","input","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","textContents","querySelectorAll","getElementsByTagName","removeAttribute","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","isWordDocument","hasText","shouldSetAttachments","newAttachments","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","pluralValue","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","default","start","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","volume","cb","requestMeasure","subscribeToAnalyzer","stop","onstop","blob","Blob","duration","round","onerror","delayStop","max","setTimeout","pause","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","theme","shouldCollectDebugLogs","canEditMedia","editingMessage","paidMessagesStars","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","updateAttachmentSettings","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","validateFiles","handleQuickSelect","shouldCompress","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","oldLang","ResponsiveHoverButton","onActivate","ariaLabel","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","_Fragment","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","button","renderKeyboardButtonText","noCompact","j","Button","BotMenuButton","textRef","textEl","scrollWidth","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","isForwarding","forwardedMessages","replyInfo","suggestedPostInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","selectForwardedSender","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","isContextMenuDisabled","isReplyToDiscussion","isMediaNsfw","selectIsMediaNsfw","forwardedMessagesCount","isCurrentUserPremium","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","updateDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","isShown","shouldRender","transitionClassNames","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","renderingSender","useCurrentOrPrev","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","webpageType","WebPagePreview","isEditing","toggleMessageWebPage","isInvertedMedia","isSmallerMedia","webPageMediaSize","useShowTransition","withShouldRender","hasMediaSizeOptions","hasLargeMedia","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","useThumbnail","previewMedia","getWebPagePhoto","getWebPageVideo","getWebPageAudio","getWebPageDocument","previewMediaHash","getMediaHash","previewMediaUrl","useMedia","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handleBeforeContextMenu","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","PeerColorWrapper","noUserColors","onMouseDown","src","siteName","url","description","webPage","photo","video","audio","MainButtonState","chatBot","selectBot","isChatWithBot","isChatWithUser","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAppConfigLoaded","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","selectTheme","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","useSignal","isMounted","setIsMounted","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowSize","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isChatSuperGroup","isChatPublic","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","setShouldPaidMessageAutoApprove","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","shouldPrepend","selection","getSelection","messageInput","rangeCount","getRangeAt","insertHtmlInSelection","dispatchEvent","Event","bubbles","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","filename","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","shouldUpdateSuggestedPost","EDITABLE_INPUT_CSS_SELECTOR","customEmojiIds","entity","documentId","useLayoutEffect","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","link","useLoadLinkPreview","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","formatMediaDuration","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","voice","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","handleToDoListSend","todo","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleSuggestPostClick","price","currency","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","adminRights","anonymous","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","fullClassName","handleToggleReaction","reaction","emoticon","selectCustomEmoji","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","prevShouldRenderPaidBadge","usePrevious","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","filterUnits","dy","stdDeviation","d","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","slideClassName","direction","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","nonInteractive","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","messagePriceInStars","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","peers","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","isRestricted","selectIsChatRestricted","usePrevDuringAnimation","prev","timeoutRef","isCurrentPresent","isPrevPresent","clearTimeout","wasTopicOpened","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","handleOpenApp","extractCurrentThemeParams","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","Video","isOwn","isInWebPage","noAvatars","canAutoLoad","canAutoPlay","uploadProgress","forcedWidth","dimensions","asForwarded","isDownloading","isProtected","lastPlaybackTimestamp","clickArg","observeIntersectionForLoading","observeIntersectionForPlaying","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","mediaType","localBlobUrl","blobUrl","shouldShowSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","getVideoMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","withBlurredBackground","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRenderSpinner","noMountTransition","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTarget","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","media","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","canPlay","defaultMuted","muted","loop","playsInline","disablePictureInPicture","draggable","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","isGif","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","withPortal","onLoad","onSearchOpen","ElectronEvent","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","isArchived","cancelDelayedCallbacks","container","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","index","isLast","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","String","opacity","transform","ghostRevealName","createDelayedCallback","contains","ANIMATION_END_DELAY","animateClosing","ribbon","ribbonStyles","sourceEl","oncontextmenu","stopEvent","sourceCanvas","canvas","getContext","drawImage","ms","timeout","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","calculateMediaDimensions","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","messages","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","selectWebPageFromMessage","WebLink","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","formattedDescription","getMessageTextWithFallback","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","Link","SafeLink","formatPastTimeShort","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","TopicIcon","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","onStart","onEnd","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","end","cancel","useUnmountCleanup","ELECTRON_WINDOW_DRAG_EVENT_START","onMouseUp","onTouchStart","onTouchEnd","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","isRibbonShown","isArchivedRibbonShown","chatsById","chats","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","useStoryPreloader","beginHeavyAnimation","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","getChatTitle","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","screen","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","a","b","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","isText","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","digit","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","clientX","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","inputSelector","getRange","setRange","onSelectionChange","Element","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","onDrop","rx","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","withSticker","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","noLoop","Document","smaller","autoLoadFileMaxSizeMb","withDate","datetime","isSelectable","shouldWarnAboutFiles","onMediaClick","onDateClick","downloadMedia","setSharedSettingOption","isFileIpDialogOpen","openFileIpDialog","closeFileIpDialog","shouldNotWarnAboutFiles","setShouldNotWarnAboutFiles","fileName","timestamp","mimeType","extension","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","getDocumentMediaHash","isLoaded","hasPreview","getDocumentHasPreview","previewData","shouldForceDownload","innerMediaType","mediaSize","fromDocumentAttribute","handleDownload","originMessage","isIpRevealingMedia","handleFileIpConfirm","handleDateClick","thumbnailDataUri","actionIcon","isDocumentVideo","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","role","tabIndex","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","effectSticker","randomEffect","random","getStickerMediaHash","ApiMediaFormat","BlobUrl","effectHash","column","canGiftPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","forceAlways","shouldLoop","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openMapModal","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","idx","dataTransferItems","traverseFileTreePromise","item","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","IS_ELECTRON","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isChatGroup","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","confirmPaymentMessage","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","isAnonymousForwardsChat","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","detectedLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","requestForcedReflow","currentHeight","handleResize","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transition","isPanelOpen","path","DEFAULT_HANDLERS","play","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","TOPIC_ICON_SIZE","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","Photo","isInSelectMode","shouldAffectAppendix","getPhotoMediaHash","prevMediaData","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","dimensionsStyle","fileSelector","accept","noMultiple","onchange","click","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","mediaHash","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","withTranslucentThumbs","senderName","getMessageSenderName","renderSummary","Opacity","Move","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","Inline","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","time","fastSeek","setVolume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","stroke","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","options","createObjectURL","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","parseAudioMetadata","uniqueId","shouldSendCompressed","attach","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","senderId","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","r","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","formatTemperature","temperatureC","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","lastCallback","onBeforeUnload","useScrollNotch","selector","deps","isScrolled","toggleExtraClass","addExtraClass","removeExtraClass","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","AvatarList","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","useMessageTranslation","chatTranslations","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translatedText","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","onClickTranscribe","onHideTranscription","ry","OneTimeModal","mediaDuration","selectMessageMediaDuration","canDownload","canTranscribe","autoPlay","onPlay","onPause","onReadMedia","transcribeAudio","openOneTimeMediaModal","contentAudio","mediaSource","isVoice","isSeeking","isActivated","setIsActivated","coverHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","isMessageLocal","reversePlayProgress","isOwnMessage","isReverse","withAvatar","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","captureEvents","onCapture","onRelease","onDrag","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","unloadVideo","checkIfStreamingSupported","buffer","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","delay","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","Progressive","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","ProfilePhoto","canPlayVideo","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","specialIcon","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","animationLevel","emojiStatus","emojiStatusSticker","emojiStatusSlug","ProfileInfo","isForMonoforum","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openProfileRatingModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","handleRatingClick","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","resolveTransitionName","canCopyTitle","isSystemBotChat","renderUserRating","isReadDateRestrictedByMe","renderStatus","starsRating","onRatingClick","safeLevel","iconLevel","iconName","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","isGraph","obj","openChatWithInfo","openStoryViewer","toggleStoriesHidden","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","newHeight","isOverflown","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","onChange","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","getMessageHtmlId","decoding","shouldUseDraft","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","RoundVideo","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","strokeDashOffset","stopPlaying","capturePlaying","togglePlaying","isPriority","onEnded","cx","cy","replaceWithTeact","STARS_ICON_PLACEHOLDER","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","getSingularPaidMedia","extendedMedia","singularMedia","accumulate","initValue","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","paidMedia","getMessageContent","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","pictogramUrl","handleFastClick","peerColor","shouldReset","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","selectCanAutoPlayMedia","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","getMessageText","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","buttonType","Invoice","invoice","getMessageInvoice","isTest","photoUrl","getWebDocumentHash","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","Location","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","formatCountdownShort","renderPin","pinClassName","heading","venueType","iconSrc","mapPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","starsAmount","getPercentage","total","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","Poll","onSendVote","loadMessage","openPollResults","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","withEffect","onStopEffect","effectRef","hasEffect","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","imageHash","imgBlobUrl","isSinglePeer","isSingleStory","connectionState","BaseStory","selectPeerStories","targetUser","thumbUrl","TodoList","todoList","toggleTodoCompleted","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","itemId","handleTaskLabelClick","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","WebPageUniqueGift","gift","stickerRef","backdrop","model","pattern","getGiftAttributes","isHover","markHover","unmarkHover","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","WebPage","messageWebPage","backgroundEmojiId","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","linkTimestamp","handleOpenTelegramLink","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getPhotoFullDimensions","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","isSafe","caption","isRectangular","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","selectFullWebPageFromMessage","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","selectMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","minFutureTime","starsSuggestedPostFutureMin","isReplyMediaNsfw","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","getMessageWebPage","shouldRenderSenderName","renderForwardTitle","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","isAccepted","isRejected","isSuggestedPostExpired","scheduleDate","onCopy","onDoubleClick","onMouseMove","shouldReadMedia","EmbeddedMessage","forwardSender","Story","StoryMention","MessageAppendix","isOutside","targetHref","InputText","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","formatScheduledDateTime","getMediaContentTypeDescription","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}