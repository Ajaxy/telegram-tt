{"version":3,"file":"3779.ec893bd9a88f582a67e4.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.module.scss?8334","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.module.scss?e7ab","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommand.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/main/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/main/InviteViaLinkModal.module.scss?0f1a","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getMessageActionPhoto,\n  getMessageDocument,\n  getMessageFileName,\n  getMessageFileSize,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoFullDimensions,\n  getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\ntype UseMediaProps = {\n  mediaId?: number;\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  message,\n  mediaId = 0,\n  avatarOwner,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const actionPhoto = message ? getMessageActionPhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n  const avatarMedia = avatarOwner?.photos?.[mediaId];\n  const isVideoAvatar = Boolean(avatarMedia?.isVideo || actionPhoto?.isVideo);\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto || actionPhoto));\n  const { isGif } = video || webPageVideo || {};\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaHash = useMemo(() => (isFull?: boolean) => {\n    if (avatarOwner) {\n      if (avatarMedia) {\n        if (avatarMedia.isVideo && isFull) {\n          return getVideoAvatarMediaHash(avatarMedia);\n        } else if (mediaId === 0) {\n          // Show preloaded avatar if this is the first media (when user clicks on profile info avatar)\n          return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n        } else {\n          return `photo${avatarMedia.id}?size=c`;\n        }\n      } else {\n        return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n      }\n    }\n    if (actionPhoto && isVideoAvatar && isFull) {\n      return `videoAvatar${actionPhoto.id}?size=u`;\n    }\n    return message && getMessageMediaHash(message, isFull ? 'full' : 'preview');\n  }, [avatarOwner, actionPhoto, isVideoAvatar, message, avatarMedia, mediaId]);\n\n  const pictogramBlobUrl = useMedia(\n    message\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocumentPhoto || isDocumentVideo)\n    && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const isLocal = Boolean(localBlobUrl);\n  const fileName = message\n    ? getMessageFileName(message)\n    : avatarOwner\n      ? `avatar${avatarOwner!.id}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  const dimensions = useMemo(() => {\n    if (message) {\n      if (isDocumentPhoto || isDocumentVideo) {\n        return getMessageDocument(message)!.mediaSize!;\n      } else if (photo || webPagePhoto || actionPhoto) {\n        return getPhotoFullDimensions((photo || webPagePhoto || actionPhoto)!)!;\n      } else if (video || webPageVideo) {\n        return getVideoDimensions((video || webPageVideo)!)!;\n      }\n    } else {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n    return undefined;\n  }, [\n    isDocumentPhoto,\n    isDocumentVideo,\n    isVideoAvatar,\n    message,\n    photo,\n    video,\n    actionPhoto,\n    webPagePhoto,\n    webPageVideo,\n  ]);\n\n  return {\n    getMediaHash,\n    photo,\n    video,\n    webPagePhoto,\n    actionPhoto,\n    webPageVideo,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocumentPhoto,\n    isDocumentVideo,\n    fileName,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    avatarPhoto: avatarMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    videoSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(selectBot(global, message.chatId));\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { MenuItemProps } from '../ui/MenuItem';\n\nimport { getMessageMediaFormat, getMessageMediaHash, isUserId } from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsDownloading,\n  selectIsMessageProtected,\n} from '../../global/selectors';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  avatarOwnerId?: string;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  message?: ApiMessage;\n  canUpdateMedia?: boolean;\n  isSingleMedia?: boolean;\n  avatarPhoto?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  fileName?: string;\n  canReport?: boolean;\n  selectMedia: (mediaId?: number) => void;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  avatarPhoto,\n  avatarOwnerId,\n  fileName,\n  isChatProtected,\n  isDownloading,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  selectMedia,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    message && getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (!avatarPhoto || !avatarOwnerId) return;\n    if (isUserId(avatarOwnerId)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwnerId, photo: avatarPhoto });\n    }\n    selectMedia(0);\n  });\n\n  const lang = useLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    return message\n      ? (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={message}\n        />\n      )\n      : (avatarOwnerId && avatarPhoto) ? (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={avatarOwnerId}\n          photo={avatarPhoto}\n        />\n      ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (message?.isForwardingAllowed && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {message?.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message, canUpdateMedia, avatarPhoto, avatarOwner,\n  }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      isDownloading,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      avatarOwnerId: avatarOwner?.id,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => videoPreview?.destroy();\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FWH9e05HHn4BJrkuqmgL\",\"preview\":\"PmR9chdfbwrolc8FOkNB\",\"previewCanvas\":\"O7IGkaF5yzopTKVImH2v\",\"previewTime\":\"R85IB61J5InMMYwLQWxU\",\"previewTimeText\":\"QBMgsZDdCiXJzzHzd8rg\",\"track\":\"YiY5CtrarIYsGovxCo1b\",\"buffered\":\"s3rSBAeNFQimTK3eRl8t\",\"played\":\"sQTcQShWx8rMXJFKN2hO\",\"seeking\":\"pNanY7hqtTLHXdRob0qg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useFullscreen from '../../hooks/useFullscreen';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered && !isUnsupported, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChat, selectChatMessage, selectIsMessageProtected, selectScheduledMessage, selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  mediaId?: number;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  isMoving?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  mediaId?: number;\n  senderId?: string;\n  threadId?: number;\n  avatarOwner?: ApiPeer;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    mediaId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    origin,\n    withAnimation,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    isHidden,\n    onClose,\n    onFooterClick,\n    isMoving,\n  } = props;\n\n  const lang = useLang();\n\n  const {\n    isVideo,\n    isPhoto,\n    actionPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    videoSize,\n    loadProgress,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (avatarOwner || actionPhoto) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={mediaId}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = message.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message, forcePlayback: true, isForMediaViewer: true });\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = message && calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={mediaId}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n    } = selectTabState(global).mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        origin,\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport { useFullscreenStatus } from '../../hooks/useFullscreen';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport useTimeout from '../../hooks/useTimeout';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  mediaId?: number;\n  getMediaId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMedia: (id?: number) => void;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  onClose: () => void;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  mediaId,\n  getMediaId,\n  selectMedia,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveMediaId, setActiveMediaId] = useSignal<number | undefined>(mediaId);\n  const activeMediaIdRef = useSignalRef(getActiveMediaId);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeMediaId = useDerivedState(getActiveMediaId);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n  const { onClose } = rest;\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectMediaDebounced = useDebouncedCallback(selectMedia, [selectMedia], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveMediaId(mediaId);\n    }\n  }, [mediaId, setActiveMediaId, transformRef]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeMediaIdRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMediaId(activeMediaIdRef.current, direction);\n      if (mId !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMediaId(activeMediaIdRef.current, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    onClose,\n    setTransform,\n    getMediaId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMediaDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    withAnimation,\n    setIsMouseDown,\n    setIsActive,\n    isHidden,\n    isFullscreen,\n    transformRef,\n    setActiveMediaId,\n    activeMediaIdRef,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  if (activeMediaId === undefined) return undefined;\n\n  const nextMediaId = getMediaId(activeMediaId, 1);\n  const prevMediaId = getMediaId(activeMediaId, -1);\n  const hasPrev = prevMediaId !== undefined;\n  const hasNext = nextMediaId !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={prevMediaId}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...rest}\n          mediaId={activeMediaId}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={nextMediaId}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport { getSenderTitle } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectPeer,\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n  isFallbackAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isFallbackAvatar,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  });\n\n  const lang = useLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={sender.id} size=\"medium\" peer={sender} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang(isFallbackAvatar ? 'lng_mediaview_profile_public_photo' : 'lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: selectPeer(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getChatMediaMessageIds, isChatAdmin, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMediaSearch, selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: number;\n  mediaId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiPeer;\n  avatarOwnerFallbackPhoto?: ApiPhoto;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  mediaId,\n  senderId,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatarOwner,\n  avatarOwnerFallbackPhoto,\n  message,\n  chatMessages,\n  collectionIds,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const {\n    webPagePhoto,\n    webPageVideo,\n    isVideo,\n    actionPhoto,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n    avatarPhoto,\n    fileName,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = !!avatarPhoto && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  /* Navigation */\n  const singleMediaId = webPagePhoto || webPageVideo || actionPhoto ? mediaId : undefined;\n\n  const mediaIds = useMemo(() => {\n    if (singleMediaId) {\n      return [singleMediaId];\n    } else if (avatarOwner) {\n      return avatarOwner.photos?.map((p, i) => i) || [];\n    } else {\n      return getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n    }\n  }, [singleMediaId, avatarOwner, chatMessages, collectionIds, isFromSharedMedia]);\n\n  const selectedMediaIndex = mediaId ? mediaIds.indexOf(mediaId) : -1;\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaIndex;\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    if (typeof mql.addEventListener === 'function') {\n      mql.addEventListener('change', forceUpdate);\n    } else if (typeof mql.addListener === 'function') {\n      mql.addListener(forceUpdate);\n    }\n\n    return () => {\n      if (typeof mql.removeEventListener === 'function') {\n        mql.removeEventListener('change', forceUpdate);\n      } else if (typeof mql.removeListener === 'function') {\n        mql.removeListener(forceUpdate);\n      }\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwner = usePrevious<ApiPeer | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevMediaId !== mediaId;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (!prevMessage || shouldAnimateOpening) && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, shouldAnimateOpening, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const mediaIdRef = useStateRef(mediaId);\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    const currentMediaId = mediaIdRef.current;\n\n    if (!chatId || !currentMediaId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId: currentMediaId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId: currentMediaId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [mediaId!],\n    });\n  });\n\n  const selectMedia = useLastCallback((id?: number) => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      mediaId: id,\n      avatarOwnerId: avatarOwner?.id,\n      origin: origin!,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const mediaIdsRef = useStateRef(mediaIds);\n\n  const getMediaId = useLastCallback((fromId?: number, direction?: number): number | undefined => {\n    if (fromId === undefined) return undefined;\n    const mIds = mediaIdsRef.current;\n    const index = mIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < mIds.length - 1)) {\n      return mIds[index + direction];\n    }\n    return undefined;\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    if (mediaIds.length <= 1) {\n      handleClose();\n      return;\n    }\n    let index = mediaId ? mediaIds.indexOf(mediaId) : -1;\n    // Before deleting, select previous media or the first one\n    index = index > 0 ? index - 1 : 0;\n    selectMedia(mediaIds[index]);\n  });\n\n  const lang = useLang();\n\n  function renderSenderInfo() {\n    return avatarOwner ? (\n      <SenderInfo\n        key={mediaId}\n        chatId={avatarOwner.id}\n        isAvatar\n        isFallbackAvatar={isUserId(avatarOwner.id)\n          && (avatarOwner as ApiUser).photos?.[mediaId!]?.id === avatarOwnerFallbackPhoto?.id}\n      />\n    ) : (\n      <SenderInfo\n        key={mediaId}\n        chatId={chatId}\n        messageId={mediaId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          message={message}\n          canUpdateMedia={canUpdateMedia}\n          avatarPhoto={avatarPhoto}\n          avatarOwner={avatarOwner}\n          fileName={fileName}\n          canReport={canReport}\n          selectMedia={selectMedia}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        mediaId={mediaId}\n        getMediaId={getMediaId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectMedia={selectMedia}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n      isHidden,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId } = global;\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        withAnimation,\n        isHidden,\n        shouldSkipHistoryAnimations,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const user = selectUser(global, avatarOwnerId);\n      const chat = selectChat(global, avatarOwnerId);\n      let canUpdateMedia = false;\n      if (user) {\n        canUpdateMedia = avatarOwnerId === currentUserId;\n      } else if (chat) {\n        canUpdateMedia = isChatAdmin(chat);\n      }\n\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: user || chat,\n        avatarOwnerFallbackPhoto: user ? selectUserFullInfo(global, avatarOwnerId)?.fallbackPhoto : undefined,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectChatScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n    let collectionIds: number[] | undefined;\n\n    if (origin === MediaViewerOrigin.Inline\n      || origin === MediaViewerOrigin.Album) {\n      collectionIds = selectOutlyingListByMessageId(global, chatId, threadId, message.id)\n        || selectListedIds(global, chatId, threadId);\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gJ2Z_EQBnbDYMJ2NKHPj\",\"fullSize\":\"F47ywnKRf0QnMNfkDAhN\",\"backdrop\":\"aZegQFa4eGDydcez2hhX\",\"captionBackdrop\":\"tt0i3c46mBP8eper4sX9\",\"backdropNonInteractive\":\"qBNqjd4Jivn9JZM9LTR1\",\"close\":\"oHmnmRivkoOTtFlipOlm\",\"wrapper\":\"tfRbD6UXCoHpURk9jkFs\",\"slideAnimation\":\"KeE62xWk53FkLDgmLDHC\",\"slideAnimationToActive\":\"u4UY_cga_HGYeSeXtJFy\",\"content\":\"AS2XHnign2xV16Kjj6bL\",\"slideAnimationFromActive\":\"fMXsSVdwtbHbHVPe7TRY\",\"composer\":\"RrR48bdsuf7ziCaT39SR\",\"caption\":\"DfZIQpvbsc1Lopohx81T\",\"storyIndicators\":\"E5huzrUvL4LEC9dx4KwW\",\"slide\":\"Xd5grwcEn6r_RQyYYwTw\",\"slidePreview\":\"fH5dgpor5kv4sjYevuiU\",\"activeSlide\":\"Cs943zlR1iWQhsSG8QUZ\",\"slideInner\":\"UxBW6ApLLCk97qq1YxJH\",\"mediaWrapper\":\"tOO6t_Iv78rQnpDEOgh8\",\"media\":\"IWB6V7TuwMQUqxdPJDKT\",\"name\":\"zX3llen5J3KlIJGrCz2u\",\"forward\":\"mFCpxKAL5_Xa89VkFv5i\",\"storyHeader\":\"Kcahvy487TvQIEvXamQu\",\"sender\":\"E1bHDTXle6dida5Kw_Ob\",\"senderInfo\":\"MtJgsqpsPRYORGENbJDM\",\"senderName\":\"h7HZqUP3UoB_TWRA3ien\",\"storyMetaRow\":\"N9xfCNDRX4SkiLZ4_S9E\",\"storyMeta\":\"_fljB0mSVyj1YctbrtIQ\",\"closeButton\":\"qiXq5_w5pl5BhuytgsUI\",\"actions\":\"rlPJs7dRj8mRAAzEoxxg\",\"active\":\"YFM2wDC77SIBRSobTTNQ\",\"visibilityButton\":\"L2DlAgxoJ9gNRcSiZRkI\",\"visibilityButtonSelf\":\"uFpWDsHmcfI_qQSfKtph\",\"button\":\"Njk4jy0AOyHD31ABkS6M\",\"buttonMenu\":\"nqQ3MS3rHe4c00GJvtwh\",\"captionGradient\":\"MnckwrDaIp2zIGy011sM\",\"captionInner\":\"jXIvfN5QPnrzWo9eANQf\",\"captionContent\":\"_nAzidGNr0mdSkqyvmj_\",\"captionText\":\"ZsipcKd8hdBQ7muMSjLe\",\"hasOverflow\":\"d3FJsMTVC2kORJMGxgbG\",\"expanded\":\"zAH8_B8BrtyxRZR_iHvS\",\"animate\":\"ZguPPKlRJgtkBr7ENcvT\",\"withShowMore\":\"XOq3cloVnzuYbz2bQw_b\",\"captionShowMore\":\"OIcA1buYWPCjn6NzLZJn\",\"navigate\":\"nAa_W_FxKosbXRpB3tgu\",\"prev\":\"zwhGmE8SJA8XAnthasxt\",\"next\":\"a9J5InzXCE1XEX5m3A6J\",\"modal\":\"RiK8REKD0zdsqi8XRHh5\",\"thumbnail\":\"lFdi4MIeHlnMCtiJbwTA\",\"ghost\":\"zY4iKmbIIQ3TXtFU3PvS\",\"ghost2\":\"b1yiparcCewkKHh2aOHA\",\"ghostImage\":\"rAlVsvmsoSnnvgZfAsc5\",\"forwardHeader\":\"vPVaiaIOfZEhy_SOHHSA\",\"clickable\":\"J8NzxiUPqVRTJtAPvOyJ\",\"forwardHeaderText\":\"W_V_I0sahPT9FXCYnN8D\",\"forwardInfo\":\"c7iY3_4QyqnNeSocMGQr\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNraau1Tus9Dhh2t0acA\",\"closeButton\":\"osHMUMN4HFvGPbQ6eYUw\",\"stealthIcon\":\"VLiBdviejkHCeGYNuGbe\",\"title\":\"uEr8ArVuYRUD3Ca3K1Sr\",\"description\":\"uV7xfk10UeLETmkHjCSv\",\"listItem\":\"P7J78AMcEBuYTdRnkNpv\",\"icon\":\"cFpiujXxzIbtMShso6wr\",\"button\":\"z5JVVwDZqJmujLRuZYiL\",\"subtitle\":\"ADx8YQgxcFasnFZ14Tcy\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <Picker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"wU1uWdwnVeSGSB5gOjJ6\",\"active\":\"SlrHi8_ck8rgqhL48EhA\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Tc2kIulYTlFPvwfiTsFu\",\"header\":\"JXAfpcoB9izWjIX_WP0Q\",\"closeButton\":\"Hku60UdVn3LASgJdRQuw\",\"headerTitle\":\"L0Y7Snis7FiIcjMWZBBV\",\"content\":\"TBDaWd1Xw_wRqKUfj6IE\",\"section\":\"aNUFlXJVOpJVBLust1Ow\",\"title\":\"zNuDMViBzMNzGZxwFYGt\",\"list\":\"uW2YeebP6I62I5STt6az\",\"option\":\"CmouOddJNYo5qMb1eDhZ\",\"checked\":\"PxjIam8OpB7IAvp7fByQ\",\"input\":\"K9FImlb6XOJreshP5cfK\",\"icon\":\"Wpl9IXFnTYZf8HWj8H7_\",\"action\":\"oOUd_PRdTkIxpN_BekC1\",\"optionContent\":\"BkziTDKbvbzgii4mPbsx\",\"footer\":\"gH3hgLj6tnN_xhycOx0Q\",\"info\":\"i2HOS8g2UGDP69ABnvAe\",\"submit\":\"XwAIvijHgerStkRxm6rt\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryPinned } = getActions();\n\n  const lang = useLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isPinned);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isPinned !== isPinned) {\n      toggleStoryPinned({ peerId: story!.peerId, storyId: story!.id, isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n\n  const caption = story.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransition(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const lineHeight = parseInt(getComputedStyle(textContainer).lineHeight, 10);\n      const isOverflowing = textContainer.clientHeight > lineHeight * LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {story.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={story.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          <div ref={textRef} className={styles.captionText}>\n            <MessageText\n              messageOrStory={story}\n              withTranslucentThumbs\n              forcePlayback\n            />\n          </div>\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SZ7yrkn5jnFJYa8rf9Lq\",\"viewInfo\":\"sGmslpAUN8yKBOxe13Kg\",\"interactive\":\"UfBe8dmqVfC7BCCMwpOI\",\"avatars\":\"fx7W4KZAaiK5T2nIZL5c\",\"spacer\":\"SdmjC2sdiWVr6VAguB1N\",\"reactionCount\":\"be7sESSsLrdDEAFmfgN1\",\"reactionCountHeart\":\"j6UTHtXm5pGlZTUQtiNw\",\"footerItem\":\"HeAnIGNLSRuOeQHda2j9\",\"views\":\"nrvshNssU3J7YjDRMGJt\",\"viewIcon\":\"ALYrJzsIz00qOE3fZxAg\",\"reactionButton\":\"BnHCTCGK8AHZZfrBsrRz\",\"reactionHeart\":\"oDRgq62aSPNYamk9P2EV\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  areViewsExpired?: boolean;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  areViewsExpired,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {!areViewsExpired && Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uXHBlEUDZKJr1u7dvj4k\",\"viewed\":\"GiJXPT0zbAmsx82Nm8ci\",\"active\":\"PaCfy7Nei0tOQAE9i0XV\",\"inner\":\"goBtmBaUzEEUaT_NbrvT\",\"progress\":\"kvGsn6HE3seo_5jfVRs1\",\"paused\":\"J1oS3YeXCbdBhKm3eIBi\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport {\n  selectChat, selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStories, selectPeerStory,\n  selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dateFormat';\nimport download from '../../util/download';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n}\n\nconst VIDEO_MIN_READY_STATE = 4;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryPinned,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n\n  const isChangelog = peerId === storyChangelogUserId;\n  const isChannel = !isUserId(peerId);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isPinned : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isPinned : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowFooter = isLoadedStory && (isOut || isChannel);\n\n  const {\n    shouldRender: shouldRenderSkeleton, transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransition(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransition(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransition(!isOut && !isChangelog && !isChannel);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransition(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransition(true);\n\n  useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress(handleLongPressStart, handleLongPressEnd);\n\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !isVideo || !fullMediaData);\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => { if (hasAllData && !isUnsupported) handlePlayStory(); }, [hasAllData, isUnsupported]);\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isOut || isDeletedStory || areViewsExpired) return;\n\n    // Refresh recent viewers list each time\n    loadStoryViews({ peerId, storyId, isPreload: true });\n  }, [isDeletedStory, areViewsExpired, isOut, peerId, storyId]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) return;\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    setCurrentTime(0);\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    setCurrentTime(0);\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      setCurrentTime(video.currentTime);\n    }\n    if (duration && video.currentTime >= duration) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    setCurrentTime(0);\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (isChannel) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderInfo}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.forwardHeaderText}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>{lang('StorySave')}</MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>{lang('ArchiveStory')}</MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>{lang('StealthMode')}</MenuItem>\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPlaying={markStoryPlaying}\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} areViewsExpired={areViewsExpired} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={styles.captionGradient} />}\n      {(hasText || hasForwardInfo) && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={appearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang('ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId, storyId, isPrivateStories, isArchivedStories, isReportModalOpen, isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const { orderedIds, pinnedIds, archiveIds } = selectPeerStories(global, peerId) || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = (story && 'forwardInfo' in story) ? story.forwardInfo : undefined;\n  const mediaAreas = (story && 'mediaAreas' in story) ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    story,\n    orderedIds: isArchivedStories ? archiveIds : (isPrivateStories ? pinnedIds : orderedIds),\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n  };\n})(Story));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress(\n  onStart: NoneToVoidFunction,\n  onEnd: NoneToVoidFunction,\n) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart();\n      isLongPressActive.current = true;\n    }, DEFAULT_THRESHOLD);\n  }, [onStart]);\n\n  const cancel = useCallback(() => {\n    if (isLongPressActive.current) {\n      onEnd();\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1);\n    const resultId = byId[previewIndexId]?.id || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <Avatar\n          peer={peer}\n          withStory\n          storyViewerMode=\"disabled\"\n        />\n        <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { ANIMATION_END_DELAY, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport { selectIsStoryViewerOpen, selectPeer, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport {\n  IS_FIREFOX, IS_IOS, IS_SAFARI,\n} from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSignal from '../../hooks/useSignal';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ANIMATION_DURATION_MS = 350 + (IS_SAFARI || IS_FIREFOX ? ANIMATION_END_DELAY : 20);\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePrevious(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n  const animationDuration = isMobile ? 0 : ANIMATION_DURATION_MS;\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    const timeoutId = window.setTimeout(() => {\n      setRenderingPeerId(currentPeerId);\n    }, animationDuration);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [animationDuration, currentPeerId]);\n\n  useEffect(() => {\n    let timeOutId: number | undefined;\n\n    if (renderingPeerId !== currentPeerId) {\n      timeOutId = window.setTimeout(() => {\n        setRenderingStoryId(currentStoryId);\n      }, animationDuration);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n\n    return () => {\n      window.clearTimeout(timeOutId);\n    };\n  }, [renderingPeerId, currentStoryId, currentPeerId, renderingStoryId, animationDuration]);\n\n  useEffect(() => {\n    let timeOutId: number | undefined;\n\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n      timeOutId = window.setTimeout(() => {\n        setIsAnimating(false);\n      }, animationDuration);\n    }\n\n    return () => {\n      setIsAnimating(false);\n      window.clearTimeout(timeOutId);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, animationDuration]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${-offsetY}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, renderingPeerId, onClose, windowWidth, windowHeight]);\n\n  useLayoutEffect(() => {\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n\n        return;\n      }\n\n      const getScale = () => {\n        if (isMobile) return '1';\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        if (!isMobile) offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        if (!isMobile) offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, isMobile, slideSizes]);\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { archived, active } } = global.stories;\n  const peer = currentPeerId ? selectPeer(global, currentPeerId) : undefined;\n\n  return {\n    byPeerId,\n    peerIds: peer?.areStoriesHidden ? archived : active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"hOwWWII6h241MvvB87N5\",\"viewsList\":\"hOwWWII6h241MvvB87N5\",\"views-list-loading\":\"ZaMMMcb_gGs7nmClMvzj\",\"viewsListLoading\":\"ZaMMMcb_gGs7nmClMvzj\",\"info\":\"Yt7QHLaCNE1N3OSWXa_n\",\"centeredInfo\":\"vKqMQNiuvK152lO__j16\",\"view-reaction\":\"x77ctFpUWd2rG2IUxz7y\",\"viewReaction\":\"x77ctFpUWd2rG2IUxz7y\",\"header\":\"oGYCTCHvXEkdIBMd0dHh\",\"content\":\"NfqCS7dx9c9nxYXZc3p2\",\"top-button\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"topButton\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"contact-filter\":\"RnVt9sK0OgnrHADARI9k\",\"contactFilter\":\"RnVt9sK0OgnrHADARI9k\",\"selected\":\"deHea5ii46_J57LhYmaj\",\"sort\":\"Mq_j5_FRMS06qJcPCwmC\",\"sort-button\":\"BYQ1X4iADCMrIUqdd3Lt\",\"sortButton\":\"BYQ1X4iADCMrIUqdd3Lt\",\"icon-sort\":\"yq5P30VXV4gSKmSHmXLL\",\"iconSort\":\"yq5P30VXV4gSKmSHmXLL\",\"icon-down\":\"mjcXdhEuASJWWO5Cqlxq\",\"iconDown\":\"mjcXdhEuASJWWO5Cqlxq\",\"search\":\"vs1AYj85WQxzI646EBZt\",\"bottom-info\":\"sWTOVQoWoeNAu2G8kVOl\",\"bottomInfo\":\"sWTOVQoWoeNAu2G8kVOl\",\"scrolled\":\"knxco2DJ3lthvQo2SOG6\",\"footer\":\"RqsPFLpLbJYFm50JYSiw\",\"closeButton\":\"DonddSsGK4E9DM8F5ctU\",\"opacity-fade-in\":\"h15igx036PH4epiXwUBg\",\"opacityFadeIn\":\"h15igx036PH4epiXwUBg\",\"fadeIn\":\"T9DzW6zCmxNgXv1YaUji\",\"blocked\":\"EVxErnsRszao77tgwSaA\",\"check\":\"HbQucamQwAYpvNnTqHVM\",\"menuBubble\":\"Y3KJ1StmiJpvbpeqbMuv\",\"with-colored-status\":\"OrtwVmQOgjKHYJJf4eK4\",\"withColoredStatus\":\"OrtwVmQOgjKHYJJf4eK4\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => handleClick()}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViews, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViews({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePrevious(isOpen);\n  const prevBestImageData = usePrevious(bestImageData);\n  const prevPeerId = usePrevious(peerId);\n  const prevOrigin = usePrevious(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  chatsById?: Record<string, ApiChat>;\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  chatsById,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const topicsResult = forumId ? chatsById?.[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById![forumId!], topic.id)\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [chatsById, forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById?.[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatType } from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n  sortChatIds,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatsById: Record<string, ApiChat>;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  chatsById,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), chatsById, undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, chatsById, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      chatsById={chatsById}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsById,\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      chatsById,\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n}) => {\n  const {\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingIsStory = usePrevious(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      setForwardChatOrTopic({ chatId: recipientId, topicId: threadId });\n    }\n  }, [currentUserId, isManyMessages, isStory, lang]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pZFkNPeaXsO10mdITSZR\",\"buttons\":\"bYI0Nm410CJjgAhnH3EL\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiGeoPoint } from '../../../api/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  geoPoint?: ApiGeoPoint;\n  zoom?: number;\n};\n\nconst OpenMapModal = ({ geoPoint, zoom }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          Open Street Maps\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"jztdH6qO5uz3c2muOpPT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  urlAuth?: TabState['urlAuth'];\n  currentUserName?: string;\n};\n\nconst UrlAuthModal: FC<OwnProps> = ({\n  urlAuth, currentUserName,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(urlAuth, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (urlAuth?.url && isLoginChecked) {\n      const acceptAction = urlAuth.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    urlAuth, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(urlAuth?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, currentUserName]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(UrlAuthModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused, unmarkTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(selectedDate);\n  }, [onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <Button onClick={handleSubmit}>\n          {submitLabel}\n        </Button>\n        {secondButtonLabel && (\n          <Button onClick={onSecondButtonClick} isText>\n            {secondButtonLabel}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  webApp?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  webApp,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = webApp || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(webApp!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, setWebAppPaymentSlug, webApp]);\n\n  const handleToggleClick = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: !attachBot,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [hideCloseModal, isOpen, markUnloaded]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { webApp }): StateProps => {\n    const { botId } = webApp || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CWJDTp88gsPYaq6de8yn\",\"more-button\":\"_VJv8UKGVoUJKFRjrn8B\",\"moreButton\":\"_VJv8UKGVoUJKFRjrn8B\",\"close-icon\":\"l4SsaN4Dx0bKGb83CYhA\",\"closeIcon\":\"l4SsaN4Dx0bKGb83CYhA\",\"state-back\":\"jscxQ3PMmXnE2oWrMVBY\",\"stateBack\":\"jscxQ3PMmXnE2oWrMVBY\",\"loading-spinner\":\"ElvN45roGsPDzZuJjk3H\",\"loadingSpinner\":\"ElvN45roGsPDzZuJjk3H\",\"hide\":\"L441lq9G5_x3lNeWNFlB\",\"frame\":\"uFAepVSf6dgEREGs6Kio\",\"with-button\":\"ruOZRuUOenMeQp5WIpy0\",\"withButton\":\"ruOZRuUOenMeQp5WIpy0\",\"main-button\":\"QoAHIcQHa0NNmR8fma3w\",\"mainButton\":\"QoAHIcQHa0NNmR8fma3w\",\"visible\":\"OViz2KN7MjYjs1f5Z3JN\",\"hidden\":\"IEfxtMw7c1U4BRBpulWm\",\"main-button-spinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"mainButtonSpinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"web-app-popup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"webAppPopup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"without-title\":\"GuFs2OL_xXL5ODh10kTj\",\"withoutTitle\":\"GuFs2OL_xXL5ODh10kTj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiAttachBot;\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  bot,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {bot?.isInactive && bot.isForSideMenu && (\n        renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PEnE7xWTMwTPGmhubmj6\",\"text\":\"U4UYSH7uHW3k4FlqBefm\",\"header\":\"Jdlm3dtJ8gOIY0x0u2d4\",\"description\":\"cE44My72bdvMJna9mgoc\",\"icon\":\"mxF3NdPgAi_H0ZFgNEtw\",\"font-icon\":\"r6_o8xZKIo11QFFYm2Hv\",\"fontIcon\":\"r6_o8xZKIo11QFFYm2Hv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  onClick?: VoidFunction;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\nconst PremiumFeatureItem: FC<OwnProps> = ({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  onClick,\n}) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={onClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NtJc4bt94t9fklIWC6wF\",\"arrow\":\"_rzXza87NHdAMH2TDKul\",\"right\":\"J4UYbae0Frt01jIavpB0\",\"arrow-hidden\":\"qd3rvhZma3JJmhdt07Ig\",\"arrowHidden\":\"qd3rvhZma3JJmhdt07Ig\",\"dot\":\"eCgEFkp07vgaUGwymYAQ\",\"medium\":\"AIpVWjJc47egZ8ATaC3n\",\"small\":\"MnRKztu0OZTyIywGLMc6\",\"invisible\":\"boSFbatyzatdw70J7mpu\",\"active\":\"nlCmVncFkKVtsawWqcfw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qiAkShre9E6R3S_XXL9S\",\"floating-badge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floatingBadge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floating-badge-triangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floatingBadgeTriangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floating-badge-icon\":\"y7T3FpaFXDsnPGk6dPmg\",\"floatingBadgeIcon\":\"y7T3FpaFXDsnPGk6dPmg\",\"text\":\"X0zFAEpRoPWj1yE904xR\",\"floating-badge-value\":\"rQ6ZdKdWi4HVydX6qhWS\",\"floatingBadgeValue\":\"rQ6ZdKdWi4HVydX6qhWS\",\"left-text\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"leftText\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-text\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightText\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-value\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightValue\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"left-value\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"leftValue\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"line\":\"slESyAvUqizX4_EIX_yg\",\"left\":\"lQi3xqxjvl2Owb4ES2SM\",\"right\":\"Dcv5uphsn2Sxpg3ROS_u\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jeeOV_UYyl50GFLOzjGC\",\"title\":\"SVqE3gr2ekQUWfFT_Mvg\",\"description\":\"mCBNPstzrSlOQsz6rOtE\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dVn5gk50tXn1EiI4kJFJ\",\"sticker\":\"PIYKt4xxOUBpRjRu0b4q\",\"effect-sticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\",\"effectSticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dfgGrPUU6AC7NazJh8Ut\",\"header\":\"Y9bbyTXeZIKzoa8wtnkn\",\"circle\":\"eTSbeIbZl_YRbAPcqHhQ\",\"title\":\"me5CfUvQ6RleMxtFjIaR\",\"features\":\"ssjliTyWlTUXFLdz5NJd\",\"mobile\":\"ckFVT8AXlwgCejTXWdfQ\",\"scrolled\":\"T0nWA26c2Q0j0Z_PpexK\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { DPR } from '../../../../util/windowEnvironment';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLang from '../../../../hooks/useLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * DPR * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n    });\n  }, []);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE / DPR;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WHiQiGCtWfjSlEysEelB\",\"wrapper\":\"WUpKHfqLbeZmhfYqqiko\",\"down\":\"MiGmL4xqBPkxmLim4Ai0\",\"frame\":\"xuhT9JHpFkVsTcUWeh4L\",\"video\":\"sLLJqCkdSug4bzEQrACs\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QfngIllOc1THaTQiJf7h\",\"button\":\"n8tTb600de2uZKGkyw67\",\"button-content\":\"eZLuJy6dL4ekVllaRcCm\",\"buttonContent\":\"eZLuJy6dL4ekVllaRcCm\",\"back-button\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"backButton\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"white-back-button\":\"E42Dy7DFLAxvj8HE4GAD\",\"whiteBackButton\":\"E42Dy7DFLAxvj8HE4GAD\",\"content\":\"JMdhJYW94Mas4JDye486\",\"frame\":\"fEQZ2fyO9g6L1v8QJUCJ\",\"slide\":\"xkC9BFxv7RkSwbPe4RMb\",\"limits\":\"zngeFAwxdlVJZY876fHc\",\"stories\":\"uOZMPO0FyBVTsM6ACXDw\",\"limits-content\":\"le7Qv9QkHlO3qdK0Hs_g\",\"limitsContent\":\"le7Qv9QkHlO3qdK0Hs_g\",\"header\":\"Mw81cOCIGy8KGn9VokFA\",\"no-header-border\":\"tRvcw256KSHRqgSj5uGX\",\"noHeaderBorder\":\"tRvcw256KSHRqgSj5uGX\",\"preview\":\"EXGFQjwHmQxjvMLbYtS9\",\"title\":\"eEYA2lXPy_DUKe8JKHiP\",\"description\":\"TVO7LjkV_yHUGIu5PXCA\",\"footer\":\"EKr_FVmiDSwhUxouhaqB\",\"no-footer-border\":\"H8z5Q6gsuqeCy82HFlyX\",\"noFooterBorder\":\"H8z5Q6gsuqeCy82HFlyX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPremiumPromo } from '../../../api/types';\nimport type { ApiLimitType, GlobalState } from '../../../global/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n};\n\nexport const PREMIUM_FEATURE_SECTIONS = [\n  'stories',\n  'double_limits',\n  'more_upload',\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'infinite_reactions',\n  'premium_stickers',\n  'animated_emoji',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\nconst PREMIUM_BOTTOM_VIDEOS: string[] = [\n  'faster_download',\n  'voice_to_text',\n  'advanced_chat_management',\n  'infinite_reactions',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\ntype ApiLimitTypeWithoutUpload = Exclude<ApiLimitType, 'uploadMaxFileparts' | 'chatlistInvites' | 'chatlistJoined'>;\n\nconst LIMITS_ORDER: ApiLimitTypeWithoutUpload[] = [\n  'channels',\n  'dialogFolderPinned',\n  'channelsPublic',\n  'savedGifs',\n  'stickersFaved',\n  'aboutLength',\n  'captionLength',\n  'dialogFilters',\n  'dialogFiltersChats',\n  'recommendedChannels',\n];\n\nconst LIMITS_TITLES: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: string;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: string[];\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  function handleClick() {\n    onClickSubscribe(initialSection);\n  }\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = e.currentTarget;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n    e.currentTarget.style.setProperty('--scroll-progress', progress.toString());\n    e.currentTarget.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex}`);\n    prevElement?.classList.toggle('reverse', false);\n    reverseElement?.classList.toggle('reverse', true);\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  }, []);\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        <Button\n          className={buildClassName(styles.button)}\n          isShiny={!isPremium}\n          withPremiumGradient={!isPremium}\n          onClick={isPremium ? onBack : handleClick}\n        >\n          {isPremium\n            ? lang('OK')\n            : lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: {\n    months: number;\n    currency: string;\n    amount: number;\n  };\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount, onChange, className,\n}) => {\n  const lang = useLang();\n\n  const { months, amount, currency } = option;\n  const perMonth = Math.floor(amount / months);\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        styles.wrapper,\n        checked && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"gift_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>{lang('Months', months)}</div>\n        <div className={styles.perMonth}>\n          {lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n          {Boolean(discount) && (\n            <span className={styles.discount} title={lang('GiftDiscount')}> &minus;{discount}% </span>\n          )}\n        </div>\n        <div className={styles.amount}>{formatCurrency(amount, currency, lang.code)}</div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"IXV7SB86VfHeS6sGpbAL\",\"active\":\"Imt9mEl6lbyzuVmm0OiM\",\"input\":\"G5YwjwtcrW31JALkPvrJ\",\"content\":\"z1nlRjQJTzMyE5pygz2A\",\"month\":\"UTefQdcjZLkQS6zJWz6b\",\"perMonth\":\"hw7yeIYEeVfpUmmNowOm\",\"amount\":\"QshOtc5leIs0wAOFsv_1\",\"discount\":\"ypoZi01wnuGOHzz0dn1j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JJNHc_FZuydBNBIHK9xC\",\"transition\":\"Q05gUm0HCMtSoeX2HVGw\",\"button\":\"Fb3VVHNrypZ3lhYfSVI_\",\"main\":\"E9_LJ9RqAHTj8h84EROt\",\"logo\":\"Vaf41aTAoSwl_e_cZhah\",\"status-emoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"statusEmoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"header-text\":\"J2z1gqvfQu5kqV_UP8US\",\"headerText\":\"J2z1gqvfQu5kqV_UP8US\",\"description\":\"PXg8sU2cfdeysJXctlpB\",\"list\":\"LlPAfJpL066su4P2NFmh\",\"no-button\":\"wpPtJKCqTdOGkKoh7KTo\",\"noButton\":\"wpPtJKCqTdOGkKoh7KTo\",\"header\":\"Rwuf1efaEfZ13AD5XbCB\",\"hidden-header\":\"NV7fN3j69oFZEJu7ejG8\",\"hiddenHeader\":\"NV7fN3j69oFZEJu7ejG8\",\"close-button\":\"TyuYAZecpI2K_1i3B5XO\",\"closeButton\":\"TyuYAZecpI2K_1i3B5XO\",\"premium-header-text\":\"jA_DV7G5VJo8xGOe0otF\",\"premiumHeaderText\":\"jA_DV7G5VJo8xGOe0otF\",\"footer-text\":\"yVkdTScCEhH3EQMQiA42\",\"footerText\":\"yVkdTScCEhH3EQMQiA42\",\"primary-footer-text\":\"MQbFSG2o_R8rjKDsqs8R\",\"primaryFooterText\":\"MQbFSG2o_R8rjKDsqs8R\",\"footer\":\"FApXoTPpasib6Np5Uxpt\",\"stickerSetText\":\"CCRIHzjKzzj6y3nYJQKk\",\"stickerSetLink\":\"_G_ogp7ec2JUxZUhoaAi\",\"stickerSetLinkIcon\":\"vJ2GKZFltN22CJDw5Bdu\",\"subscriptionOptions\":\"FSaJ3oNrh9CbS9PCtJo7\",\"subscriptionOption\":\"YHOfi30FIqTv2I5y5aUP\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_SECTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<string, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  isClosing?: boolean;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: string;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: string[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isClosing,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<string | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  const handleOpen = useCallback((section: string | undefined) => {\n    return () => {\n      setCurrentSection(section);\n    };\n  }, []);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  }, [selectedSubscriptionOption, handleClickWithStartParam]);\n\n  const handleChangeSubscriptionOption = useCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  }, [promo]);\n\n  const showConfetti = useCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n      });\n    }\n  }, [isOpen, requestConfetti]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      // eslint-disable-next-line react/jsx-no-bind\n      onCloseAnimationEnd={() => closePremiumModal({ isClosed: true })}\n      onClose={closePremiumModal}\n      isOpen={isOpen && !isClosing}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    onClick={handleOpen(section)}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium',\n                    formatCurrency(\n                      selectedSubscriptionOption.amount,\n                      selectedSubscriptionOption.currency,\n                      lang.code,\n                    ))}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleOpen(undefined)}\n            promo={promo}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isClosing: premiumModal?.isClosing,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"K80So3B9potKGNvwdtYE\",\"closeButton\":\"dxx424IZDNuP1OLbUIve\",\"avatar\":\"qJgJ7R5NJVmAxBjT5LxT\",\"headerText\":\"eqCNa8zBoMroKcepfXyE\",\"description\":\"MtYhgDChavNfKIUAJPzt\",\"premiumFeatures\":\"J0hST5xsC45ZolfGpbDc\",\"options\":\"HyfHjS1vAds31eFcSpDg\",\"button\":\"sSXm9RjIQSsVFi0D1nEd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPremiumGiftOption, ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  gifts?: ApiPremiumGiftOption[];\n  monthlyCurrency?: string;\n  monthlyAmount?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  user,\n  gifts,\n  monthlyCurrency,\n  monthlyAmount,\n}) => {\n  const { openPremiumModal, closeGiftPremiumModal, openUrl } = getActions();\n\n  const lang = useLang();\n  const renderedUser = useCurrentOrPrev(user, true);\n  const renderedGifts = useCurrentOrPrev(gifts, true);\n  const [selectedOption, setSelectedOption] = useState<number | undefined>();\n  const firstGift = renderedGifts?.[0];\n  const fullMonthlyAmount = useMemo(() => {\n    if (!renderedGifts || renderedGifts.length === 0 || !firstGift) {\n      return undefined;\n    }\n\n    const cheaperGift = renderedGifts.reduce((acc, gift) => {\n      return gift.amount < firstGift?.amount ? gift : firstGift;\n    }, firstGift);\n\n    return cheaperGift.currency === monthlyCurrency && monthlyAmount\n      ? monthlyAmount\n      : Math.floor(cheaperGift.amount / cheaperGift.months);\n  }, [firstGift, renderedGifts, monthlyAmount, monthlyCurrency]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedOption(firstGift?.months);\n    }\n  }, [firstGift?.months, isOpen]);\n\n  const selectedGift = useMemo(() => {\n    return renderedGifts?.find((gift) => gift.months === selectedOption);\n  }, [renderedGifts, selectedOption]);\n\n  const handleSubmit = useCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    closeGiftPremiumModal();\n    openUrl({ url: selectedGift.botUrl });\n  }, [closeGiftPremiumModal, openUrl, selectedGift]);\n\n  const handlePremiumClick = useCallback(() => {\n    openPremiumModal();\n  }, [openPremiumModal]);\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  return (\n    <Modal\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <Avatar\n          peer={renderedUser}\n          size=\"jumbo\"\n          className={styles.avatar}\n        />\n        <h2 className={styles.headerText}>\n          {lang('GiftTelegramPremiumTitle')}\n        </h2>\n        <p className={styles.description}>\n          {renderText(\n            lang('GiftTelegramPremiumDescription', getUserFirstOrLastName(renderedUser)),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n\n        <div className={styles.options}>\n          {renderedGifts?.map((gift) => (\n            <PremiumSubscriptionOption\n              key={gift.amount}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={gift.months === selectedOption}\n              onChange={setSelectedOption}\n            />\n          ))}\n        </div>\n\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      <Button className={styles.button} isShiny disabled={!selectedOption} onClick={handleSubmit}>\n        {lang(\n          'GiftSubscriptionFor',\n          selectedGift && formatCurrency(Number(selectedGift.amount), selectedGift.currency, lang.code),\n        )}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { forUserId, monthlyCurrency, monthlyAmount } = selectTabState(global).giftPremiumModal || {};\n  const user = forUserId ? selectUser(global, forUserId) : undefined;\n  const gifts = user ? selectUserFullInfo(global, user.id)?.premiumGifts : undefined;\n\n  return {\n    user,\n    gifts,\n    monthlyCurrency,\n    monthlyAmount: monthlyAmount ? Number(monthlyAmount) : undefined,\n  };\n})(GiftPremiumModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\n\nimport Icon from '../../../common/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iz5RJvcQyNNDQzKfXQbN\",\"limit-compare\":\"az3lXhmlMfZfIQ_81jog\",\"limitCompare\":\"az3lXhmlMfZfIQ_81jog\",\"limit-badge\":\"womlEQglVV1w8ltVa6PQ\",\"limitBadge\":\"womlEQglVV1w8ltVa6PQ\",\"limit-value\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limitValue\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limit-icon\":\"q8SgjqQqlOVMSofzhdwh\",\"limitIcon\":\"q8SgjqQqlOVMSofzhdwh\",\"dialog-buttons\":\"DgRFl7StCs4fhROb7CKH\",\"dialogButtons\":\"DgRFl7StCs4fhROb7CKH\",\"x2\":\"MeIsw1Fm4WBqIZzbpS10\",\"button-icon\":\"BW05mF5k9uq5qBi_BYzg\",\"buttonIcon\":\"BW05mF5k9uq5qBi_BYzg\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z2hl3sxq0tzStr0JpMxi\",\"video\":\"h6jE3TEaqlzbs0ro0J2_\",\"image\":\"ivo3DVINrp81Kb9ho9kA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, thumbCustomEmojiId, isLottie, isVideos: isVideo,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToStatic = stickerSet.stickers && isVideo && !IS_WEBM_SUPPORTED;\n  const staticHash = shouldFallbackToStatic && getStickerPreviewHash(stickerSet.stickers![0].id);\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || isLottie) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        isLottie ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (isVideo && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xW0m4eR0ukCfRp6WS_Qd\",\"selected\":\"XTCJlnWtVba28wuDmeBN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation) : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionUniqueKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID && stickerSet.id !== POPULAR_SYMBOL_SET_ID;\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-name', withAddSetButton && 'symbol-set-name-external')}>\n            {isLocked && <i className=\"symbol-set-locked-icon icon icon-lock-badge\" />}\n            {stickerSet.title}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <i className=\"symbol-set-remove icon icon-close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('symbol-set-container shared-canvas-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <i className=\"icon icon-premium\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionUniqueKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gsyAr7lPlzHWUF_aYaVa\",\"main\":\"cnWk4tq3tmB7r08ScyxQ\",\"main_customEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"mainCustomEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"header\":\"x0Qtu0yjl4v02fLLyxV1\",\"headerWithBorder\":\"m4MXEae1lmdJZV64zN6b\",\"stickerCover\":\"A5Fetmgo_VQRMWxFTV_v\",\"activated\":\"yiTAGOkL3Hgb0VXRPy46\",\"pickerDisabled\":\"jNEbrwsYAlEp67HG75uy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  CHAT_STICKER_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    if (!addedCustomEmojiIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const setIdsToDisplay = unique(addedCustomEmojiIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <i className=\"icon icon-recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      recentReactions,\n      topReactions,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      availableReactions: isReactionPicker ? global.availableReactions : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z0kj3ATb_u7kBMYsqUpx\",\"activated\":\"sGL0teusRxo4NrXceldd\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"XWSv0Pf1SKleWNyX04yO\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle } from '../../../global/helpers';\nimport { selectChat, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { formatDateInFuture } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  info: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  boostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  info,\n  chat,\n  boostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isOpen = Boolean(info);\n\n  const lang = useLang();\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!boostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, boostedChat);\n  }, [boostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!info?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      level, currentLevelBoosts, hasMyBoost,\n    } = info.boostStatus;\n\n    const firstBoost = info?.myBoosts && getFirstAvailableBoost(info.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = info?.myBoosts && !areAllBoostsInChannel(info.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n    } = getBoostProgressInfo(info.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n    const isJustUpgraded = boosts === currentLevelBoosts && hasBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n    const currentStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level);\n    const nextLevelStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level + 1);\n\n    const modalTitle = hasBoost ? lang('YouBoostedChannel2', chatTitle)\n      : level === 0 ? lang('lng_boost_channel_title_first') : lang('lng_boost_channel_title_more');\n\n    let description: string | undefined;\n    if (level === 0) {\n      if (!hasBoost) {\n        description = lang('ChannelBoost.EnableStoriesForChannelText', [chatTitle, moreBoosts]);\n      } else {\n        description = lang('ChannelBoost.EnableStoriesMoreRequired', moreBoosts);\n      }\n    } else if (isJustUpgraded) {\n      if (level === 1) {\n        description = lang('ChannelBoost.EnabledStoriesForChannelText');\n      } else {\n        description = lang('ChannelBoost.BoostedChannelReachedLevel', [level, currentStoriesPerDay]);\n      }\n    } else {\n      description = lang('ChannelBoost.HelpUpgradeChannelText', [chatTitle, moreBoosts, nextLevelStoriesPerDay]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels,\n    };\n  }, [chat, chatTitle, info, lang]);\n\n  const isBoostDisabled = !info?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== info?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isBoosted && canBoostMore ? 'BoostingBoostAgain' : 'ChannelBoost.BoostChannel')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={boostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const chat = info && selectChat(global, info?.chatId);\n    const firstBoost = info?.myBoosts && getFirstAvailableBoost(info.myBoosts, info.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"qcaMioaPQuA3J2DdyYu6\",\"modal\":\"Y9MSWZPXcoywEGAVkIGe\",\"loading\":\"rTu4qT5HMT5xEA0iBnQZ\",\"description\":\"kR5ezaKOBrU14CVmMWM0\",\"chip\":\"bwLqkQdHNWlFwAxcZAQs\",\"replaceModal\":\"YoELl5NSlfGHhh0TV09C\",\"replaceModalContent\":\"l39rkylGwQCNJD7zFGNp\",\"avatarContainer\":\"tfMx99CifV4hYxg9MEqE\",\"arrow\":\"f_dXofOOgJ37seFwxD55\",\"boostedWrapper\":\"Ylfk1xu6gEHr_yzPetrS\",\"boostedMark\":\"WDTDg5KQT796SQTEgPpx\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ZUq4brODsgpvaUsllahW\",\"clickable\":\"JJOxaAdgPS8KouI7ApuA\",\"title\":\"IHmQ6rmwk9lGyiwoN35E\",\"table\":\"fjpN5AKMBNcmc1B8ZMV1\",\"chat-item\":\"nAG11HvcI33XcEk6iXcE\",\"chatItem\":\"nAG11HvcI33XcEk6iXcE\",\"logo\":\"bEdCD7KzsBds3j71NvqQ\",\"centered\":\"uLJj2XtrzUYpv4M5h2yc\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport LinkField from '../../common/LinkField';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, openChat, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    closeGiftCodeModal();\n  });\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  function renderContent() {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    return (\n      <>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n        <table className={styles.table}>\n          <tr>\n            <td className={styles.title}>{lang('BoostingFrom')}</td>\n            <td>\n              {fromId ? (\n                <PickerSelectedItem\n                  peerId={fromId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={fromId}\n                  onClick={handleOpenChat}\n                />\n              ) : lang('BoostingNoRecipient')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingTo')}\n            </td>\n            <td>\n              {info.toId ? (\n                <PickerSelectedItem\n                  peerId={info.toId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={info.toId}\n                  onClick={handleOpenChat}\n                />\n              ) : lang('BoostingNoRecipient')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingGift')}\n            </td>\n            <td>\n              {lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingReason')}\n            </td>\n            <td className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n              {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n                : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingDate')}\n            </td>\n            <td>\n              {formatDateTimeToString(info.date * 1000, lang.code, true)}\n            </td>\n          </tr>\n        </table>\n        <span className={styles.centered}>\n          {renderText(\n            info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n              : lang('BoostingSendLinkToAnyone'),\n            ['simple_markdown'],\n          )}\n        </span>\n        <Button onClick={handleButtonClick}>\n          {canUse ? lang('BoostingUseLink') : lang('Close')}\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      isSlim\n      title={lang('lng_gift_link_title')}\n      contentClassName={styles.content}\n      onClose={closeGiftCodeModal}\n    >\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"UwWVjbf4Ptl9vrrJPZon\",\"picker-wrapper\":\"h97ntomDmLCVEoTjzCHi\",\"pickerWrapper\":\"h97ntomDmLCVEoTjzCHi\",\"picker-header\":\"Wz6C5rszlwOTdImks0cL\",\"pickerHeader\":\"Wz6C5rszlwOTdImks0cL\",\"picker-header-info\":\"OwAqbtXus5KwSxvNBKyu\",\"pickerHeaderInfo\":\"OwAqbtXus5KwSxvNBKyu\",\"selection-toggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"selectionToggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"foldersWrapper\":\"HFZAaai7bs4X21rCRSyQ\",\"folders\":\"Xrr7zKG4KrVimUxojATI\",\"folder\":\"_7YreahCXXe3zGG5sywZA\",\"button-text\":\"K7T3MH1zL9aRmVFtTBBu\",\"buttonText\":\"K7T3MH1zL9aRmVFtTBBu\",\"button-badge\":\"_Z6IH9MHEorrdl7VDqJ2\",\"buttonBadge\":\"_Z6IH9MHEorrdl7VDqJ2\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  info?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  info,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(info);\n  const renderingInfo = usePrevious(info) || info;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const { invite, removal } = info || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('SponsoredMessageInfo')}\n    >\n      <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n      <p>\n        <SafeLink\n          url={lang('SponsoredMessageAlertLearnMoreUrl')}\n          text={lang('SponsoredMessageAlertLearnMoreUrl')}\n        />\n      </p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Close')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const lang = useLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"phK_DdEImRiGA8z2FwyB\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionUniqueKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionUniqueKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionUniqueKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"syvgWO0b6lIEPd3iu1TA\",\"list-item\":\"_nKqEo7SgYwpaclSSCIx\",\"listItem\":\"_nKqEo7SgYwpaclSSCIx\",\"title\":\"R7LNh8TMqiktRuTuESsf\",\"subtitle\":\"so4259O2hcdGOxENXdqc\",\"languages\":\"DiSTH_4CZnPK8Dh8Tpfq\"};","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads']['byChatId'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { getPrivateChatUserId, isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"large\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"large\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  sortChatIds,\n} from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountChatIds?: string[];\n  accountUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountChatIds,\n  accountUserIds,\n  globalChatIds,\n  globalUserIds,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2)) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const localChatIds = filterChatsByName(lang, orderedChatIds, chatsById, searchQuery, currentUserId);\n\n    const localPeerIds = unique([\n      ...localContactIds,\n      ...localChatIds,\n    ]);\n\n    const accountPeerIds = unique([\n      ...(accountChatIds ?? []),\n      ...(accountUserIds ?? []),\n    ].filter((accountPeerId) => !localPeerIds.includes(accountPeerId)));\n\n    return [\n      ...sortChatIds(localPeerIds, chatsById, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds, chatsById),\n    ];\n  }, [searchQuery, currentUserId, contactIds, lang, accountChatIds, accountUserIds, chatsById]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return sortChatIds(\n      unique([...globalChatIds, ...globalUserIds]),\n      chatsById,\n      true,\n    );\n  }, [chatsById, globalChatIds, globalUserIds, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean);\n  }, [foundIds, globalMessagesByChatId, searchQuery, searchDate]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {\n        chatsById,\n      };\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: accountChatIds, userIds: accountUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.text?.foundIds;\n\n    return {\n      currentUserId,\n      contactIds,\n      accountChatIds,\n      accountUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getMessageDocument } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      mediaId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(1),\n];\n\nconst TRANSITION_RENDER_COUNT = Object.keys(GlobalSearchContent).length / 2;\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    const tab = TABS[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  }, [setGlobalSearchContent]);\n\n  const handleSearchDateSelect = useCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  }, [setGlobalSearchDate]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={chatId ? CHAT_TABS : TABS} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useLang from '../../../../hooks/useLang';\n\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport Checkbox from '../../../ui/Checkbox';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  shouldHideChatTypes?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onSaveFilter: VoidFunction;\n  isActive?: boolean;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  shouldHideChatTypes,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n  onSaveFilter,\n  isActive,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    setIsTouched(true);\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    setIsTouched(true);\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={buildClassName('icon', `icon-${type.icon}`)} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            peerId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll fab-padding-bottom\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <div key=\"header\">\n            {!shouldHideChatTypes && (\n              <>\n                <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('FilterChatTypes')}\n                </h4>\n                {chatTypes.map(renderChatType)}\n                <div className=\"picker-list-divider\" />\n              </>\n            )}\n            <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </div>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { unique } from '../../../../util/iteratees';\n\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport Loading from '../../../ui/Loading';\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      shouldHideChatTypes={shouldHideChatTypes}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n      onSaveFilter={onSaveFilter}\n      isActive={isActive}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"settingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"iconDevice\":\"a633Zas_0v2MAAY277vj\",\"iconDevice__android\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDeviceAndroid\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDevice__apple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDeviceApple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDevice__brave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDeviceBrave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDevice__chrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDeviceChrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDevice__edge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDeviceEdge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDevice__firefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDeviceFirefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDevice__linux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDeviceLinux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDevice__opera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDeviceOpera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDevice__safari\":\"XGWuju_22haQw0Qraor7\",\"iconDeviceSafari\":\"XGWuju_22haQw0Qraor7\",\"iconDevice__samsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDeviceSamsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDevice__ubuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDeviceUbuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDevice__unknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDeviceUnknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDevice__vivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDeviceVivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDevice__windows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDeviceWindows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDevice__xbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"iconDeviceXbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"title\":\"b9iUjEhCpOrQ4dPhn2KU\",\"note\":\"hTTCWbngkwJoEwtGFD9o\",\"date\":\"pUv5oVVNDZ5lBRzNzx3X\",\"box\":\"e32uLjclYAYuxxW1CAex\",\"actionHeader\":\"xwSMwr4aHsrRVIVInLEo\",\"actionName\":\"tSrCe7E_Iom1nGuh2Gs3\",\"headerButton\":\"N0buK669iHOZ1hN_H7Ik\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OeRWKjYQC6t7Uxv8I3j0\",\"avatar\":\"oy_023CG29VsnL9L5ulf\",\"title\":\"bg8UD_Pu2JWogmjuvVXg\",\"note\":\"TgiK64wG1hkOWSiXybQf\",\"box\":\"HSyJbRkyhkeT0s2QA4Ku\",\"action-header\":\"AQX7GM28GeWO4b1bXTNK\",\"actionHeader\":\"AQX7GM28GeWO4b1bXTNK\",\"action-name\":\"_VJHBZTk5qdYimQAoCWe\",\"actionName\":\"_VJHBZTk5qdYimQAoCWe\",\"header-button\":\"hlKLEbMQAsx572pUREy0\",\"headerButton\":\"hlKLEbMQAsx572pUREy0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"n3bBygyO4j5MQyJ70Twt\",\"clear-help\":\"vUICy6ZQCYFSrvvxXe7f\",\"clearHelp\":\"vUICy6ZQCYFSrvvxXe7f\",\"subtitle\":\"t3PK9_nPdL12eMsiMNcM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', className)}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition, unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"obOZMv8VwZgTltdIBhFA\",\"item\":\"lDWs17bpqtGWDX0EJr0y\",\"checkbox\":\"BShBwPkgjleuDsjyfnNk\",\"languages\":\"whcbPSSJLGdGCaY66qfR\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"u8GGVdXgbKUMvoqqs0VJ\",\"header\":\"sPTmRsKHnc3FL9AubUaY\",\"description\":\"YqnFSIc98kYMRge1RrlJ\",\"sortableContainer\":\"pWxbEJm12NZb25lGmdwA\",\"item\":\"AWgYeVXfLin4VAmQzhKQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = isUsernameValid(newUsername);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({})}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/langProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { setLanguage } from '../../../util/langProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void setLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ChatExtra from '../../common/ChatExtra';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n}) => {\n  const {\n    loadProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadProfilePhotos({ profileId: currentUserId });\n    }\n  }, [currentUserId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            userId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            forceShowSelf\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<PremiumIcon className=\"icon\" withGradient big />}\n            className=\"settings-main-menu-premium\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('lng_settings_ask_ok')}\n        title={lang('AskAQuestion')}\n        text={lang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacyPhoneNumber?: ApiPrivacySettings;\n  privacyLastSeen?: ApiPrivacySettings;\n  privacyProfilePhoto?: ApiPrivacySettings;\n  privacyForwarding?: ApiPrivacySettings;\n  privacyVoiceMessages?: ApiPrivacySettings;\n  privacyGroupChats?: ApiPrivacySettings;\n  privacyPhoneCall?: ApiPrivacySettings;\n  privacyBio?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacyPhoneNumber,\n  privacyLastSeen,\n  privacyProfilePhoto,\n  privacyForwarding,\n  privacyVoiceMessages,\n  privacyGroupChats,\n  privacyPhoneCall,\n  privacyBio,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    showNotification,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleVoiceMessagesClick = useCallback(() => {\n    if (isCurrentUserPremium) {\n      onScreenSelect(SettingsScreens.PrivacyVoiceMessages);\n    } else {\n      showNotification({\n        message: lang('PrivacyVoiceMessagesPremiumOnly'),\n      });\n    }\n  }, [isCurrentUserPremium, lang, onScreenSelect, showNotification]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyLastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyProfilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyBio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyForwarding)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyGroupChats)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          disabled={!isCurrentUserPremium}\n          allowDisabledClick\n          rightElement={!isCurrentUserPremium && <i className=\"icon icon-lock-badge settings-icon-locked\" />}\n          className=\"no-icon\"\n          onClick={handleVoiceMessagesClick}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyVoiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      privacyPhoneNumber: privacy.phoneNumber,\n      privacyLastSeen: privacy.lastSeen,\n      privacyProfilePhoto: privacy.profilePhoto,\n      privacyForwarding: privacy.forwards,\n      privacyVoiceMessages: privacy.voiceMessages,\n      privacyGroupChats: privacy.chatInvite,\n      privacyPhoneCall: privacy.phoneCall,\n      privacyBio: privacy.bio,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"pqiopoENn7dO3E8DQI3e\",\"fallbackPhoto\":\"pqiopoENn7dO3E8DQI3e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      { value: 'contacts', label: lang('P2PContacts') },\n    ];\n    if (hasNobody) {\n      options.push({ value: 'nobody', label: lang('P2PNobody') });\n    }\n    return options;\n  }, [lang, screen]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[]) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return lang('EditAdminAddUsers');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {(primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../config';\nimport { filterChatsByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) setNewSelectedContactIds(selectedContactIds);\n  }, [isActive, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => chatId !== currentUserId);\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedContactIds, onScreenSelect, screen, setPrivacySettings]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { availableReactions, config } = global;\n\n    return {\n      availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { filterUsersByName, isUserBot, sortChatIds } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  chatsById,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      chatsById,\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, chatsById, searchQuery, localUserIds, globalUserIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n    const { byId: chatsById } = global.chats;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      chatsById,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransition(isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageTextWithSpoilers,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMessageLocalBlobUrl(message))\n    && CLIPBOARD_ITEM_SUPPORTED;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: () => {\n        onCopyLink();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\n\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './ReactionSelector';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_BUBBLE_EXTRA_WIDTH = 32;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      marginSides: withReactions ? REACTION_BUBBLE_EXTRA_WIDTH : undefined,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem key={option.label} icon={option.icon} onClick={option.handler}>{lang(option.label)}</MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <MenuItem\n            icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n            onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n            disabled={!canShowReactionsCount && !seenByDatesCount}\n          >\n            <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n              <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {canShowReactionsCount && message.reactors?.count ? (\n                  canShowSeenBy && seenByDatesCount\n                    ? lang(\n                      'Chat.OutgoingContextMixedReactionCount',\n                      [message.reactors.count, seenByDatesCount],\n                    )\n                    : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                ) : (\n                  seenByDatesCount === 1 && seenByRecentPeers\n                    ? renderText(\n                      isUserId(seenByRecentPeers[0].id)\n                        ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                        : (seenByRecentPeers[0] as ApiChat).title,\n                    ) : (\n                      seenByDatesCount\n                        ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                        : lang('Conversation.ContextMenuNoViews')\n                    )\n                )}\n              </span>\n            </span>\n            <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n          </MenuItem>\n        )}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && <MenuItem icon=\"help\" onClick={onAboutAds}>{lang('SponsoredMessageInfo')}</MenuItem>}\n        {isSponsoredMessage && onSponsoredHide && (\n          <MenuItem icon=\"stop\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage, ApiReaction, ApiStickerSet, ApiStickerSetInfo, ApiThreadInfo,\n} from '../../../api/types';\nimport type { MessageListType, TabState } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition } from '../../../types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageLink,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport PinMessageModal from '../../common/PinMessageModal';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  activeDownloads?: TabState['activeDownloads']['byChatId'][number];\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  messageLink?: string;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  topReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  messageLink,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n  } = getActions();\n\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(msg.id);\n      });\n    }\n\n    return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(message.id);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    updateDraftReplyInfo({\n      replyToMsgId: message.id,\n      quoteText: canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined,\n    });\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyTextToClipboard(messageLink!);\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n    });\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const activeDownloads = selectActiveDownloads(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const { seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const isOwn = isOwnMessage(message);\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n    const messageLink = selectMessageLink(global, message.chatId, threadId, message.id);\n\n    return {\n      availableReactions: global.availableReactions,\n      topReactions: global.topReactions,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: canCopyNumber || (!isProtected && canCopy),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      messageLink,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  canBuyPremium?: boolean;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps & StateProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onClose,\n  onCloseAnimationEnd,\n  canBuyPremium,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={canBuyPremium ? handleSponsoredHide : undefined}\n        onSponsorInfo={handleSponsorInfo}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canBuyPremium: !selectIsCurrentUserPremium(global) && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SponsoredMessageContextMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isMessageThread) && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qzt_zq5gWHne6P2rw7Wj\",\"sets\":\"Ay41sqhq2QmXdgDHnt2E\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage, selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown, selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openBoostStatistics,\n    openGiftPremiumModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    openBoostStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {lang(isPrivate\n                  ? 'DeleteChatUser'\n                  : (canDeleteChat ? 'GroupInfo.DeleteAndExit' : (isChannel ? 'LeaveChannel' : 'Group.LeaveGroup')))}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={chat}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectCurrentTextSearch,\n  selectTabState,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dateFormat';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: number;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (newQuery.length) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {query ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chat = selectCurrentChat(global);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n    };\n  },\n)(MobileSearchFooter));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vUbCal8_iSPkPVzQcz24\",\"wrapper\":\"f4pTNqkRRCFtZzheXcV9\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiChatReactions, ApiReaction } from '../../../api/types';\n\nimport { getReactionUniqueKey, sortReactions } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport ReactionEmoji from '../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionUniqueKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiMessageEntity,\n  ApiReaction, ApiReactionCustomEmoji, ApiSticker, ApiStory, ApiStorySkipped,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getStoryKey, isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectIsCurrentUserPremium,\n  selectPeerStory, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  withCustomReactions,\n  sendAsMessage,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, withCustomReactions]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push('emoticon' in reaction ? reaction.emoticon : reaction.documentId);\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !withCustomReactions && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      <CustomEmojiPicker\n        idPrefix=\"message-emoji-set-\"\n        isHidden={!isOpen || !(withCustomReactions || renderedStoryId)}\n        loadAndPlay={Boolean(isOpen && withCustomReactions)}\n        isReactionPicker\n        className={!withCustomReactions && !renderedStoryId ? styles.hidden : undefined}\n        selectedReactionIds={selectedReactionIds}\n        isTranslucent={isTranslucent}\n        onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n        onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n      />\n      {!withCustomReactions && Boolean(renderedChatId) && (\n        <ReactionPickerLimited\n          chatId={renderedChatId}\n          loadAndPlay={isOpen}\n          onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          selectedReactionIds={selectedReactionIds}\n        />\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    story,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"s4eo5UICU4xBMDvMxWU_\",\"menuContent\":\"Q2c4gWaMXfXzLL_Jbbjr\",\"storyMenu\":\"nwZabdh1rB72Eb1x64Og\",\"onlyReactions\":\"rWa1hIFdrb4U0xFrHLic\",\"hidden\":\"P95Gk2sUhvBJ70LKg_vc\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZqafRENXro3B4A2UTp9s\",\"preview\":\"FfTpBGrctDEiFLXC4aqP\",\"duration\":\"Igo3Vsou5areTsmh2Ng3\",\"single\":\"ZJNnn8HUzq8cC3WwTzY0\",\"no-grouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"noGrouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"file\":\"QAlzNLWBYdWR4UMMaiGm\",\"overlay\":\"YOoQRXIFINVsu3FFIKR0\",\"action-item\":\"y5JLmIFtCzK05l40rdHJ\",\"actionItem\":\"y5JLmIFtCzK05l40rdHJ\",\"delete-file\":\"Qqp72_dWGSui9ORCN3MT\",\"deleteFile\":\"Qqp72_dWGSui9ORCN3MT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { GIF_MIME_TYPE, SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const canDisplaySpoilerButton = attachment.mimeType !== GIF_MIME_TYPE;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && canDisplaySpoilerButton\n    && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          {canDisplaySpoilerButton && (\n            <i\n              className={buildClassName(\n                'icon',\n                attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n                styles.actionItem,\n              )}\n              onClick={handleSpoilerClick}\n            />\n          )}\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VncEpkgqABgA8MUCarxh\",\"mobile\":\"EBYYWwiG6Uj4Aqt4DKGy\",\"symbolMenuOpen\":\"eVLBe8iLKwjR6B31YwJj\",\"header-border\":\"u08mL9ikB7S0oRZKxvsA\",\"headerBorder\":\"u08mL9ikB7S0oRZKxvsA\",\"attachments\":\"d_uMaJ26HlkCfSn5XiQp\",\"attachments-bottom-padding\":\"DUGHCuTKi7H5d_1_vYqj\",\"attachmentsBottomPadding\":\"DUGHCuTKi7H5d_1_vYqj\",\"caption-wrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"captionWrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"caption-top-border\":\"UrYInfws7roRktEiMxvT\",\"captionTopBorder\":\"UrYInfws7roRktEiMxvT\",\"caption\":\"c4dyk1Emgpla8BvDJMAz\",\"drop-target\":\"iWmxxlUXOjTzbvJzWF8g\",\"dropTarget\":\"iWmxxlUXOjTzbvJzWF8g\",\"hovered\":\"B5wzgwCPupbnO1XB5Rwc\",\"send-wrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"sendWrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"send\":\"eFD46lVH5GCILXEOx9BO\",\"is-pointer-env\":\"Os76p3jpmhB2IWYxXigi\",\"isPointerEnv\":\"Os76p3jpmhB2IWYxXigi\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  attachments: ApiAttachment[];\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean((shouldSendCompressed || shouldForceCompression) && !shouldForceAsFile);\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: a.mimeType !== GIF_MIME_TYPE ? true : undefined,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => a.mimeType !== GIF_MIME_TYPE\n      && !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang('PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang('PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang('PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang('PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        <DropdownMenu\n          className=\"attachment-modal-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n          {hasMedia && (\n            <>\n              {\n                !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                    {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                    {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                  </MenuItem>\n                ))\n              }\n              {isSendingCompressed && hasAnySpoilerable && (\n                hasSpoiler ? (\n                  <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                    {lang('Attachment.DisableSpoiler')}\n                  </MenuItem>\n                ) : (\n                  <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                    {lang('Attachment.EnableSpoiler')}\n                  </MenuItem>\n                )\n              )}\n            </>\n          )}\n          {isMultiple && (\n            shouldSendGrouped ? (\n              <MenuItem\n                icon=\"grouped-disable\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setShouldSendGrouped(false)}\n              >\n                Ungroup All Media\n              </MenuItem>\n            ) : (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                Group All Media\n              </MenuItem>\n            )\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule ? lang('Next') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text,\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: questionTrimmed,\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_ELECTRON_BUILD } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_ELECTRON_BUILD ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy, uniqueByField } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  premiumStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  premiumStickers,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, addedSetIds));\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    if (isCurrentUserPremium) {\n      const addedPremiumStickers = existingAddedSetIds\n        .map(({ stickers }) => stickers?.filter((sticker) => sticker.hasEffect))\n        .flat()\n        .filter(Boolean);\n\n      const totalPremiumStickers = uniqueByField([...addedPremiumStickers, ...premiumStickers], 'id');\n\n      if (totalPremiumStickers.length) {\n        defaultSets.push({\n          id: PREMIUM_STICKER_SET_ID,\n          accessHash: '0',\n          title: lang('PremiumStickers'),\n          stickers: totalPremiumStickers,\n          count: totalPremiumStickers.length,\n        });\n      }\n    }\n\n    if (chatStickerSetId) {\n      const fullSet = stickerSetsById[chatStickerSetId];\n      if (fullSet) {\n        defaultSets.push({\n          id: CHAT_STICKER_SET_ID,\n          accessHash: fullSet.accessHash,\n          title: lang('GroupStickers'),\n          stickers: fullSet.stickers,\n          count: fullSet.stickers!.length,\n        });\n      }\n    }\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds, stickerSetsById, favoriteStickers, recentStickers, isCurrentUserPremium, chatStickerSetId, lang,\n    premiumStickers,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents && !noPopulatedSets && canSendStickers;\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.id === PREMIUM_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === PREMIUM_STICKER_SET_ID ? (\n            <PremiumIcon withGradient big />\n          ) : stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div ref={headerRef} className={headerClassName}>\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(styles.main, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      premiumSet,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      premiumStickers: premiumSet.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  const lang = useLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './BotCommand.scss';\n\ntype OwnProps = {\n  botCommand: ApiBotCommand;\n  bot?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  onClick: (botCommand: ApiBotCommand) => void;\n};\n\nconst BotCommand: FC<OwnProps> = ({\n  withAvatar,\n  focus,\n  botCommand,\n  bot,\n  onClick,\n}) => {\n  return (\n    <ListItem\n      key={botCommand.command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => onClick(botCommand)}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={bot} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{botCommand.command}</span>\n        <span className=\"subtitle\">{renderText(botCommand.description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BotCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport BotCommand from './BotCommand';\n\nimport './BotCommandTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  withUsername,\n  botCommands,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSelect = useLastCallback((botCommand: ApiBotCommand) => {\n    // We need an additional check because tooltip is updated with throttling\n    if (!botCommand.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    handleSendCommand(botCommand);\n    return true;\n  });\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: botCommands,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffect(() => {\n    if (botCommands && !botCommands.length) {\n      onClose();\n    }\n  }, [botCommands, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  const prevCommands = usePrevious(botCommands && botCommands.length ? botCommands : undefined, shouldRender);\n  const renderedCommands = botCommands && !botCommands.length ? prevCommands : botCommands;\n\n  if (!shouldRender || (renderedCommands && !renderedCommands.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'BotCommandTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedCommands && renderedCommands.map((chatBotCommand, index) => (\n        <BotCommand\n          key={`${chatBotCommand.botId}_${chatBotCommand.command}`}\n          botCommand={chatBotCommand}\n          // No need for expensive global updates on users and chats, so we avoid them\n          bot={getGlobal().users.byId[chatBotCommand.botId]}\n          withAvatar\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(BotCommandTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport BotCommand from './BotCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((botCommand: ApiBotCommand) => {\n    sendBotCommand({\n      command: `/${botCommand.command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <BotCommand\n          key={botCommand.command}\n          botCommand={botCommand}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"o7fHB9vMHP_k5l9rZC2R\",\"emojiButton\":\"LzdBMbvLbmND0s2zfaff\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className=\"CustomSendMenu with-menu-transitions\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {canSchedule && onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n      {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n        <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n          {lang('SendWhenOnline')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport {\n  selectChat,\n  selectChatMessages,\n  selectCurrentTextSearch,\n  selectUser,\n} from '../../global/selectors';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n};\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const handleSearchTextMessagesLocal = useCallback(() => {\n    searchTextMessagesLocal();\n  }, [searchTextMessagesLocal]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if (!query || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const global = getGlobal();\n\n      let senderPeer = message.senderId\n        ? selectUser(global, message.senderId) || selectChat(global, message.senderId)\n        : undefined;\n\n      if (!senderPeer && message.forwardInfo) {\n        const { isChannelPost, fromChatId } = message.forwardInfo;\n        const originalSender = isChannelPost && fromChatId ? selectChat(global, fromChatId) : undefined;\n        if (originalSender) senderPeer = originalSender;\n      }\n\n      if (!senderPeer) {\n        return undefined;\n      }\n\n      return {\n        message,\n        senderPeer: senderPeer!,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, viewportIds, messagesById, focusMessage, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderPeer, onClick,\n  }: {\n    message: ApiMessage;\n    senderPeer: ApiPeer;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          peer={senderPeer}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            <FullNameTitle peer={senderPeer} withEmojiStatus />\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const messagesById = selectChatMessages(global, chatId);\n    if (!messagesById) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId) && getCanPostInChat(chat, threadId, isMessageThread);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"negbFsRwvclNi7mcE4f2\",\"withImage\":\"pF4WlPXCdaZYVz0V_2Wl\",\"imageContainer\":\"_XCCw8_mY2kZEbx6xsPK\",\"image\":\"CRlJlHM_Jj7X_MAvbjMT\",\"round\":\"eDChvxtpOXbftlqg8jkq\",\"circle\":\"GHQJ90L0qjbdPR5X98J2\",\"withStoryCircle\":\"OprPkOPHUsPsNrMbkQfF\",\"summary\":\"pZVpWgP0EEneLYcMoGnl\",\"title\":\"R56P3w_l10Hu_feFCGh6\",\"info\":\"lY77txbsPNP_XswjRvfu\",\"meta\":\"F1eH9URbEybEvAQFxscw\",\"metaWithIcon\":\"VSrVWNhSLVjueuOkAcN5\",\"metaIcon\":\"Fbn0GqXAXveknzDnwuIu\",\"date\":\"Xqmbl3P_X9DSqlW2joQr\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport Icon from '../../common/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UVY7Yw7FZIXqiQz310aE\",\"pie-slim-in\":\"rMcATdqt_vPTZWegxZnZ\",\"pieSlimIn\":\"rMcATdqt_vPTZWegxZnZ\",\"pie-slim-out\":\"pOTFiXCpoSGRhYNCYnv3\",\"pieSlimOut\":\"pOTFiXCpoSGRhYNCYnv3\",\"messages\":\"lCCeuYH8gfegCu3fmxME\",\"publicForwards\":\"LHsus1ITUb_QhEm_uAl8\",\"messages-title\":\"_4XlhRzwPDhLoDu5duJbU\",\"messagesTitle\":\"_4XlhRzwPDhLoDu5duJbU\",\"publicForwards-title\":\"L_AoFaFttdXFpHyqlOb1\",\"publicForwardsTitle\":\"L_AoFaFttdXFpHyqlOb1\",\"ready\":\"bjHXcNGdDCoKJZ5bnKww\",\"graph\":\"zotml6OW8tvxvArOWgzD\",\"hidden\":\"Z3t1TaWlpk0w5KB9PanI\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"cQYi9REIkDGmDa3wl8h0\",\"title\":\"L3EjdT2D9WVH82czad4K\",\"views\":\"cMiQQIlRC4JJ_GUZ1JUr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">{text}</span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">{renderText(summary.question, ['emoji', 'br'])}</h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qj1MQaLfhumlxACIpkUl\",\"content\":\"ph5g3hCSQ_72FnZ3YkuA\",\"section\":\"bYZBp9H7Ks8tqaBvQm57\",\"general\":\"CSjgq5gkTxM3iZQ9oJ9b\",\"top\":\"sV6D57DhbsFwQhRNzw9K\",\"bottom\":\"pUkmozcBdIn4yWGGPoX1\",\"iconWrapper\":\"JT0__kgf23rGv5BWQF2s\",\"icon\":\"gx85t_IsGh2fgS2yDGtk\",\"clickable\":\"TVwtYFuxdwJH5LZ7yvwu\",\"heading\":\"o9l56jP2uXfAul061gXq\",\"icon-picker\":\"ByQF8Qg3NcYnBCvGwoH0\",\"iconPicker\":\"ByQF8Qg3NcYnBCvGwoH0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isSignaturesShown}\n              label={lang('ChannelSignMessages')}\n              onChange={handleToggleSignatures}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  currentUserId?: string;\n  isChannel: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat.isCreator || chat.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId\n      ? selectChat(global, linkedChatId)\n      : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickPermissions = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateGroup = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickMembers = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  }, [onScreenSelect]);\n\n  const handleTogglePreHistory = useCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  }, [chat.id, chatFullInfo]);\n\n  const handleForumToggle = useCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  }, [chatId, toggleForum]);\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [\n    isBasicGroup, chat.isCreator, chat.id,\n    closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, deleteChat, openChat,\n  ]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo: chat.isCreator || getHasAdminRight(chat, 'changeInfo'),\n      canBanUsers: chat.isCreator || getHasAdminRight(chat, 'banUsers'),\n      canInvite: chat.isCreator || getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.availableReactions,\n      canEditForum,\n    };\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postStories\"\n                checked={Boolean(permissions.postStories)}\n                label={lang('EditAdminPostStories')}\n                blocking\n                disabled={getControlIsDisabled('postStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editStories\"\n                checked={Boolean(permissions.editStories)}\n                label={lang('EditAdminEditStories')}\n                blocking\n                disabled={getControlIsDisabled('editStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"deleteStories\"\n                checked={Boolean(permissions.deleteStories)}\n                label={lang('EditAdminDeleteStories')}\n                blocking\n                disabled={getControlIsDisabled('deleteStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, sortChatIds, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement, toggleParticipantsHidden,\n  } = getActions();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      chatsById,\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  }, [closeManagement, noAdmins, onChatMemberSelect, onScreenSelect, openChat]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  }, [setUserSearchQuery]);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useCallback(() => {\n    setDeletingUserId(undefined);\n  }, []);\n\n  const handleToggleParticipantsHidden = useCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  }, [areParticipantsHidden, chatId, toggleParticipantsHidden]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId];\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId];\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(() => {\n    forceUpdate();\n  }, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId];\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.availableReactions,\n      chat,\n    };\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SM3T4awhZJvKn_c8aRuY\",\"description\":\"RWoBZem6PCNMF5hu6Shs\",\"checkout-picture\":\"prUKJGh6W9LIyjSnRbZc\",\"checkoutPicture\":\"prUKJGh6W9LIyjSnRbZc\",\"text\":\"xUG3uFeTiPPFkWHQELCc\",\"checkout-title\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkoutTitle\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkout-description\":\"LqaZe1TRdNI17BEa1gcl\",\"checkoutDescription\":\"LqaZe1TRdNI17BEa1gcl\",\"price-info\":\"mz2vhtmYPNRaJbeUrXKA\",\"priceInfo\":\"mz2vhtmYPNRaJbeUrXKA\",\"price-info-item\":\"Ct9Ine31cu5h7FCjtRWa\",\"priceInfoItem\":\"Ct9Ine31cu5h7FCjtRWa\",\"price-info-item-main\":\"JduVB3d3NxN9TybmxIgS\",\"priceInfoItemMain\":\"JduVB3d3NxN9TybmxIgS\",\"price-info-item-title\":\"O7d8G4OQ_yTJSHiHbgBR\",\"priceInfoItemTitle\":\"O7d8G4OQ_yTJSHiHbgBR\",\"tipsList\":\"zsSyrAOxg0qs0nPJWSEe\",\"tipsItem\":\"lcjeIUsdqs95BdK_oysT\",\"tipsItem_active\":\"XRnGKO5ClzA_4S8i81wC\",\"tipsItemActive\":\"XRnGKO5ClzA_4S8i81wC\",\"invoice-info\":\"MyMLGHhiEKOVIoG3aQTS\",\"invoiceInfo\":\"MyMLGHhiEKOVIoG3aQTS\",\"provider\":\"hLVHJSaVspSZdzxNlBJk\",\"stripe\":\"nrKVVKzRmr7s0TE15uG1\",\"smartglocal\":\"oONvjFUTa5AbWvrbzbWn\",\"checkout-info-item-info-title\":\"bkIqUpVUAY04wdT8fySX\",\"checkoutInfoItemInfoTitle\":\"bkIqUpVUAY04wdT8fySX\",\"checkout-info-item-info-data\":\"VAzhVfK6c1pUriepo4Ga\",\"checkoutInfoItemInfoData\":\"VAzhVfK6c1pUriepo4Ga\",\"tos-checkbox\":\"WjrdCzbl3hROmSBGGnjy\",\"tosCheckbox\":\"WjrdCzbl3hROmSBGGnjy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiChat, ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  chat?: ApiChat;\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n};\n\nconst Checkout: FC<OwnProps> = ({\n  chat,\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, true)}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', chat?.title);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || !isInteractive) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || !isInteractive) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  return (\n    <ListItem\n      multiline={Boolean(title && label !== title)}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n    >\n      {customIcon && <i className={buildClassName('icon', customIcon)} />}\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ninterface IframeCallbackEvent {\n  eventType: string;\n  eventData: {\n    path_full: string;\n  };\n}\n\nconst ConfirmPayment: FC<OwnProps> = ({ url, noRedirect, onClose }) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n\n      if (eventType !== 'web_app_open_tg_link') {\n        return;\n      }\n\n      if (!noRedirect) {\n        const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n        openTelegramLink({ url: linkUrl });\n      }\n\n      onClose();\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 400;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 23;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport { PaymentStep } from '../../types';\n\nimport { selectChat, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  chat,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePrevious(step, true);\n  const prevRequestId = usePrevious(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            chat={chat}\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handleButtonClick = useCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  }, [\n    isEmailRequested, isNameRequested, isPhoneRequested, isShippingAddressRequested, nativeProvider, passwordValidUntil,\n    paymentDispatch, paymentState, requestId, savedInfo, sendCredentials, sendForm, setStep, smartGlocalToken, step,\n    stripeId, twoFaPassword, validatePaymentPassword, validateRequest,\n  ]);\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrency(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.isRecurring && !isTosAccepted);\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition name=\"slide\" activeKey={step}>\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n    } = selectTabState(global).payment;\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId) : undefined;\n    const isProviderError = Boolean(invoice && (!nativeProvider || !SUPPORTED_PROVIDERS.has(nativeProvider)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl,\n      countryList: global.countryList.general,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice = useMemo(() => {\n    return {\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Picker from '../common/Picker';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  chatId?: string;\n  userIds?: string[];\n};\n\nconst InviteViaLinkModal: FC<OwnProps> = ({\n  chatId, userIds,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal } = getActions();\n\n  const lang = useLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (userIds) {\n      setSelectedMemberIds(userIds);\n    }\n  }, [userIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n  const handleClickSkip = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleClickSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chatId!, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chatId]);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return userIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [userIds]);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chatId)}\n      title={lang('SendInviteLink.InviteTitle')}\n      onClose={handleClose}\n      isSlim\n    >\n      <p className={styles.contentText}>\n        {renderText(lang('SendInviteLink.TextAvailableSingleUser', userNames), ['simple_markdown'])}\n      </p>\n      <Picker\n        itemIds={userIds!}\n        selectedIds={selectedMemberIds ?? []}\n        onSelectedIdsChange={setSelectedMemberIds}\n      />\n      <div className=\"dialog-buttons\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClickSendInviteLink}\n          disabled={!selectedMemberIds?.length}\n        >\n          {lang('SendInviteLink.ActionInvite')}\n        </Button>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClickSkip}\n        >\n          {lang('SendInviteLink.ActionSkip')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(InviteViaLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"contentText\":\"rSporml7GduY_xOM5_K0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["createGhost","source","origin","ghost","document","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","message","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","video","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","useMediaProps","mediaId","avatarOwner","delay","photo","getMessagePhoto","undefined","actionPhoto","getMessageActionPhoto","getMessageVideo","webPagePhoto","getMessageWebPagePhoto","webPageVideo","getMessageWebPageVideo","isDocumentPhoto","isMessageDocumentPhoto","isDocumentVideo","isMessageDocumentVideo","videoSize","getMessageFileSize","avatarMedia","photos","isVideoAvatar","Boolean","isVideo","isPhoto","isGif","isFromSharedMedia","isFromSearch","getMediaHash","useMemo","isFull","getVideoAvatarMediaHash","getChatAvatarHash","getMessageMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMessageMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","useBlurSync","getMessageMediaThumbDataUri","bestData","isLocal","fileName","getMessageFileName","hasVideoAvatar","dimensions","getMessageDocument","mediaSize","getPhotoFullDimensions","getVideoDimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","avatarPhoto","getZoomChange","setZoomChange","useZoomChange","memo","withGlobal","global","isSchedule","threadId","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","chat","selectChat","chatId","contactName","isUserId","getUserFirstOrLastName","selectUser","getPrivateChatUserId","isChatWithBot","selectBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","DeleteMessageModal","isOpen","album","onConfirm","onClose","deleteMessages","deleteScheduledMessages","getActions","handleDeleteMessageForAll","useCallback","messageIds","messages","map","shouldDeleteForAll","handleDeleteMessageForSelf","lang","useLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","renderText","DeleteProfilePhotoModal","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","canUpdateMedia","currentMessageList","isDownloading","selectIsDownloading","isProtected","selectIsMessageProtected","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","isCurrentAvatar","avatarHash","canUpdate","messageListType","type","avatarOwnerId","MediaViewerActions","canReport","selectMedia","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMessageMedia","cancelMessageMediaDownload","updateProfilePhoto","updateChatPhoto","downloadProgress","handleDownloadClick","useLastCallback","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","MenuButton","onTrigger","round","ariaLabel","renderDeleteModals","menuItems","isForwardingAllowed","push","icon","children","Math","href","download","destructive","length","DropdownMenu","trigger","positionX","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","MediaViewerFooter","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","index","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","params","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","square","ownProps","selectTabState","mediaViewer","selectChatMessage","senderId","selectScheduledMessage","props","withAnimation","onFooterClick","isMoving","toggleControlsOnMove","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","content","action","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","getMediaId","rest","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveMediaId","setActiveMediaId","activeMediaIdRef","isScaled","activeMediaId","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectMediaDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","mId","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","nextMediaId","prevMediaId","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","isAvatar","sender","selectPeer","selectSender","SenderInfo","isFallbackAvatar","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","senderTitle","getSenderTitle","Avatar","peer","formatMediaDateTime","date","shouldSkipHistoryAnimations","selectPerformanceSettingsValue","currentUserId","chatMessages","collectionIds","isChatWithSelf","selectIsChatWithSelf","user","isChatAdmin","avatarOwnerFallbackPhoto","selectUserFullInfo","fallbackPhoto","selectChatScheduledMessages","selectChatMessages","selectOutlyingListByMessageId","selectListedIds","currentSearch","selectCurrentMediaSearch","foundIds","resultsByType","media","MediaViewer","openMediaViewer","openForwardMenu","animationKey","prevSenderId","usePrevious","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","singleMediaId","mediaIds","p","i","getChatMediaMessageIds","selectedMediaIndex","indexOf","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","addListener","removeListener","prevMessage","prevIsHidden","prevOrigin","prevAvatarOwner","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","mediaIdRef","useStateRef","handleFooterClick","currentMediaId","handleForward","fromChatId","forceOnHeavyAnimation","captureEscKeyListener","stopCurrentAudio","mediaIdsRef","fromId","mIds","handleBeforeDelete","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","ReportModal","subject","peerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","tabState","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","Picker","itemIds","MEMO_EMPTY_ARRAY","filterValue","filterPlaceholder","searchInputId","isSearchable","forceShowSelf","onSelectedIdsChange","onFilterChange","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryPinned","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","parseInt","getComputedStyle","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","areViewsExpired","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isChannel","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","documentId","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","isPrivateStories","isArchivedStories","appConfig","viewModal","isPrivacyModalOpen","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","orderedIds","pinnedIds","archiveIds","selectPeerStories","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","canPinToProfile","useCurrentOrPrev","canUnpinFromProfile","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransition","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","onStart","isLongPressActive","isPressed","timerId","canProcessEvent","cancel","useLongPress","hasAllData","useBackgroundMode","load","isPreload","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","onPlaying","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","withStory","storyViewerMode","ANIMATION_DURATION_MS","IS_SAFARI","IS_FIREFOX","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","archived","active","peerIds","areStoriesHidden","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","animationDuration","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","timeoutId","timeOutId","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","buildStyle","Story","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","parts","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","isLoading","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","Array","_","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ChatOrUserPicker","chatOrUserIds","chatsById","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","topicIds","topics","topicsResult","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","handleTopicClick","topicId","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","clickArg","TopicIcon","letterClassName","Loading","chats","listIds","orderedPinnedIds","activeListIds","archivedListIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","isManyMessages","isStory","ForwardRecipientPicker","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","isSelf","toChatId","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","Notifications","notifications","dismissNotification","localId","actionText","Notification","onDismiss","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","OpenMapModal","geoPoint","closeMapModal","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","openUrl","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","UrlAuthModal","urlAuth","currentUserName","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","unmarkTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","userStatus","selectUserStatus","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","webApp","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","paymentStatus","WebAppModal","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","reload_supported","req_id","slug","linkUrl","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleToggleClick","isEnabled","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","shortName","isInactive","isForSideMenu","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","count","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","DPR","currentUser","PremiumFeaturePreviewVideo","circleRef","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","PREMIUM_FEATURE_DESCRIPTIONS","PREMIUM_FEATURE_SECTIONS","PREMIUM_BOTTOM_VIDEOS","LIMITS_ORDER","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","options","months","scrollLeft","scrollLeftOriginal","toString","reverseIndex","prevElement","reverseElement","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","formatCurrency","amount","currency","PremiumSubscriptionOption","fullMonthlyAmount","perMonth","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isClosing","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","isClosed","isBig","PremiumLogo","statusText","entities","statusEntities","renderFooterText","forUserId","monthlyCurrency","monthlyAmount","giftPremiumModal","gifts","premiumGifts","GiftPremiumModal","closeGiftPremiumModal","renderedUser","renderedGifts","selectedOption","setSelectedOption","firstGift","cheaperGift","gift","selectedGift","botUrl","handlePremiumClick","match","Link","isPrimary","renderPremiumFeaturesLink","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","isLottie","isVideos","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerPreviewHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","accessHash","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isSavedMessages","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","noShowPremium","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","setEmojiStatus","menuRef","isCustomEmoji","hasEffect","isLocked","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","item","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","available","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","observeIntersectionForPlaying","AnimatedIconWithPreview","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","isConfirmModalOpen","openConfirmModal","closeConfirmModal","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","reactions","isInstalled","installedDate","isArchived","canCut","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","Set","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionUniqueKey","isHqEmoji","canvasRef","has","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","CHAT_STICKER_SET_ID","PREMIUM_STICKER_SET_ID","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","topReactionsSlice","TOP_SYMBOL_SET_ID","cleanRecentReactions","some","topReaction","cleanAvailableReactions","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","getFirstAvailableBoost","myBoosts","boost","firstBoost","boostedChat","BoostModal","applyBoost","closeBoostModal","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","level","currentLevelBoosts","hasMyBoost","areBoostsInDifferentChannels","every","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","getBoostProgressInfo","hasBoost","isJustUpgraded","moreBoosts","currentStoriesPerDay","nextLevelStoriesPerDay","modalTitle","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","chatMessage","messageSender","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","LinkField","PickerSelectedItem","isFromGiveaway","formatDateTimeToString","ChatlistAlready","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","AboutAdsModal","SafeLink","isPrivateChat","isChatChannel","isGroup","isSuperGroup","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","DeleteSelectedMessageModal","exitMessageSelectMode","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isForwardModalOpen","isModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","handleCopy","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","memberIds","leftId","rightId","handleCloseSeenByModal","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","flatMap","peerReactions","reactor","seenByUser","FullNameTitle","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","secondaryIcon","narrow","highlight","createMapStateToProps","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","activeDownloads","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","handleMessageFocus","handlePlayAudio","canRenderContents","noFastList","NothingFound","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","shouldReplaceHistory","useSelectWithEnter","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","onReset","openThread","nothingFound","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","storyViewerOrigin","MuteChatModal","ChatFolderModal","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","globalResults","localResults","globalChatIds","globalUserIds","accountChatIds","accountUserIds","ChatResults","setGlobalSearchChatId","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","contactIdsWithMe","localContactIds","orderedChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","localPeerIds","accountPeerIds","accountPeerId","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","CURRENT_TYPE","FileResults","observeIntersectionForMedia","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","itemSelector","Media","TABS","GlobalSearchContent","Links","Files","Music","Voice","CHAT_TABS","TRANSITION_RENDER_COUNT","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","TabList","tabs","onSwitchTab","renderCount","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","SettingsFoldersChatsPicker","mode","selectedChatTypes","shouldHideChatTypes","onSelectedChatTypesChange","onSaveFilter","openLimitReachedModal","chatTypes","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","shouldMinimize","isTouched","setIsTouched","handleItemClick","newSelectedIds","splice","handleChatTypeClick","newSelectedChatTypes","handleFilterChange","selectedType","typeKey","isMinimized","canClose","withChatType","SettingsFoldersChatFilters","dispatch","chatFilter","selectedChatIds","selectChatFilters","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","isChatList","newFilter","handleSelectedIdsChange","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","renderChatType","ShowMoreButton","itemName","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","LOCAL_TGS_URLS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","subtitle","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","shareFolderScreen","pinnedChatIds","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","setSelectedIds","isFirstRenderRef","prevUrl","handleClickDisabled","isUserBot","chatsCount","FoldersShare","withShare","onRevoke","onDisabledClick","isRoundCheckbox","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","dateActive","box","appName","appVersion","ip","region","country","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","iconClassName","sessionHashes","sessionHash","RadioGroup","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","avatar","StickerSetCard","handleCardClick","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","newValue","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","language","doNotTranslate","SettingsDoNotTranslate","displayedOptions","setDisplayedOptions","subLabel","otherLanguages","unselected","newDoNotTranslate","v","filteredDisplayedOptions","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","copyTextToClipboard","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","SettingsGeneral","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyForwarding","PrivacyVoiceMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","SettingsLanguage","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","setLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","rightIcon","onClickLabel","loadingOption","sessionCount","SettingsMain","loadProfilePhotos","openSupportChat","isSupportDialogOpen","openSupportDialog","closeSupportDialog","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","langName","PremiumIcon","withGradient","big","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","prev","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","privacyPhoneNumber","privacyLastSeen","lastSeen","privacyProfilePhoto","profilePhoto","privacyForwarding","forwards","privacyVoiceMessages","voiceMessages","privacyGroupChats","chatInvite","privacyPhoneCall","phoneCall","privacyBio","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","updateGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleVoiceMessagesClick","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","allowDisabledClick","blockedIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","setPrivacyVisibility","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","privacyKey","headerText","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","SettingsPrivacyVisibility","secondaryScreen","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","setPrivacySettings","selectedContactIds","updatedIds","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","onSuccess","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","statusesById","userStatusesById","ContactList","openNewContactDialog","filteredIds","sortUserIds","isSearching","NewChatStep1","selectedMemberIds","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","onTransitionEnd","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","CheckboxGroup","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","getCopyLabel","hasSelection","MessageContextMenu","isReactionPickerOpen","enabledReactions","maxUniqueReactions","anchor","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","noTransition","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAds","onSponsoredHide","onSponsorInfo","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessageContact","canImageBeCopied","hasMessageLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","menuElMinWidth","withScroll","handleOpenMessageReactionPicker","bubbleStyle","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","MenuSeparator","inline","withWrap","sponsorInfo","detectedLanguage","selectActiveDownloads","seenByExpiresAt","seenByMaxChatMembers","noOptions","isOwn","isOwnMessage","isScheduled","isMessageLocal","isChatGroup","membersCount","isAction","isActionMessage","chatFullInfo","selectChatFullInfo","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","messageLink","selectMessageLink","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","ContextMenuContainer","updateDraftReplyInfo","setEditingId","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","setIsMenuOpen","setIsDeleteModalOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","selectionRange","rangeCount","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","handleDelete","handleReport","closeMenu","closePinModal","handleReply","replyToMsgId","quoteText","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","SponsoredMessageContextMenuContainer","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","chatBot","REPLIES_USER_ID","userFullInfo","fullInfo","canGiftPremium","canCreateTopic","isCreator","isUserRightBanned","getHasAdminRight","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openBoostStatistics","openGiftPremiumModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","shouldCloseFast","setShouldCloseFast","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","cmd","DeleteChatModal","runDebouncedForSearch","selectCurrentTextSearch","isHistoryCalendarOpen","MobileSearchFooter","setLocalTextSearchQuery","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","focusedIndex","setFocusedIndex","visualViewport","mainEl","pageTop","blur","handleMessageSearchQueryChange","newQuery","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","getDayStartAt","ReactionPickerLimited","isTouchScreen","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areCustomReactionsAllowed","areCustomAllowed","withCustomReactions","ReactionPicker","closeReactionPicker","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","isFree","customEmojiMessage","buildCustomEmojiHtml","isReaction","chosenOrder","backdropExcludedSelector","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","isSingle","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","canDisplaySpoilerButton","GIF_MIME_TYPE","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","members","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","attachments","getHtml","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","focusInput","addNewOption","newOptions","requestNextMutation","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","hidden","noReplaceNewlines","EmojiButton","native","IS_ELECTRON_BUILD","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","categories","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","unshift","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","GifButton","onUnsaveClick","withThumb","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","favorite","premiumSet","chatStickerSetId","recentStickers","premiumStickers","selectShouldLoopStickers","StickerPicker","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","existingAddedSetIds","addedPremiumStickers","flat","totalPremiumStickers","uniqueByField","fullSet","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","BotCommand","withAvatar","botCommand","BotCommandTooltip","handleSendCommand","selectedCommandIndex","prevCommands","renderedCommands","chatBotCommand","BotCommandMenu","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","messagesById","RightSearch","handleSearchTextMessagesLocal","viewportResults","senderPeer","isChannelPost","originalSender","foundResult","isOnTop","preloadBackwards","renderSearchResult","teactOrderKey","LastMessageMeta","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","storiesById","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","msgId","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","setIsLoading","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","renderViewMoreButton","PollResults","getMessagePoll","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","CHANNEL_TITLE_EMPTY","management","isSignaturesShown","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","toggleSignatures","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","ManagementProgress","adminsCount","adminMembersById","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleToggleSignatures","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","isChatPublic","formatInteger","joinRequests","ManageChatAdministrators","onChatMemberSelect","canAddNewAdmins","adminRights","addAdmins","adminMembers","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","ManageChatRemovedUsers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","bannedRights","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","canBanUsers","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","defaultBannedRights","sendStickers","sendGifs","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","permissions","setPermissions","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handlePermissionChange","handleSavePermissions","handleDismissAdmin","getControlIsDisabled","memberStatus","handleCustomTitleChange","changeInfo","blocking","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","inviteUsers","pinMessages","manageCall","manageTopics","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","ManageGroupMembers","noAdmins","toggleParticipantsHidden","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","noScrollRestore","memberId","DeleteMemberModal","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","havePermissionChanged","setHavePermissionChanged","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","checkMedia","mediaPermissions","sendMedia","assign","embedLinks","sendPlain","sendMessages","ManageGroupPermissions","updateChatDefaultBannedRights","shouldDisablePermissionForPublicGroup","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isMediaDropdownOpen","setIsMediaDropdownOpen","handleOpenMediaDropdown","handleDisabledClick","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","sendPhotos","sendVideos","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","isCalendarOpened","openCalendar","closeCalendar","setIsRequestNeeded","customExpireDate","setCustomExpireDate","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","handleExpireDateChange","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","reactionsOptions","handleSaveReactions","availableActiveReactions","handleReactionsOptionChange","handleReactionChange","local","personalPhoto","notPersonalPhoto","ManageUser","uploadContactProfilePhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","isSuggestRef","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","handleSelectAvatar","isSuggest","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","iso2","defaultName","Checkout","invoice","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","main","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","passwordHint","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","general","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","validateRequest","requestInfo","getRequestInfo","sendCredentials","credentials","expiryMonth","expiryYear","zip","getCredentials","sendForm","shippingOptionId","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","isRecurring","getIsSubmitDisabled","currentStep","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","ReceiptModal","fullAddress","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","setSelectedMemberIds","handleClickSkip","handleClickSendInviteLink","userNames","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","hardwareConcurrency","instances","IS_TEST","Worker","createConnector"],"sourceRoot":""}