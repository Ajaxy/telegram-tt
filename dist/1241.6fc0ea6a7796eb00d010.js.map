{"version":3,"file":"1241.6fc0ea6a7796eb00d010.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/ChatTags.module.scss?bf8a","webpack://telegram-t/./src/components/left/main/ChatTags.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/media/useMessageMediaHash.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/common/helpers/preloadDocumentMedia.ts","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useScrollNotch.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/right/statistics/helpers/isGraph.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): Complete<StateProps> => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"cgAMX02q\",\"tag\":\"oIgI9O0L\",\"tagColorMore\":\"hZDqIz3W\"};","import { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getApiPeerColorClass } from '../../common/helpers/peerColor';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport styles from './ChatTags.module.scss';\n\nconst MAX_VISIBLE_TAGS = 3;\n\ntype OwnProps = {\n  folderIds?: number[];\n  orderedIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  activeChatFolder?: number;\n};\n\nconst ChatTags = ({\n  folderIds,\n  orderedIds,\n  chatFoldersById,\n  activeChatFolder,\n}: OwnProps) => {\n  const activeFolderId = activeChatFolder !== undefined && orderedIds ? orderedIds[activeChatFolder] : undefined;\n\n  const orderedFolderIds = useMemo(() => orderedIds?.filter((id) => {\n    const isFolder = folderIds?.includes(id);\n    const isActive = id === activeFolderId;\n    const isAll = id === ALL_FOLDER_ID;\n\n    const folder = chatFoldersById?.[id];\n    const hasColor = folder?.color !== undefined && folder.color !== -1;\n\n    return isFolder && !isActive && !isAll && hasColor;\n  }) || [], [orderedIds, folderIds, activeFolderId, chatFoldersById]);\n\n  const visibleFolderIds = orderedFolderIds.slice(0, MAX_VISIBLE_TAGS);\n  const remainingCount = orderedFolderIds.length - visibleFolderIds.length;\n\n  return (\n    <div className={styles.wrapper}>\n      {visibleFolderIds.map((folderId) => {\n        const folder = chatFoldersById?.[folderId];\n        return folder && (\n          <div\n            key={folder.id}\n            className={buildClassName(\n              'ChatTags',\n              styles.tag,\n              getApiPeerColorClass({ color: folder.color }),\n            )}\n          >\n            {renderTextWithEntities({\n              text: folder.title.text,\n              entities: folder.title.entities,\n              noCustomEmojiPlayback: folder.noTitleAnimations,\n              emojiSize: 12,\n            })}\n          </div>\n        );\n      })}\n      {remainingCount > 0 && (\n        <div className={`ChatTags ${styles.tag} ${styles.tagColorMore}`}>\n          +\n          {remainingCount}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChatTags);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiChatFolder,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { UNMUTE_TIMESTAMP } from '../../../config';\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getChatFolderIds } from '../../../util/folderManager';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatTags from './ChatTags';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n  withTags?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n  folderIds?: number[];\n  orderedIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  activeChatFolder?: number;\n  areTagsEnabled?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n  folderIds,\n  orderedIds,\n  chatFoldersById,\n  activeChatFolder,\n  areTagsEnabled,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n    updateChatMutedState,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const shouldRenderTags = areTagsEnabled && withTags && folderIds && folderIds.length > 1;\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n    noForumTitle: shouldRenderTags,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    updateChatMutedState({ chatId, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleUnmute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    shouldRenderTags && 'chat-item-with-tags',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className={buildClassName('info', shouldRenderTags && 'has-tags')}>\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n        {shouldRenderTags && (\n          <ChatTags\n            folderIds={folderIds}\n            orderedIds={orderedIds}\n            chatFoldersById={chatFoldersById}\n            activeChatFolder={activeChatFolder}\n          />\n        )}\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      } as Complete<StateProps>;\n    }\n\n    const folderIds = getChatFolderIds(chatId);\n    const { areTagsEnabled } = global.chatFolders;\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    const activeChatFolder = selectTabState(global).activeChatFolder;\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastMessageOutgoingStatus: isOutgoing && lastMessage ? selectOutgoingStatus(global, lastMessage) : undefined,\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n      folderIds,\n      orderedIds: global.chatFolders.orderedIds,\n      activeChatFolder,\n      chatFoldersById: global.chatFolders.byId,\n      areTagsEnabled: areTagsEnabled && isPremium,\n    };\n  },\n)(Chat));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm || switchWebview) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  threadId?: ThreadId;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, threadId, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({\n                  chatId: message.chatId, messageId: message.id, threadId, button,\n                })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): Complete<StateProps> => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n\n    const message = chatId ? selectChatMessage(global, chatId, messageId) : undefined;\n    return {\n      message,\n    };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          noCaptions={noCaptions}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): Complete<StateProps> => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo, useRef, useSignal, useState } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type { GlobalState, TabState } from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { DEFAULT_MAX_MESSAGE_LENGTH } from '../../limits';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(\n      chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList,\n    ),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((\n    newHtml: string, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount && !shouldPrepend) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    if (shouldPrepend) {\n      const newFirstWord = newHtml.split(' ')[0];\n      const shouldReplace = getHtml().startsWith(newFirstWord);\n\n      setHtml(shouldReplace ? newHtml : `${newHtml}${getHtml()}`);\n    } else {\n      setHtml(`${getHtml()}${newHtml}`);\n    }\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId, shouldPrepend);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft, undefined, true);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        },\n      );\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = selectCustomEmoji(getGlobal(), reaction.documentId);\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({});\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#000\"\n                filter=\"url(#composerAppendix)\"\n              />\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#FFF\"\n                className=\"corner\"\n              />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"scheduled\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              threadId={threadId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): Complete<StateProps> => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setColor'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'setColor':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          color: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage,\n  getMessageTextWithFallback,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageTextWithFallback(lang, message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(oldLang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): Complete<StateProps> => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): Complete<StateProps> => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n  withTags?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n          withTags={withTags}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: ElementRef<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  const overscrollTriggerRef = useRef<HTMLDivElement>();\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop && !IS_TAURI) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">{lang('FileDropZoneTitle')}</div>\n        {!isGeneric && (\n          <div className=\"description\">\n            {isQuick ? lang('FileDropZoneQuick') : lang('FileDropZoneNoCompression')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const value = useMemo(() => {\n    if (age) {\n      return lang(\n        `ProfileBirthday${isToday ? 'Today' : ''}ValueYear`,\n        { date: formattedDate, age },\n        { pluralValue: age },\n      );\n    }\n\n    return lang(`ProfileBirthday${isToday ? 'Today' : ''}Value`, { date: formattedDate });\n  }, [age, formattedDate, isToday, lang]);\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(value)}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH, MUTE_INDEFINITE_TIMESTAMP, UNMUTE_TIMESTAMP,\n} from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleToggleNotifications = useLastCallback(() => {\n    const mutedUntil = isMuted ? UNMUTE_TIMESTAMP : MUTE_INDEFINITE_TIMESTAMP;\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        mutedUntil,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, mutedUntil });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon={isMuted ? 'unmute' : 'mute'} narrow ripple onClick={handleToggleNotifications}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): Complete<StateProps> => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_TAURI } from '../util/browser/globalEnvironment';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_TAURI ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics, handleUnmute,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      } as Complete<StateProps>;\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n  noForumTitle?: boolean;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n  noForumTitle,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {\n        !noForumTitle && (\n          <>\n            {lastActiveTopic && (\n              <div className={styles.titleRow}>\n                <div\n                  className={buildClassName(\n                    styles.mainColumn,\n                    lastActiveTopic.unreadCount && styles.unread,\n                  )}\n                  ref={mainColumnRef}\n                  onClick={handleOpenTopicClick}\n                  onMouseDown={handleOpenTopicMouseDown}\n                >\n                  <TopicIcon\n                    topic={lastActiveTopic}\n                    observeIntersection={observeIntersection}\n                  />\n                  <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n                  {!overwrittenWidth && isReversedCorner && (\n                    <div className={styles.afterWrapper}>\n                      <div className={styles.after} />\n                    </div>\n                  )}\n                </div>\n\n                <div className={styles.otherColumns}>\n                  {otherTopics.map((topic) => (\n                    <div\n                      className={buildClassName(\n                        styles.otherColumn, topic.unreadCount && styles.unread,\n                      )}\n                      key={topic.id}\n                    >\n                      <TopicIcon\n                        topic={topic}\n                        className={styles.otherColumnIcon}\n                        observeIntersection={observeIntersection}\n                      />\n                      <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className={styles.ellipsis} />\n              </div>\n            )}\n            {!lastActiveTopic && (\n              <div className={buildClassName(styles.titleRow, styles.loading)}>\n                {lang('Loading')}\n              </div>\n            )}\n          </>\n        )\n      }\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && !noForumTitle && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n  noForumTitle,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n  noForumTitle?: boolean;\n}) {\n  const lang = useLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('ChatDraftPrefix')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(lang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n          noForumTitle={noForumTitle}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): Complete<StateProps> => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import { getGlobal, setGlobal } from '../../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../../api/types';\n\nimport {\n  getDocumentMediaHash, getMediaFormat, getMessageDocumentPhoto, getMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { updateChatMessage } from '../../../global/reducers';\nimport { selectChatMessage } from '../../../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { preloadImage, preloadVideo } from '../../../util/files';\nimport { fetch } from '../../../util/mediaLoader';\nimport LimitedMap from '../../../util/primitives/LimitedMap';\n\nconst preloadedHashes = new LimitedMap<string, void>(100);\n\nexport async function preloadDocumentMedia(mediaContainer: ApiMessage) {\n  const video = getMessageDocumentVideo(mediaContainer);\n  const photo = getMessageDocumentPhoto(mediaContainer);\n\n  const media = video || photo;\n\n  // Skip large photos that were not processed by the server\n  const shouldSkipPhoto = photo && photo.mediaSize && !photo.mediaSize.fromDocumentAttribute;\n  if (!media || media.previewBlobUrl || shouldSkipPhoto) {\n    return;\n  }\n\n  const hash = getDocumentMediaHash(media, 'full');\n  if (!hash || preloadedHashes.has(hash)) {\n    return;\n  }\n\n  preloadedHashes.set(hash, undefined);\n\n  const url = await fetch(hash, getMediaFormat(media, 'full'));\n  if (!url) {\n    return;\n  }\n\n  let dimensions: ApiDocument['mediaSize'] | undefined;\n\n  if (video && IS_PROGRESSIVE_SUPPORTED) {\n    const videoEl = await preloadVideo(url);\n    dimensions = { width: videoEl.videoWidth, height: videoEl.videoHeight, fromPreload: true };\n  }\n\n  if (photo) {\n    const img = await preloadImage(url);\n    dimensions = { width: img.naturalWidth, height: img.naturalHeight, fromPreload: true };\n  }\n\n  if (!dimensions || dimensions.width <= 0 || dimensions.height <= 0) {\n    return;\n  }\n\n  let global = getGlobal();\n  const message = selectChatMessage(global, mediaContainer.chatId, mediaContainer.id);\n  if (!message || !message.content.document) return;\n  global = updateChatMessage(global, mediaContainer.chatId, mediaContainer.id, {\n    content: {\n      ...message.content,\n      document: {\n        ...message.content.document,\n        mediaSize: dimensions,\n      },\n    },\n  });\n  setGlobal(global);\n}\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { isIpRevealingMedia } from '../../util/media/ipRevealingMedia';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport { preloadDocumentMedia } from './helpers/preloadDocumentMedia';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutFiles,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isFileIpDialogOpen, openFileIpDialog, closeFileIpDialog] = useFlag();\n  const [shouldNotWarnAboutFiles, setShouldNotWarnAboutFiles] = useState(false);\n\n  const { fileName, size, timestamp, mimeType } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const shouldForceDownload = document.innerMediaType === 'photo' && document.mediaSize\n    && !document.mediaSize.fromDocumentAttribute && !document.mediaSize.fromPreload;\n\n  const withMediaViewer = onMediaClick && document.innerMediaType && !shouldForceDownload;\n\n  useEffect(() => {\n    const fileEl = ref.current;\n    if (!withMediaViewer || !fileEl || !message) return;\n\n    const onHover = () => {\n      preloadDocumentMedia(message);\n    };\n\n    fileEl.addEventListener('mouseenter', onHover);\n\n    return () => {\n      fileEl.removeEventListener('mouseenter', onHover);\n    };\n  }, [withMediaViewer, message]);\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (isIpRevealingMedia({ mimeType, extension }) && shouldWarnAboutFiles) {\n      openFileIpDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleFileIpConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutFiles: !shouldNotWarnAboutFiles });\n    closeFileIpDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isFileIpDialogOpen}\n        onClose={closeFileIpDialog}\n        confirmHandler={handleFileIpConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutFiles}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutFiles}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): Complete<StateProps> => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const mediaData = mediaHash\n    ? (isStreaming ? mediaLoader.getProgressiveUrl(mediaHash)\n      : mediaLoader.getFromMemory(mediaHash)) : undefined;\n\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"userRatingNegativeWrapper\":\"_1NuEm_bF\",\"userRatingWrapper\":\"Ura8xDvW\",\"ratingNegativeIcon\":\"MwbjmAph\",\"ratingIcon\":\"lks6uKRt\",\"ratingLevel\":\"dco9YF7C\",\"userStatus\":\"jwNQ18lU\",\"getStatus\":\"xzCgzBx8\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserFullInfo, ApiUserStatus,\n} from '../../api/types';\nimport type { AnimationLevel } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState.ts';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { resolveTransitionName } from '../../util/resolveTransitionName.ts';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\nconst MAX_LEVEL_ICON = 90;\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userFullInfo?: ApiUserFullInfo;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    animationLevel: AnimationLevel;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userFullInfo,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n    openProfileRatingModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  const handleRatingClick = useLastCallback((level: number) => {\n    if (user) {\n      openProfileRatingModal({ userId: user.id, level });\n    }\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={oldLang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderUserRating() {\n    if (!userFullInfo?.starsRating) return undefined;\n\n    const level = userFullInfo.starsRating.level;\n    const isNegative = level < 0;\n\n    const onRatingClick = () => handleRatingClick(level);\n\n    if (isNegative) {\n      return (\n        <span className={styles.userRatingNegativeWrapper} onClick={onRatingClick}>\n          <Icon\n            name=\"rating-icons-negative\"\n            className={styles.ratingNegativeIcon}\n          />\n          <span className={styles.ratingLevel}>!</span>\n        </span>\n      );\n    }\n\n    const safeLevel = Math.max(level, 1);\n    const iconLevel = Math.min(safeLevel, MAX_LEVEL_ICON);\n    const iconName = (iconLevel < 10\n      ? `rating-icons-level${iconLevel}`\n      : `rating-icons-level${Math.floor(iconLevel / 10) * 10}`) as IconName;\n\n    return (\n      <span className={styles.userRatingWrapper} onClick={onRatingClick}>\n        <Icon\n          name={iconName}\n          className={styles.ratingIcon}\n        />\n        <span className={styles.ratingLevel}>{level}</span>\n      </span>\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          {renderUserRating()}\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition\n          activeKey={currentPhotoIndex}\n          name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, oldLang.isRtl)}\n        >\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={oldLang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={oldLang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={oldLang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): Complete<StateProps> => {\n    const user = selectUser(global, peerId);\n    const userFullInfo = user ? selectUserFullInfo(global, peerId) : undefined;\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? selectCustomEmoji(global, emojiStatus.documentId) : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userFullInfo,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      topic,\n      messagesCount: topic ? selectThreadMessagesCount(global, peerId, currentTopicId!) : undefined,\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): Complete<StateProps> => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectCustomEmoji, selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = selectCustomEmoji(global, documentId);\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            spellCheck={IS_TAURI ? false : undefined}\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): Complete<StateProps> => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): Complete<StateProps> => {\n    if (!typingStatus.userId) {\n      return { typingUser: undefined };\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): Complete<StateProps> => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { UNMUTE_TIMESTAMP } from '../../../config';\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n    updateTopicMutedState,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    updateTopicMutedState({ chatId, topicId: topic.id, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n    handleUnmute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute, handleUnmute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    let removeTauriListener: VoidFunction | undefined;\n    const setupTauriListener = async () => {\n      const tauriWindow = await window.tauri?.getCurrentWindow();\n      removeTauriListener = await tauriWindow.onResized(() => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n    };\n\n    if (IS_TAURI) {\n      window.tauri?.getCurrentWindow().then((tauriWindow) => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n      setupTauriListener();\n    }\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeTauriListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_TAURI && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n  selectCustomEmoji,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = selectCustomEmoji(global, customEmojiId);\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): Complete<StateProps> => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  threadId,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): Complete<StateProps> => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutFiles?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutFiles,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport { IS_ANDROID, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutFiles,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_TAURI,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            threadId={threadId}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutFiles={shouldWarnAboutFiles}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={oldLang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('FocusMessage')}\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): Complete<StateProps> => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutFiles } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig.starsSuggestedPostFutureMin;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutFiles,\n      outgoingStatus: isOutgoing ? selectOutgoingStatus(global, message, messageListType === 'scheduled') : undefined,\n      uploadProgress: typeof uploadProgress === 'number' ? uploadProgress : undefined,\n      focusDirection: isFocused ? focusDirection : undefined,\n      noFocusHighlight: isFocused ? noFocusHighlight : undefined,\n      isResizingContainer: isFocused ? isResizingContainer : undefined,\n      focusedQuote: isFocused ? focusedQuote : undefined,\n      focusedQuoteOffset: isFocused ? focusedQuoteOffset : undefined,\n      scrollTargetPosition: isFocused ? scrollTargetPosition : undefined,\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser, ApiWebPage } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMainUsername, getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, openChatWithDraft, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChatWithDraft({\n      chatId,\n      threadId,\n      text: {\n        text: `@${getMainUsername(botSender)} `,\n      },\n    });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  noCaptions?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  noCaptions,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (noCaptions) {\n      return lang('EmbeddedMessageNoCaption');\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","_ref","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","_ref2","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","_len","arguments","args","Array","_key","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","props","CustomSend","useModuleLoader","Bundles","Extra","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","reduce","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","isDisabled","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","window","innerWidth","requestMutation","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","passive","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","useRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","verifyAgeMin","appConfig","VERIFY_AGE_MIN_DEFAULT","shouldAlwaysShow","onAlwaysShowChanged","_jsxs","years","Checkbox","label","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","width","innerHeight","seed","Math","floor","Date","now","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","fill","in2","operator","scale","xChannelSelector","yChannelSelector","forceShowSelf","isSynced","userStatus","selectUserStatus","isSavedMessages","isSelf","self","areMessagesLoaded","selectChatMessages","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","isSavedDialog","adminMember","ripple","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","openMediaViewer","loadMoreProfilePhotos","hasAvatarMediaViewer","peerId","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","stopPropagation","isAvatarView","mediaIndex","origin","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","buildClassName","dir","isRtl","Avatar","size","storyViewerMode","onClick","FullNameTitle","withEmojiStatus","DotAnimation","content","subtitleKey","TypingStatus","isSystemBot","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","isSelected","isMobile","folderIds","chatFoldersById","activeChatFolder","activeFolderId","orderedFolderIds","isFolder","isAll","ALL_FOLDER_ID","folder","hasColor","color","visibleFolderIds","slice","remainingCount","folderId","getApiPeerColorClass","renderTextWithEntities","text","entities","noCustomEmojiPlayback","noTitleAnimations","emojiSize","isPreview","previewMessageId","selectChat","getChatFolderIds","areTagsEnabled","chatFolders","isPremium","selectIsCurrentUserPremium","lastMessageId","selectChatLastMessageId","lastMessage","selectChatMessage","selectChatLastMessage","isOutgoing","forwardInfo","savedDialogSender","fromId","selectPeer","messageSender","selectSender","lastMessageSender","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","isSelectedForum","isForum","selectTabState","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","storyData","lastMessageStory","selectPeerStory","isAccountFrozen","selectIsCurrentUserFrozen","monoforumChannel","selectMonoforumChannel","isMuted","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topics","topicsById","orderDiff","animationType","isPinned","observeIntersection","offsetTop","onDragEnter","withTags","openChat","openSavedDialog","toggleChatInfo","focusLastMessage","focusMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","updateChatMutedState","useAppLayout","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","useEnsureMessage","shouldRenderTags","renderSubtitle","ref","useChatListEntry","statefulMediaContent","groupStatefulContent","story","noForumTitle","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","handleClick","noForumTopicPanel","value","forceOnHeavyAnimation","force","shouldReplaceHistory","handleDragEnter","preventDefault","handleDelete","handleMute","handleUnmute","mutedUntil","UNMUTE_TIMESTAMP","handleChatFolderChange","handleReport","messageIds","contextActions","useChatContextActions","isIntersecting","useIsIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","href","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","isUserId","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","isCallActive","isCallNotEmpty","ChatCallStatus","monoforumBadgeClassName","LastMessageMeta","outgoingStatus","draftDate","date","hasMiniApp","hasMainMiniApp","ChatTags","DeleteChatModal","onCloseAnimationEnd","MuteChatModal","ChatFolderModal","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","settings","byKey","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","loadPeerStoriesByIds","loadStoryThrottled","throttled","throttle","storyIds","resetInput","applyIosAutoCapitalizationFix","focus","IS_IOS","createElement","classList","add","body","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","handlePaste","async","clipboardData","input","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","textContents","querySelectorAll","getElementsByTagName","removeAttribute","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","isWordDocument","hasText","shouldSetAttachments","newAttachments","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","pluralValue","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","default","start","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","volume","cb","requestMeasure","subscribeToAnalyzer","stop","onstop","blob","Blob","duration","round","onerror","delayStop","max","setTimeout","pause","AttachmentModal","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","theme","shouldCollectDebugLogs","canEditMedia","editingMessage","paidMessagesStars","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","updateAttachmentSettings","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","validateFiles","handleQuickSelect","shouldCompress","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","oldLang","ResponsiveHoverButton","onActivate","ariaLabel","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","_Fragment","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","button","renderKeyboardButtonText","noCompact","j","Button","textRef","textEl","scrollWidth","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","isForwarding","forwardedMessages","replyInfo","suggestedPostInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","selectForwardedSender","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","isContextMenuDisabled","isReplyToDiscussion","isMediaNsfw","selectIsMediaNsfw","forwardedMessagesCount","isCurrentUserPremium","isInChangingRecipientMode","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","updateDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","isShown","shouldRender","transitionClassNames","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","renderingSender","useCurrentOrPrev","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","webpageType","isEditing","toggleMessageWebPage","isInvertedMedia","isSmallerMedia","webPageMediaSize","useShowTransition","withShouldRender","hasMediaSizeOptions","hasLargeMedia","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","useThumbnail","previewMedia","getWebPagePhoto","getWebPageVideo","getWebPageAudio","getWebPageDocument","previewMediaHash","getMediaHash","previewMediaUrl","useMedia","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handleBeforeContextMenu","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","PeerColorWrapper","noUserColors","onMouseDown","src","siteName","url","description","webPage","photo","video","audio","MainButtonState","_ref5","chatBot","selectBot","isChatWithBot","isChatWithUser","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAppConfigLoaded","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","selectTheme","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","useSignal","isMounted","setIsMounted","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowSize","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isChatSuperGroup","isChatPublic","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","setShouldPaidMessageAutoApprove","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","shouldPrepend","selection","getSelection","messageInput","rangeCount","getRangeAt","insertHtmlInSelection","dispatchEvent","Event","bubbles","newFirstWord","shouldReplace","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","filename","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","shouldUpdateSuggestedPost","EDITABLE_INPUT_CSS_SELECTOR","customEmojiIds","entity","documentId","useLayoutEffect","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","link","useLoadLinkPreview","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","formatMediaDuration","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","_ref3","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","voice","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","handleToDoListSend","todo","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleSuggestPostClick","price","currency","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","adminRights","anonymous","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","fullClassName","handleToggleReaction","reaction","emoticon","selectCustomEmoji","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","prevShouldRenderPaidBadge","usePrevious","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","filterUnits","dy","stdDeviation","d","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","slideClassName","direction","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","nonInteractive","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","messagePriceInStars","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","peers","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","isRestricted","selectIsChatRestricted","usePrevDuringAnimation","prev","timeoutRef","isCurrentPresent","isPrevPresent","clearTimeout","wasTopicOpened","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","handleOpenApp","extractCurrentThemeParams","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","isOwn","isInWebPage","noAvatars","canAutoLoad","canAutoPlay","uploadProgress","forcedWidth","dimensions","asForwarded","isDownloading","isProtected","lastPlaybackTimestamp","clickArg","observeIntersectionForLoading","observeIntersectionForPlaying","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","mediaType","localBlobUrl","blobUrl","shouldShowSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","getVideoMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","withBlurredBackground","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRenderSpinner","noMountTransition","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTarget","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","media","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","canPlay","defaultMuted","muted","loop","playsInline","disablePictureInPicture","draggable","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","isGif","SensitiveContentConfirmModal","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","withPortal","onLoad","onSearchOpen","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","isArchived","cancelDelayedCallbacks","container","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","index","isLast","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","String","opacity","transform","ghostRevealName","createDelayedCallback","contains","ANIMATION_END_DELAY","animateClosing","ribbon","ribbonStyles","sourceEl","oncontextmenu","stopEvent","sourceCanvas","canvas","getContext","drawImage","ms","timeout","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","calculateMediaDimensions","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","messages","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","selectWebPageFromMessage","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","formattedDescription","getMessageTextWithFallback","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","Link","SafeLink","formatPastTimeShort","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","DEFAULT_THRESHOLD","onStart","onEnd","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","end","cancel","useUnmountCleanup","onMouseUp","onTouchStart","onTouchEnd","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","isRibbonShown","isArchivedRibbonShown","chatsById","chats","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","useStoryPreloader","beginHeavyAnimation","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","getChatTitle","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","openSettingsScreen","handleEditFolder","screen","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","a","b","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","isText","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","digit","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","clientX","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","IS_TAURI","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","UnconfirmedSession","FrozenAccountNotification","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","Loading","EmptyFolder","inputSelector","getRange","setRange","onSelectionChange","Element","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","onDrop","rx","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","DropTarget","reducer","initialState","reducerRef","dispatch","DEFAULT_TEXT","withSticker","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","noLoop","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","last","DAYS","_","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","role","tabIndex","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","effectSticker","randomEffect","random","getStickerMediaHash","ApiMediaFormat","BlobUrl","effectHash","column","canGiftPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","forceAlways","shouldLoop","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","updateTopicMutedState","loadPeerStories","openMapModal","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleToggleNotifications","MUTE_INDEFINITE_TIMESTAMP","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","renderUsernames","allowSelection","UserBirthday","Switcher","inactive","BusinessHours","iconId","usernameList","otherUsernames","usernameLinks","s","idx","dataTransferItems","traverseFileTreePromise","item","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isChatGroup","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","confirmPaymentMessage","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","isAnonymousForwardsChat","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","detectedLanguage","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","requestForcedReflow","currentHeight","handleResize","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transition","isPanelOpen","path","DEFAULT_HANDLERS","play","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","TOPIC_ICON_SIZE","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","TopicIcon","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","isInSelectMode","shouldAffectAppendix","getPhotoMediaHash","prevMediaData","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","dimensionsStyle","fileSelector","accept","noMultiple","onchange","click","extension","timestamp","thumbnailDataUri","previewData","smaller","isSelectable","actionIcon","onDateClick","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","mediaHash","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","withTranslucentThumbs","senderName","getMessageSenderName","renderSummary","Opacity","Move","ChatForumLastMessage","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","Inline","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","time","fastSeek","setVolume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","stroke","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","parseAudioMetadata","uniqueId","shouldSendCompressed","attach","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","senderId","preloadedHashes","LimitedMap","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutFiles","onMediaClick","downloadMedia","setSharedSettingOption","isFileIpDialogOpen","openFileIpDialog","closeFileIpDialog","shouldNotWarnAboutFiles","setShouldNotWarnAboutFiles","fileName","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","shouldForceDownload","innerMediaType","mediaSize","fromDocumentAttribute","fromPreload","fileEl","onHover","mediaContainer","getMessageDocumentVideo","getMessageDocumentPhoto","shouldSkipPhoto","fetch","IS_PROGRESSIVE_SUPPORTED","videoEl","naturalWidth","naturalHeight","updateChatMessage","setGlobal","preloadDocumentMedia","handleDownload","originMessage","isIpRevealingMedia","handleFileIpConfirm","handleDateClick","isDocumentVideo","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","r","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","formatTemperature","temperatureC","ownProps","restrictedEmoji","selectRestrictedEmoji","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","MediaAreaSuggestedReaction","MediaAreaWeather","lastCallback","onBeforeUnload","useScrollNotch","deps","selector","isScrolled","toggleExtraClass","addExtraClass","removeExtraClass","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","AvatarList","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","useMessageTranslation","chatTranslations","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translatedText","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","onClickTranscribe","onHideTranscription","ry","OneTimeModal","mediaDuration","selectMessageMediaDuration","canDownload","canTranscribe","autoPlay","onPlay","onPause","onReadMedia","transcribeAudio","openOneTimeMediaModal","contentAudio","mediaSource","isVoice","isSeeking","isActivated","setIsActivated","coverHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","isMessageLocal","reversePlayProgress","isOwnMessage","isReverse","withAvatar","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","captureEvents","onCapture","onRelease","onDrag","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","unloadVideo","checkIfStreamingSupported","buffer","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","delay","isHtmlAllowed","isStreaming","Progressive","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","canPlayVideo","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","specialIcon","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","animationLevel","emojiStatus","emojiStatusSticker","emojiStatusSlug","isForMonoforum","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openProfileRatingModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","handleRatingClick","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","resolveTransitionName","ProfilePhoto","canCopyTitle","isSystemBotChat","renderUserRating","isReadDateRestrictedByMe","renderStatus","starsRating","onRatingClick","safeLevel","iconLevel","iconName","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","isGraph","obj","openChatWithInfo","openStoryViewer","toggleStoriesHidden","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","newHeight","isOverflown","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","spellCheck","onChange","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","getMessageHtmlId","decoding","shouldUseDraft","MessageOutgoingStatus","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","strokeDashOffset","stopPlaying","capturePlaying","togglePlaying","isPriority","onEnded","cx","cy","replaceWithTeact","STARS_ICON_PLACEHOLDER","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","SponsoredContextMenu","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","onTransitionEnd","GroupChatInfo","HeaderActions","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeTauriListener","tauri","getCurrentWindow","tauriWindow","onResized","setupTauriListener","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","getSingularPaidMedia","extendedMedia","singularMedia","accumulate","initValue","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","paidMedia","getMessageContent","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","pictogramUrl","handleFastClick","peerColor","shouldReset","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","selectCanAutoPlayMedia","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","forceLoadPreview","quality","forcePreview","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","getMessageText","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","renderIcon","RE_TME_LINK","buttonType","invoice","getMessageInvoice","isTest","photoUrl","getWebDocumentHash","crossOrigin","forceAspectRatio","formatCurrency","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","formatCountdownShort","renderPin","pinClassName","heading","venueType","iconSrc","mapPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","isImported","containerClassName","isVideoProcessingPending","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","isClickable","isBought","starsAmount","getPercentage","total","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","onSendVote","loadMessage","openPollResults","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","PollOption","withEffect","onStopEffect","effectRef","hasEffect","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","imageHash","imgBlobUrl","isSinglePeer","isSingleStory","MediaAreaOverlay","connectionState","BaseStory","selectPeerStories","targetUser","thumbUrl","todoList","toggleTodoCompleted","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","itemId","handleTaskLabelClick","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","gift","stickerRef","backdrop","model","pattern","getGiftAttributes","isHover","markHover","unmarkHover","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","messageWebPage","backgroundEmojiId","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","linkTimestamp","handleOpenTelegramLink","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getPhotoFullDimensions","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","WebPageUniqueGift","shouldSkipModal","isSafe","Document","caption","isRectangular","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","selectFullWebPageFromMessage","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","selectMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","minFutureTime","starsSuggestedPostFutureMin","isReplyMediaNsfw","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","Album","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","detectLanguage","useTextLanguage","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","MessageMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","FactCheck","getMessageWebPage","WebPage","PaidMediaOverlay","shouldRenderSenderName","renderForwardTitle","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","isAccepted","isRejected","isSuggestedPostExpired","scheduleDate","onCopy","onDoubleClick","onMouseMove","shouldReadMedia","TopicChip","EmbeddedMessage","forwardSender","EmbeddedStory","Sticker","AnimatedCustomEmoji","AnimatedEmoji","MessagePhoneCall","RoundVideo","Story","StoryMention","Contact","Poll","TodoList","Giveaway","Game","InvoiceMediaPreview","Invoice","Location","CommentButton","MessageAppendix","InlineButtons","isOutside","targetHref","InputText","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","formatScheduledDateTime","getMediaContentTypeDescription","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}